# Language pt-BR translations for Weld_-_JSR-299_Reference_Implementation package.
# Automatically generated, 2009.
# 
# Bruno Leonardo Gonçalves <brunolmfg@gmail.com>, 2011. #zanata
# Bruno Leonardo Gonçalves <brunolmfg@gmail.com>, 2012. #zanata
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2012-01-16T16:07:16\n"
"PO-Revision-Date: 2009-12-19 18:06-0300\n"
"Last-Translator: João Paulo Viragine <joao.viragine@redhat.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: \n"

#. Tag: title
#, no-c-format
msgid "Java EE component environment resources"
msgstr "Recursos do ambiente de componentes Java EE"

#. Tag: para
#, no-c-format
msgid ""
"Java EE 5 already introduced some limited support for dependency injection, "
"in the form of component environment injection. A component environment "
"resource is a Java EE component, for example a JDBC datasource, JMS queue or"
" topic, JPA persistence context, remote EJB or web service."
msgstr ""
"Java EE 5 já tinha introduzido um suporte limitado a injeção de "
"dependências, na forma de injeção de componentes do ambiente. Um recurso do "
"ambiente de componentes é um componente Java EE, por exemplo um datasource "
"JDBC, uma fila ou um tópico JMS, um contexto de persistência JPA, um EJB "
"remoto ou um web service."

#. Tag: para
#, no-c-format
msgid ""
"Naturally, there is now a slight mismatch with the new style of dependency "
"injection in CDI. Most notably, component environment injection relies on "
"string-based names to qualify ambiguous types, and there is no real "
"consistency as to the nature of the names (sometimes a JNDI name, sometimes "
"a persistence unit name, sometimes an EJB link, sometimes a non-portable "
"\"mapped name\"). Producer fields turned out to be an elegant adaptor to "
"reduce all this complexity to a common model and get component environment "
"resources to participate in the CDI system just like any other kind of bean."
msgstr ""
"Naturalmente, agora existe uma leve incompatibilidade com o novo estilo de "
"injeção de dependência em CDI. Mais notadamente, a injeção de componentes no"
" ambiente se baseia em nomes para qualificar tipos ambíguos, e não há real "
"consistência quanto à natureza dos nomes (algumas vezes um nome JNDI, outras"
" vezes um nome de unidade de persistência, às vezes um link EJB, e por vezes"
" um \"nome mapeado\" não-portável). Os campos produtores acabou se tornando "
"um adaptador elegante para reduzir toda esta complexidade a um modelo comum "
"e obter recursos do ambiente de componentes para participarem do sistema CDI"
" como qualquer outra categoria de bean."

#. Tag: para
#, no-c-format
msgid ""
"Fields have a duality in that they can both be the target of Java EE "
"component environment injection and be declared as a CDI producer field. "
"Therefore, they can define a mapping from a string-based name in the "
"component environment, to a combination of type and qualifiers used in the "
"world of typesafe injection. We call a producer field that represents a "
"reference to an object in the Java EE component environment a "
"<emphasis>resource</emphasis>."
msgstr ""
"Os campos possuem uma dualidade em que eles podem tanto ser o alvo de uma "
"injeção de componente do ambiente Java EE quanto ser declarado como um campo"
" produtor da CDI. Por esse motivo, eles podem definir um mapeamento a partir"
" de nomes textuais no ambiente de componentes, até uma combinação de tipo e "
"qualificadores usados no mundo da injeção typesafe. Nós chamamos um campo "
"produtor que representa uma referência a um objeto no ambiente de "
"componentes Java EE de <emphasis>recurso</emphasis>."

#. Tag: title
#, no-c-format
msgid "Defining a resource"
msgstr "Definindo um recurso"

#. Tag: para
#, no-c-format
msgid ""
"The CDI specification uses the term <emphasis>resource</emphasis> to refer, "
"generically, to any of the following kinds of object which might be "
"available in the Java EE component environment:"
msgstr ""
"A especificação CDI utiliza o termo <emphasis>recurso</emphasis> para "
"referir, genericamente, a qualquer das seguintes categorias de objeto que "
"podem estar disponíveis no ambiente de componentes Java EE:"

#. Tag: para
#, no-c-format
msgid ""
"JDBC <literal>Datasource</literal>s, JMS <literal>Queue</literal>s, "
"<literal>Topic</literal>s and <literal>ConnectionFactory</literal>s, "
"JavaMail <literal>Session</literal>s and other transactional resources "
"including JCA connectors,"
msgstr ""
"<literal>Datasource</literal>s do JDBC, <literal>Queue</literal>s, "
"<literal>Topic</literal>s e <literal>ConnectionFactory</literal>s do JMS, "
"<literal>Session</literal>s do JavaMail e outros recursos transacionais "
"incluindo os conectores JCA,"

#. Tag: para
#, no-c-format
msgid ""
"JPA <literal>EntityManager</literal>s and "
"<literal>EntityManagerFactory</literal>s,"
msgstr ""
"<literal>EntityManager</literal>s e <literal>EntityManagerFactory</literal>s"
" do JPA,"

#. Tag: para
#, no-c-format
msgid "remote EJBs, and"
msgstr "EJBs remotos, e"

#. Tag: para
#, no-c-format
msgid "web services"
msgstr "web services"

#. Tag: para
#, no-c-format
msgid ""
"We declare a resource by annotating a producer field with a component "
"environment injection annotation: <literal>@Resource</literal>, "
"<literal>@EJB</literal>, <literal>@PersistenceContext</literal>, "
"<literal>@PersistenceUnit</literal> or <literal>@WebServiceRef</literal>."
msgstr ""
"Declaramos um recurso ao anotar um campo produtor com uma anotação de "
"injeção de componentes de ambiente: <literal>@Resource</literal>, "
"<literal>@EJB</literal>, <literal>@PersistenceContext</literal>, "
"<literal>@PersistenceUnit</literal> ou <literal>@WebServiceRef</literal>."

#. Tag: programlisting
#, no-c-format
msgid ""
"@Produces @WebServiceRef(lookup=\"java:app/service/Catalog\")\n"
"Catalog catalog;"
msgstr ""
"@Produces @WebServiceRef(lookup=\"java:app/service/Catalog\")\n"
"Catalog catalog;"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Produces @Resource(lookup=\"java:global/env/jdbc/CustomerDatasource\") \n"
"@CustomerDatabase Datasource customerDatabase;"
msgstr ""
"@Produces @Resource(lookup=\"java:global/env/jdbc/CustomerDatasource\") \n"
"@CustomerDatabase Datasource customerDatabase;"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Produces @PersistenceContext(unitName=\"CustomerDatabase\")\n"
"@CustomerDatabase EntityManager customerDatabasePersistenceContext;"
msgstr ""
"@Produces @PersistenceContext(unitName=\"CustomerDatabase\")\n"
"@CustomerDatabase EntityManager customerDatabasePersistenceContext;"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Produces @PersistenceUnit(unitName=\"CustomerDatabase\") \n"
"@CustomerDatabase EntityManagerFactory customerDatabasePersistenceUnit;"
msgstr ""
"@Produces @PersistenceUnit(unitName=\"CustomerDatabase\") \n"
"@CustomerDatabase EntityManagerFactory customerDatabasePersistenceUnit;"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Produces @EJB(ejbLink=\"../their.jar#PaymentService\") \n"
"PaymentService paymentService;"
msgstr ""
"@Produces @EJB(ejbLink=\"../their.jar#PaymentService\") \n"
"PaymentService paymentService;"

#. Tag: para
#, no-c-format
msgid "The field may be static (but not final)."
msgstr "O campo pode ser estático (mas não final)."

#. Tag: para
#, no-c-format
msgid "A resource declaration really contains two pieces of information:"
msgstr "Uma declaração de recurso contém duas peças de informação:"

#. Tag: para
#, no-c-format
msgid ""
"the JNDI name, EJB link, persistence unit name, or other metadata needed to "
"obtain a reference to the resource from the component environment, and"
msgstr ""
"o nome JNDI, link EJB, nome de unidade de persistência, ou outro metadado "
"necessário para obter uma referência ao recurso a partir do ambiente de "
"componentes, e"

#. Tag: para
#, no-c-format
msgid ""
"the type and qualifiers that we will use to inject the reference into our "
"beans."
msgstr ""
"o tipo e os qualificadores que usaremos para injetar a referência dentro de "
"nossos beans."

#. Tag: para
#, no-c-format
msgid ""
"It might feel strange to be declaring resources in Java code. Isn't this "
"stuff that might be deployment-specific? Certainly, and that's why it makes "
"sense to declare your resources in a class annotated "
"<literal>@Alternative</literal>."
msgstr ""
"Pode parecer estranho declarar recursos no código Java. Não podem ser coisas"
" específicas da implantação? Certamente, e é por isso que faz sentido "
"declarar seus recursos em uma classe anotada com "
"<literal>@Alternative</literal>."

#. Tag: title
#, no-c-format
msgid "Typesafe resource injection"
msgstr "Injeção typesafe de recursos"

#. Tag: para
#, no-c-format
msgid "These resources can now be injected in the usual way."
msgstr "Este recursos agora podem ser injetados na maneira habitual."

#. Tag: programlisting
#, no-c-format
msgid "@Inject Catalog catalog;"
msgstr "@Inject Catalog catalog;"

#. Tag: programlisting
#, no-c-format
msgid "@Inject @CustomerDatabase Datasource customerDatabase;"
msgstr "@Inject @CustomerDatabase Datasource customerDatabase;"

#. Tag: programlisting
#, no-c-format
msgid "@Inject @CustomerDatabase EntityManager customerDatabaseEntityManager;"
msgstr ""
"@Inject @CustomerDatabase EntityManager customerDatabaseEntityManager;"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Inject @CustomerDatabase EntityManagerFactory "
"customerDatabaseEntityManagerFactory;"
msgstr ""
"@Inject @CustomerDatabase EntityManagerFactory "
"customerDatabaseEntityManagerFactory;"

#. Tag: programlisting
#, no-c-format
msgid "@Inject PaymentService paymentService;"
msgstr "@Inject PaymentService paymentService;"

#. Tag: para
#, no-c-format
msgid ""
"The bean type and qualifiers of the resource are determined by the producer "
"field declaration."
msgstr ""
"O tipo do bean e os qualificadores do recurso são determinados pela "
"declaração do campo produtor."

#. Tag: para
#, no-c-format
msgid ""
"It might seem like a pain to have to write these extra producer field "
"declarations, just to gain an additional level of indirection. You could "
"just as well use component environment injection directly, right? But "
"remember that you're going to be using resources like the "
"<literal>EntityManager</literal> in several different beans. Isn't it nicer "
"and more typesafe to write"
msgstr ""
"Pode parecer trabalhoso ter que escrever estas declarações de campos "
"produtores extras, apenas para ganhar um nível adicional de indireção. Você "
"poderia muito bem usar uma injeção de componente do ambiente diretamente, "
"certo? Mas lembre-se que você vai usar recursos como o "
"<literal>EntityManager</literal> em vários beans diferentes. Não é mais "
"agradável e mais typesafe escrever"

#. Tag: programlisting
#, no-c-format
msgid "@Inject @CustomerDatabase EntityManager"
msgstr "@Inject @CustomerDatabase EntityManager"

#. Tag: para
#, no-c-format
msgid "instead of"
msgstr "em vez de"

#. Tag: programlisting
#, no-c-format
msgid "@PersistenceContext(unitName=\"CustomerDatabase\") EntityManager"
msgstr "@PersistenceContext(unitName=\"CustomerDatabase\") EntityManager"

#. Tag: para
#, no-c-format
msgid "all over the place?"
msgstr "em todos os lugares?"
