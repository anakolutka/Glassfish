# Language fr-FR translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-05-01T13:53:43\n"
"PO-Revision-Date: 2009-02-07 14:53+0100\n"
"Last-Translator: Vincent Latombe <vincent.latombe@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, fuzzy, no-c-format
msgid "Defining beans using XML"
msgstr "Définir des Web Beans en utilisant XML"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"So far, we&#39;ve seen plenty of examples of beans declared using "
"annotations. However, there are a couple of occasions when we can&#39;t use "
"annotations to define the bean:"
msgstr ""
"Jusqu'ici, nous avons vu plein d'exemples de Web Beans déclarés à l'aide "
"d'annotations. Cependant, il y a quelques cas où nous ne pouvons pas "
"utiliser les annotations pour définir un Web Bean:"

#. Tag: para
#, no-c-format
msgid "when the implementation class comes from some preexisting library, or"
msgstr "quand la class d'implémentation provient d'une librairie existante, ou"

#. Tag: para
#, fuzzy, no-c-format
msgid "when there should be multiple beans with the same implementation class."
msgstr ""
"quand il y aurait plusieurs Web Beans ayant la même classe d'implémentation."

#. Tag: para
#, no-c-format
msgid ""
"One way to address these problems is to write a producer method. Weld offers "
"another option: declare the bean using XML. This feature will hopefully one "
"day be part of the CDI specification. Until then, it remains a portable "
"extension."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Many frameworks use XML to provide metadata relating to Java classes. "
"However, Weld uses a very different approach to specifying the names of Java "
"classes, fields or methods to most other frameworks. Instead of writing "
"class and member names as the string values of XML elements and attributes, "
"Weld lets you use the class or member name as the name of the XML element."
msgstr ""
"De nombreux frameworks utilisent XML pour fournir des métadonnées relatives "
"aux classes Java. Cependant, les Web Beans utilisent une approche très "
"différente pour spécifier les noms des classes, champs ou méthodes Java aux "
"autres frameworks. Au lieu d'écrire les noms des classes et des membres dans "
"des éléments et attributs XML, les Web Beans vous permettent d'utiliser le "
"nom de class ou de membre comme nom de l'élément XML."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The advantage of this approach is that you can write an XML schema that "
"prevents spelling errors in your XML document. It&#39;s even possible for a "
"tool to generate the XML schema automatically from the compiled Java code. "
"Or, an integrated development environment could perform the same validation "
"without the need for the explicit intermediate generation step."
msgstr ""
"L'avantage de cette méthode est que vous pouvez écrire une schéma XML qui "
"empêche les erreurs de saisies dans votre document XML. Il est même possible "
"de générer le schéma XML automatiquement à partir du code Java compilé, "
"grâce à un outil. Ou, un environnement de développement intégré pourrait "
"effectuer la même validation sans avoir besoin d'une étape de génération "
"explicite."

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring beans"
msgstr "Déclarer des classes Web Beans"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For each Java package, Weld defines a corresponding XML namespace. The "
"namespace is formed by prepending <literal>urn:java:</literal> to the Java "
"package name. For the package <literal>com.mydomain.myapp</literal>, the XML "
"namespace is <literal>urn:java:com.mydomain.myapp</literal>."
msgstr ""
"Pour chaque paquetage Java, les Web Beans définissent un espace de nom XML "
"correspondant. L'espace de nom est fabriqué en préfixant le nom du paquetage "
"Java par <literal>urn:java:</literal>. Pour le paquetage <literal>com."
"mydomain.myapp</literal>, l'espace de nom XML est <literal>urn:java:com."
"mydomain.myapp</literal>."

#. Tag: para
#, no-c-format
msgid ""
"Java types belonging to a package are referred to using an XML element in "
"the namespace corresponding to the package. The name of the element is the "
"name of the Java type. Fields and methods of the type are specified by child "
"elements in the same namespace. If the type is an annotation, members are "
"specified by attributes of the element."
msgstr ""
"Les types Java appartenant à un paquetage sont référencés dans un élément "
"XML du namespace correspondant au paquetage. Le nom de l'élément est le nom "
"du type Java. Les champs et méthodes du type sont spécifiés par des éléments "
"enfants dans le même espace de noms. Si le type est une annotation, les "
"membres sont spécifiés par des attributs de l'élément."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For example, the element <literal>&#60;util:Date/&#62;</literal> in the "
"following XML fragment refers to the class <literal>java.util.Date</literal>:"
msgstr ""
"Par exemple, l'élément <literal>&lt;util:Date/&gt;</literal> dans le "
"fragment XML suivant référencela class <literal>java.util.Date</literal>:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"And this is all the code we need to declare that <literal>Date</literal> is "
"a bean! An instance of <literal>Date</literal> may now be injected by any "
"other bean:"
msgstr ""
"Et ceci est tout le code dont nous avons besoin pour déclarer que "
"<literal>Date</literal> est un simple Web  Bean! Un instance de "
"<literal>Date</literal> peut maintenant être injectée par n'importe quel "
"autre Web Bean:"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring bean metadata"
msgstr "Déclarer les métadonnées d'un Web Bean"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"We can declare the scope, deployment type and interceptor binding types "
"using direct child elements of the bean declaration:"
msgstr ""
"Nous pouvons déclarer la portée, le type de déploiement et les types de "
"liaison d'intercepteurs en utilisant les éléments enfants directs de la "
"déclaration du Web Bean:"

#. Tag: para
#, fuzzy, no-c-format
msgid "We use exactly the same approach to specify names and qualifiers:"
msgstr ""
"Nous utilisons exactement la même approche pour spécifier les noms et les "
"types de liaison:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Where <literal>@Login</literal> and <literal>@SystemStart</literal> are "
"qualifier annotations types."
msgstr ""
"Où <literal>@Login</literal> et <literal>@SystemStart</literal> sont des "
"types d'annotations de liaison."

#. Tag: para
#, fuzzy, no-c-format
msgid "As usual, a bean may support multiple qualifier types:"
msgstr "Comme d'habitude, un Web Bean supporte plusieurs types de liaison:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Interceptors and decorators are beans as well, so they may be declared just "
"like any other bean:"
msgstr ""
"Les intercepteurs et les décorateurs sont juste de Web Beans simples, donc "
"ils peuvent être déclarés comme n'importe quel Web Bean simple:"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring bean members"
msgstr "Déclarer des membres de Web Beans"

#. Tag: para
#, no-c-format
msgid "TODO!"
msgstr "TODO!"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring inline beans"
msgstr "Déclarer des Web Beans à la volée"

#. Tag: para
#, fuzzy, no-c-format
msgid "Weld lets us define a bean at an injection point. For example:"
msgstr ""
"Les Web Beans nous permettent de définir un Web Bean à un point d'injection. "
"Par exemple:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>&#60;Name&#62;</literal> element declares a bean of scope "
"<literal>@Dependent</literal> and class <literal>Name</literal>, with a set "
"of initial field values. This bean has a special, container-generated "
"qualifier and is therefore injectable only to the specific injection point "
"at which it is declared."
msgstr ""
"L'élément <literal>&lt;Name&gt;</literal> déclare un Web Bean simple de "
"portée <literal>@Dependant</literal> et la classe <literal>Name</literal>, "
"avec un ensembl de valeurs initials sur ses champs. Ce Web Bean a une "
"liaison spéciale générée par le conteneur, et est par conséquent injectable "
"seulement au point d'injection spécifique où il a été déclaré."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This simple but powerful feature allows the Weld XML format to be used to "
"specify whole graphs of Java objects. It&#39;s not quite a full databinding "
"solution, but it&#39;s close!"
msgstr ""
"Cette fonctionnalité simple, mais puissante permet au format XML des Web "
"Beans d'être utilisé pour spécifier des graphes entiers d'objets Java. Ce "
"n'est pas une solution intégrale pour la liaison de données, mais cela s'en "
"approche!"

#. Tag: title
#, no-c-format
msgid "Using a schema"
msgstr "Utiliser un schéma"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If we want our XML document format to be authored by people who aren&#39;t "
"Java developers, or who don&#39;t have access to our code, we need to "
"provide a schema. There&#39;s nothing specific to Weld about writing or "
"using the schema."
msgstr ""
"Si nous voulons que le format de notre document XML soit écrit par des gens "
"qui ne sont pas des développeurs Java, ou qui n'ont pas accès à notre code, "
"nous devons fournir un schéma. Ecrire ou utiliser le schéma n'a rien de "
"spécifique aux Web Beans."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Writing an XML schema is quite tedious. Therefore, the Weld project will "
"provide a tool which automatically generates the XML schema from compiled "
"Java code."
msgstr ""
"Ecrire un schéma XML est assez ennuyeux. C'est pour cela que le projet Web "
"Beans RI fournira un outil qui génèrera automatiquement le schéma XML à "
"partir du code Java compilé."

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<beans xmlns=\"urn:java:javax.beans\"\n"
#~ "   xmlns:util=\"urn:java:java.util\">\n"
#~ "   <util:Date/>\n"
#~ "</beans>]]>"
#~ msgstr ""
#~ "<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
#~ "          xmlns:util=\"urn:java:java.util\">\n"
#~ "\n"
#~ "    <util:Date/>\n"
#~ "\n"
#~ "</WebBeans>]]>"

#, fuzzy
#~ msgid "<![CDATA[private @Inject Date date;]]>"
#~ msgstr "<![CDATA[@Current Date date]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:ShoppingCart>\n"
#~ "   <SessionScoped/>\n"
#~ "   <myfwk:Transactional requiresNew=\"true\"/>\n"
#~ "   <myfwk:Secure/>\n"
#~ "</myapp:ShoppingCart>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:ShoppingCart>\n"
#~ "    <SessionScoped/>\n"
#~ "    <myfwk:Transactional requiresNew=\"true\"/>\n"
#~ "    <myfwk:Secure/>\n"
#~ "</myapp:ShoppingCart>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<util:Date>\n"
#~ "   <Named>currentTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "   <SessionScoped/>\n"
#~ "   <myapp:Login/>\n"
#~ "   <Named>loginTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "   <ApplicationScoped/>\n"
#~ "   <myapp:SystemStart/>\n"
#~ "   <Named>systemStartTime</Named>\n"
#~ "</util:Date>]]>"
#~ msgstr ""
#~ "<![CDATA[<util:Date>\n"
#~ "    <Named>currentTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "    <SessionScoped/>\n"
#~ "    <myapp:Login/>\n"
#~ "    <Named>loginTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "    <ApplicationScoped/>\n"
#~ "    <myapp:SystemStart/>\n"
#~ "    <Named>systemStartTime</Named>\n"
#~ "</util:Date>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[private @Inject Date currentTime;\n"
#~ "private @Login Date loginTime;\n"
#~ "private @SystemStart Date systemStartTime;]]>"
#~ msgstr ""
#~ "<![CDATA[@Current Date currentTime;\n"
#~ "@Login Date loginTime;\n"
#~ "@SystemStart Date systemStartTime;]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
#~ "   <myapp:PayByCheque/>\n"
#~ "   <myapp:Asynchronous/>\n"
#~ "</myapp:AsynchronousChequePaymentProcessor>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
#~ "    <myapp:PayByCheque/>\n"
#~ "    <myapp:Asynchronous/>\n"
#~ "</myapp:AsynchronousChequePaymentProcessor>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myfwk:TransactionInterceptor>\n"
#~ "   <Interceptor/>\n"
#~ "   <myfwk:Transactional/>\n"
#~ "</myfwk:TransactionInterceptor>]]>"
#~ msgstr ""
#~ "<![CDATA[<myfwk:TransactionInterceptor>\n"
#~ "    <Interceptor/>\n"
#~ "    <myfwk:Transactional/>\n"
#~ "</myfwk:TransactionInterceptor>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:System>\n"
#~ "   <ApplicationScoped/>\n"
#~ "   <myapp:admin>\n"
#~ "      <myapp:Name>\n"
#~ "         <myapp:firstname>Gavin</myapp:firstname>\n"
#~ "         <myapp:lastname>King</myapp:lastname>\n"
#~ "         <myapp:email>gavin@hibernate.org</myapp:email>\n"
#~ "      </myapp:Name>\n"
#~ "   </myapp:admin>\n"
#~ "</myapp:System>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:System>\n"
#~ "    <ApplicationScoped/>\n"
#~ "    <myapp:admin>\n"
#~ "        <myapp:Name>\n"
#~ "            <myapp:firstname>Gavin</myapp:firstname>\n"
#~ "            <myapp:lastname>King</myapp:lastname>\n"
#~ "            <myapp:email>gavin@hibernate.org</myapp:email>\n"
#~ "        </myapp:Name>\n"
#~ "    </myapp:admin>\n"
#~ "</myapp:System>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<beans xmlns=\"urn:java:javax.beans\"\n"
#~ "   xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
#~ "   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "   xsi:schemaLocation=\"urn:java:javax.beans http://java.sun.com/jee/"
#~ "beans-1.0.xsd\n"
#~ "   urn:java:com.mydomain.myapp http://mydomain.com/xsd/myapp-1.2.xsd\">\n"
#~ "\n"
#~ "   <myapp:System>\n"
#~ "      ...\n"
#~ "   </myapp:System>\n"
#~ "\n"
#~ "</beans>]]>"
#~ msgstr ""
#~ "<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
#~ "          xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
#~ "          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "          xsi:schemaLocation=\"urn:java:javax.webbeans http://java.sun."
#~ "com/jee/web-beans-1.0.xsd\n"
#~ "                              urn:java:com.mydomain.myapp http://mydomain."
#~ "com/xsd/myapp-1.2.xsd\">\n"
#~ "\n"
#~ "    <myapp:System>\n"
#~ "        ...\n"
#~ "    </myapp:System>\n"
#~ "\n"
#~ "</WebBeans>]]>"

#~ msgid "In either of these cases, Web Beans gives us two options:"
#~ msgstr "Dans tous ces cas, les Web Beans nous offrent deux possibilités:"

#~ msgid "write a producer method, or"
#~ msgstr "écrire une méthode productrice, ou"

#~ msgid "declare the Web Bean using XML."
#~ msgstr "déclarer le Web Bean en utilisant XML."
