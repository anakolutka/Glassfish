<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE project [
<!ENTITY commonSetup SYSTEM "file:./../../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "file:./../../../config/common.xml">
<!ENTITY testproperties SYSTEM "file:./build.properties">
<!ENTITY run SYSTEM "file:./../../../config/run.xml">
<!ENTITY eeSetup SYSTEM "file:./../config/ee-common.xml">
<!ENTITY eeProperties SYSTEM "file:./../config/ee-properties.xml">
]>

<project name="mix" default="usage" basedir=".">

    &commonSetup;
    &commonBuild;
    &run;
    <!--
    &eeSetup;
    &eeProperties;
    -->
    &testproperties;

    <target name="all" depends="build,deploy,run,undeploy"/>

    <target name="clean" depends="init-common">
      <antcall  target="clean-common"/>
    </target>
 
    <target name="compile" depends="clean">
      <antcall target="compile-common">
        <param name="src" value="ejb"/>
      </antcall>
      <antcall target="compile-common">
        <param name="src" value="client"/>
      </antcall>
      <antcall target="compile-common">
	<param name="src" value="logger"/>
      </antcall>
    </target>

    <target name="build" depends="compile">
      <antcall target="build-ear-common">
        <param name="ejbjar.classes" 
          value="**/*.class" />
        <param name="appclientjar.classes" 
          value="**/SimpleBMP.class, **/SimpleBMPHome.class,**/*Client*.class" />
      </antcall>
      <jar jarfile="${sql-trace-listener-jar}" update="true">
          <fileset dir="${build.classes.dir}/com/sun/s1asdev/jdbc/tracingsql/logger" casesensitive="yes">
              <include name="**/*class*"/>
          </fileset>
      </jar>
      <copyfile src="${sql-trace-listener-jar}"
            dest="${env.S1AS_HOME}/lib/sql-trace-listener.jar"/>
    <antcall target="restart-server"/>
    </target> 
    
    <target name="deploy" depends="init-common">
      <antcall target="execute-sql-common">
        <param name="sql.file" value="sql/create_pointbase.sql"/>
      </antcall>
      <antcall target="deploy-jdbc-common"/>

      <antcall target="asadmin-common">
            <param name="admin.command" value="set"/>
            <param name="operand.props"
                   value="${resources.dottedname.prefix}.jdbc-connection-pool.ql-jdbc-pool.sql_trace_listeners=com.sun.s1asdev.jdbc.tracingsql.logger.TraceLogger"/>
      </antcall>

        <antcall target="deploy-jdbc-common">
            <param name="jdbc.conpool.name" value="${tracingsql-poolname}"/>
            <param name="db.class" value="org.apache.derby.jdbc.ClientDataSource"/>
            <param name="jdbc.resource.type" value="javax.sql.DataSource"/>
            <param name="jdbc.resource.name" value="${tracingsql-resourcename}"/>
        </antcall>

        <antcall target="asadmin-common">
            <param name="admin.command" value="set"/>
            <param name="operand.props"
                   value="${resources.dottedname.prefix}.jdbc-connection-pool.${tracingsql-poolname}.non_transactional_connections=true"/>
        </antcall>

      <antcall target="deploy-common"/>
    </target>
    
    <target name="run" depends="init-common">
      <antcall target="runclient-common"/>
    </target>
 
    <target name="undeploy" depends="init-common">
      <antcall target="execute-sql-common">
        <param name="sql.file" value="sql/drop_pointbase.sql"/>
      </antcall>

      <antcall target="undeploy-jdbc-common"/>
        <antcall target="delete-jdbc-resource-common">
            <param name="jdbc.resource.name" value="${tracingsql-resourcename}"/>
        </antcall>

        <antcall target="delete-jdbc-connpool-common">
            <param name="jdbc.conpool.name" value="${tracingsql-poolname}"/>
        </antcall>
	<antcall target="undeploy-common"/>
	<delete file="${env.S1AS_HOME}/lib/sql-trace-listener.jar"/>
	<delete file="${sql-trace-listener-jar}"/>
	<antcall target="restart-server"/>
    </target>   

    <target name="usage">
        <antcall target="usage-common"/>
    </target>

    <target name="restart-server">
        <antcall target="stop-server"/>
        <antcall target="start-server"/>

    </target>

    <target name="stop-server" depends="setOSConditions">
        <antcall target="stop-server-unix"/>
        <antcall target="stop-server-windows"/>
    </target>

    <target name="stop-server-unix" if="isUnix">
        <echo message="stopping server on unix ..."/>
        <exec executable="${env.S1AS_HOME}/bin/asadmin">
            <arg value="stop-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

    <target name="stop-server-windows" if="isWindows">
        <echo message="Stopping server on windows ..."/>
        <exec executable="cmd">
            <arg value="/c"/>
            <arg value="${env.S1AS_HOME}\bin\asadmin.bat"/>
            <arg value="stop-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

    <target name="start-server" depends="setOSConditions">

        <echo>+-----------------------------+</echo>
        <echo>| |</echo>
        <echo>| S T A R T I N G GLASSFISH |</echo>
        <echo>| in Felix mode |</echo>
        <echo>| |</echo>
        <echo>+-----------------------------+</echo>

        <antcall target="start-server-unix"/>
        <antcall target="start-server-windows"/>
    </target>

    <target name="start-server-unix" if="isUnix">
        <exec executable="${env.S1AS_HOME}/bin/asadmin">
            <env key="GlassFish_Platform" value="Felix"/>
            <arg value="start-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

    <target name="start-server-windows" if="isWindows">
        <exec executable="cmd" spawn="true">
            <env key="GlassFish_Platform" value="Felix"/>
            <arg value="/c"/>
            <arg value="${env.S1AS_HOME}\bin\asadmin.bat"/>
            <arg value="start-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>
</project>
