<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE project [
<!ENTITY commonSetup SYSTEM "file:./../../../../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "file:./../../../../../config/common.xml">
<!ENTITY embeddedCommon SYSTEM "file:./../embedded.xml">
<!ENTITY testproperties SYSTEM "file:./build.properties">
]>

<project name="ejb-ejb31-embedded-two-modules-with-libs-App" default="usage" basedir=".">

    &embeddedCommon;
    &commonSetup;
    &commonBuild;
    &testproperties;

    <target name="all" depends="start-database,build,run,stop-database"/>

    <target name="clean" depends="init-common">
      <antcall  target="clean-common"/>
    </target>
 
    <target name="compile" depends="clean">
        <antcall target="compile-common">
            <param name="src" value="ejb"/>
        </antcall>
        <antcall target="compile-common">
            <param name="src" value="client"/>
        </antcall>
    </target>

    <target name="build" depends="compile">
      <antcall  target="build-jars"/>
      <antcall  target="create-dirs"/>
    </target>

    <target name="build-jars">
        <!-- package ourselves to include persistence.xml -->
        <mkdir dir="${assemble.dir}"/>
        <jar jarfile="${assemble.dir}/${appname}-ejb1.jar" 
             basedir="${build.classes.dir}" 
             update="true"
             includes ="**/*Ejb.class">
             <metainf dir="descriptor">
                  <include name="ejb-jar.xml"/>
             </metainf> 
        </jar>
        <jar jarfile="${assemble.dir}/${appname}-pu1.jar" 
             basedir="${build.classes.dir}" 
             update="true"
             includes ="**/SimpleEntity.class,**/SimpleRelated.class">
             <metainf dir="descriptor">
                  <include name="persistence.xml"/>
             </metainf> 
        </jar>
        <jar jarfile="${assemble.dir}/${appname}-ejb2.jar" 
             basedir="${build.classes.dir}" 
             update="true"
             includes ="**/SingletonBean.class">
        </jar>
        <delete dir="${build.classes.dir}/org"/>
    </target> 
    
    <target name="create-dirs">
        <!-- package ourselves to include persistence.xml -->
        <mkdir dir="${assemble.dir}/${appname}-ejb1/classes"/>
        <unzip src="${assemble.dir}/${appname}-ejb1.jar" dest="${assemble.dir}/${appname}-ejb1/classes"/>

        <mkdir dir="${assemble.dir}/${appname}-pu1"/>
        <unzip src="${assemble.dir}/${appname}-pu1.jar" dest="${assemble.dir}/${appname}-pu1"/>

        <mkdir dir="${assemble.dir}/${appname}-ejb2/classes"/>
        <unzip src="${assemble.dir}/${appname}-ejb2.jar" dest="${assemble.dir}/${appname}-ejb2/classes"/>

    </target> 
    
    <target name="run" depends="init-common">
        <antcall target="run_se_jars"/>
        <antcall target="run_se_dirs"/>
    </target>
 
    <target name="run_se_jars" depends="init-common">
       <echo message="Running with ${embedded.classpath} in classpath"/>
       <java  fork="on" 
              failonerror="true"
              classpath="${assemble.dir}/${appname}-ejb1.jar:${assemble.dir}/${appname}-ejb2.jar:${assemble.dir}/${appname}-pu1.jar:${embedded.classpath}:${build.classes.dir}:${env.APS_HOME}/lib/reporter.jar"
              classname="${se.client}">

<!--
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8085"/>

-->
           <arg line="${appname}"/>
        </java>
    </target>

    <target name="run_se_dirs" depends="init-common">
       <echo message="Running with ${embedded.classpath} in classpath"/>
       <java  fork="on" 
              failonerror="true"
              classpath="${assemble.dir}/${appname}-ejb2/classes:${assemble.dir}/${appname}-ejb1/classes:${assemble.dir}/${appname}-pu1:${embedded.classpath}:${build.classes.dir}:${env.APS_HOME}/lib/reporter.jar"
              classname="${se.client}">
           <arg line="${appname}"/>
        </java>
    </target>

    <target name="usage">
        <antcall target="usage-common"/>
    </target>
</project>
