# Language zh-CN translations for master.xml package.
# Automatically generated, 2008.
# 
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2012-01-16T16:07:16\n"
"PO-Revision-Date: 2009-03-13 13:15+0800\n"
"Last-Translator: Sean Wu <alartin@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Interceptors"
msgstr "拦截器"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Interceptor functionality is defined in the Java Interceptors specification."
" CDI enhances this functionality with a more sophisticated, semantic, "
"annotation-based approach to binding interceptors to beans."
msgstr "Web Beans拥有一个更复杂的基于注释的方法将拦截器绑定到Web Bean上。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The Interceptors specification defines two kinds of interception points:"
msgstr "EJB规范定义了两种拦截点："

#. Tag: para
#, no-c-format
msgid "business method interception, and"
msgstr "业务方法拦截，和"

#. Tag: para
#, no-c-format
msgid "lifecycle callback interception."
msgstr "生命周期回调方法拦截。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"In addition, the EJB specification defines timeout method interception."
msgstr "EJB规范定义了两种拦截点："

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"A <emphasis>business method interceptor</emphasis> applies to invocations of"
" methods of the bean by clients of the bean:"
msgstr "一个 <emphasis>业务方法拦截</emphasis> 是Web Bean的客户应用在Web Bean的方法调用上："

#. Tag: programlisting
#, no-c-format
msgid ""
"public class TransactionInterceptor {\n"
"   @AroundInvoke \n"
"   public Object manageTransaction(InvocationContext ctx) throws Exception { ... }\n"
"}"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"A <emphasis>lifecycle callback interceptor</emphasis> applies to invocations"
" of lifecycle callbacks by the container:"
msgstr "一个 <emphasis>生命周期回调拦截器</emphasis> 是容器应用在生命周期回调方法的调用上："

#. Tag: programlisting
#, no-c-format
msgid ""
"public class DependencyInjectionInterceptor {\n"
"   @PostConstruct \n"
"   public void injectDependencies(InvocationContext ctx) { ... }\n"
"}"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"An interceptor class may intercept both lifecycle callbacks and business "
"methods."
msgstr "一个拦截器类既可以拦截生命周期回调方法，也可以拦截业务方法。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"A <emphasis>timeout method interceptor</emphasis> applies to invocations of "
"EJB timeout methods by the container:"
msgstr "一个 <emphasis>生命周期回调拦截器</emphasis> 是容器应用在生命周期回调方法的调用上："

#. Tag: programlisting
#, no-c-format
msgid ""
"public class TimeoutInterceptor {\n"
"   @AroundTimeout \n"
"   public Object manageTransaction(InvocationContext ctx) throws Exception { ... }\n"
"}"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Interceptor bindings"
msgstr "拦截器绑定"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Suppose we want to declare that some of our beans are transactional. The "
"first thing we need is an <emphasis>interceptor binding type</emphasis> to "
"specify exactly which beans we're interested in:"
msgstr ""
"假定我们想声明我们的某些Web Beans是事务性的。我们要做的第一个事情就是需要一个 <emphasis>拦截器绑定注释</emphasis> "
"以便指定哪些Web Beans是事务性的："

#. Tag: programlisting
#, no-c-format
msgid ""
"@InterceptorBinding\n"
"@Target({METHOD, TYPE})\n"
"@Retention(RUNTIME)\n"
"public @interface Transactional {}"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Now we can easily specify that our <literal>ShoppingCart</literal> is a "
"transactional object:"
msgstr "现在我们可以很容易地指定我们的 <literal>ShoppingCart</literal> 是一个事务性的对象："

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional\n"
"public class ShoppingCart { ... }"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Or, if we prefer, we can specify that just one method is transactional:"
msgstr "或者，如果我们愿意的话，我们可以仅仅指定一个方法是事务性的："

#. Tag: programlisting
#, no-c-format
msgid ""
"public class ShoppingCart {\n"
"   @Transactional public void checkout() { ... }\n"
"}"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Implementing interceptors"
msgstr "实现拦截器"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"That's great, but somewhere along the line we're going to have to actually "
"implement the interceptor that provides this transaction management aspect. "
"All we need to do is create a standard interceptor, and annotate it "
"<literal>@Interceptor</literal> and <literal>@Transactional</literal>."
msgstr ""
"很好，但是在代码中有些地方需要我们实现提供事务管理的拦截器。我们需要做的事情就是创建一个标准的EJB拦截器，使用 "
"<literal>@Interceptor</literal> 和 <literal>@Transactional</literal>注释它。"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional @Interceptor\n"
"public class TransactionInterceptor {\n"
"   @AroundInvoke \n"
"   public Object manageTransaction(InvocationContext ctx) throws Exception { ... }\n"
"}"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Interceptors can take advantage of dependency injection:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional @Interceptor\n"
"public class TransactionInterceptor {\n"
"\n"
"    @Resource UserTransaction transaction;\n"
"\n"
"    @AroundInvoke \n"
"    public Object manageTransaction(InvocationContext ctx) throws Exception { ... }\n"
"    \n"
"}"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Multiple interceptors may use the same interceptor binding type."
msgstr "多个拦截器可以使用相同的拦截器绑定类型"

#. Tag: title
#, no-c-format
msgid "Enabling interceptors"
msgstr "激活拦截器"

#. Tag: para
#, no-c-format
msgid ""
"By default, all interceptors are disabled. We need to "
"<emphasis>enable</emphasis> our interceptor in the "
"<literal>beans.xml</literal> descriptor of a bean archive. This activation "
"only applies to the beans in that archive."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"&lt;beans\n"
"   xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"   xsi:schemaLocation=\"\n"
"      http://java.sun.com/xml/ns/javaee\n"
"      http://java.sun.com/xml/ns/javaee/beans_1_0.xsd\"&gt;\n"
"   &lt;interceptors&gt;\n"
"      &lt;class&gt;org.mycompany.myapp.TransactionInterceptor&lt;/class&gt;\n"
"   &lt;/interceptors&gt;\n"
"&lt;/beans&gt;"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Whoah! Why the angle bracket stew?"
msgstr "哇塞！为何使用尖括号？"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Well, having the XML declaration is actually a <emphasis>good "
"thing</emphasis>. It solves two problems:"
msgstr "好吧，XML声明解决了两个问题："

#. Tag: para
#, no-c-format
msgid ""
"it enables us to specify a total ordering for all the interceptors in our "
"system, ensuring deterministic behavior, and"
msgstr "它可以让我们在我们的系统中指定所有的拦截器顺序，确保这些行为具有确定性，并且"

#. Tag: para
#, no-c-format
msgid "it lets us enable or disable interceptor classes at deployment time."
msgstr "它能够让我们在部署期间激活或者关闭拦截器类。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For example, we could specify that our security interceptor runs before our "
"transaction interceptor."
msgstr "例如，我们可以指定在 <literal>TransactionInterceptor</literal> 之前运行我们的安全拦截器。"

#. Tag: programlisting
#, no-c-format
msgid ""
"&lt;beans\n"
"   xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"   xsi:schemaLocation=\"\n"
"      http://java.sun.com/xml/ns/javaee\n"
"      http://java.sun.com/xml/ns/javaee/beans_1_0.xsd\"&gt;\n"
"   &lt;interceptors&gt;\n"
"      &lt;class&gt;org.mycompany.myapp.SecurityInterceptor&lt;/class&gt;\n"
"      &lt;class&gt;org.mycompany.myapp.TransactionInterceptor&lt;/class&gt;\n"
"   &lt;/interceptors&gt;\n"
"&lt;/beans&gt;"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Or we could turn them both off in our test environment by simply not "
"mentioning them in <literal>beans.xml</literal>! Ah, so simple."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Interceptor bindings with members"
msgstr "成员拦截器绑定"

#. Tag: para
#, no-c-format
msgid ""
"Suppose we want to add some extra information to our "
"<literal>@Transactional</literal> annotation:"
msgstr "假定我们想要往 <literal>@Transactional</literal> 注释中添加一些额外信息："

#. Tag: programlisting
#, no-c-format
msgid ""
"@InterceptorBinding\n"
"@Target({METHOD, TYPE})\n"
"@Retention(RUNTIME)\n"
"public @interface Transactional {\n"
"   boolean requiresNew() default false;\n"
"}"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"CDI will use the value of <literal>requiresNew</literal> to choose between "
"two different interceptors, <literal>TransactionInterceptor</literal> and "
"<literal>RequiresNewTransactionInterceptor</literal>."
msgstr ""
"Web Beans将使用 <literal>requiresNew</literal> 的值来决定在两种不同的拦截器 "
"<literal>TransactionInterceptor</literal> 和 "
"<literal>RequiresNewTransactionInterceptor</literal> 中选择哪一个。"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional(requiresNew = true) @Interceptor\n"
"public class RequiresNewTransactionInterceptor {\n"
"   @AroundInvoke \n"
"   public Object manageTransaction(InvocationContext ctx) throws Exception { ... }\n"
"}"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Now we can use <literal>RequiresNewTransactionInterceptor</literal> like "
"this:"
msgstr "现在我们可以像这样使用 <literal>RequiresNewTransactionInterceptor</literal> ："

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional(requiresNew = true)\n"
"public class ShoppingCart { ... }"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"But what if we only have one interceptor and we want the container to ignore"
" the value of <literal>requiresNew</literal> when binding interceptors? "
"Perhaps this information is only useful for the interceptor implementation. "
"We can use the <literal>@Nonbinding</literal> annotation:"
msgstr ""
"但是如果我们只有一个拦截器，并且我们希望管理器在绑定拦截器的时候忽略 <literal>requiresNew</literal> "
"的值，那该怎么办？我们可以使用 <literal>@NonBinding</literal> 注释："

#. Tag: programlisting
#, no-c-format
msgid ""
"@InterceptorBinding\n"
"@Target({METHOD, TYPE})\n"
"@Retention(RUNTIME)\n"
"public @interface Secure {\n"
"   @Nonbinding String[] rolesAllowed() default {};\n"
"}"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Multiple interceptor binding annotations"
msgstr "多个拦截器绑定注释"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Usually we use combinations of interceptor bindings types to bind multiple "
"interceptors to a bean. For example, the following declaration would be used"
" to bind <literal>TransactionInterceptor</literal> and "
"<literal>SecurityInterceptor</literal> to the same bean:"
msgstr ""
"通常我们可以组合拦截器绑定类型将多个拦截器绑定到一个Web Bean上。例如，下面的声明可以将 "
"<literal>TransactionInterceptor</literal> 和 "
"<literal>SecurityInterceptor</literal> 绑定到相同的Web Bean上："

#. Tag: programlisting
#, no-c-format
msgid ""
"@Secure(rolesAllowed=\"admin\") @Transactional\n"
"public class ShoppingCart { ... }"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"However, in very complex cases, an interceptor itself may specify some "
"combination of interceptor binding types:"
msgstr "然而，在非常复杂的情况下，一个拦截器本身可以指定一些拦截器绑定类型的组合："

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional @Secure @Interceptor\n"
"public class TransactionalSecureInterceptor { ... }"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Then this interceptor could be bound to the <literal>checkout()</literal> "
"method using any one of the following combinations:"
msgstr "然后，这个拦截器可以使用下面的任何一个组合来绑定到 <literal>checkout()</literal> 方法上："

#. Tag: programlisting
#, no-c-format
msgid ""
"public class ShoppingCart {\n"
"   @Transactional @Secure public void checkout() { ... }\n"
"}"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"@Secure\n"
"public class ShoppingCart {\n"
"   @Transactional public void checkout() { ... }\n"
"}"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional\n"
"public class ShoppingCart {\n"
"   @Secure public void checkout() { ... }\n"
"}"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional @Secure\n"
"public class ShoppingCart {\n"
"   public void checkout() { ... }\n"
"}"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Interceptor binding type inheritance"
msgstr "拦截器绑定类型的继承"

#. Tag: para
#, no-c-format
msgid ""
"One limitation of the Java language support for annotations is the lack of "
"annotation inheritance. Really, annotations should have reuse built in, to "
"allow this kind of thing to work:"
msgstr "Java语言对注释的支持有一个限制，那就是缺少注释的继承机制。实际上，注释应该可以重用内置，应该支持下列工作："

#. Tag: programlisting
#, no-c-format
msgid "public @interface Action extends Transactional, Secure { ... }"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Well, fortunately, CDI works around this missing feature of Java. We may "
"annotate one interceptor binding type with other interceptor binding types "
"(termed a <emphasis>meta-annotation</emphasis>). The interceptor bindings "
"are transitive &mdash; any bean with the first interceptor binding inherits "
"the interceptor bindings declared as meta-annotations."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"@Transactional @Secure\n"
"@InterceptorBinding\n"
"@Target(TYPE)\n"
"@Retention(RUNTIME)\n"
"public @interface Action { ... }"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Now, any bean annotated <literal>@Action</literal> will be bound to both "
"<literal>TransactionInterceptor</literal> and "
"<literal>SecurityInterceptor</literal>. (And even "
"<literal>TransactionalSecureInterceptor</literal>, if it exists.)"
msgstr ""
"任何使用 <literal>@Action</literal> 注释的Web Bean都被绑定到 "
"<literal>TransactionInterceptor</literal> 和 "
"<literal>SecurityInterceptor</literal> 。（如果存在 "
"<literal>TransactionalSecureInterceptor</literal> 的话，甚至可以绑定到这个拦截器）"

#. Tag: title
#, no-c-format
msgid "Use of <literal>@Interceptors</literal>"
msgstr " <literal>@Interceptors</literal> 的使用"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>@Interceptors</literal> annotation defined by the interceptor "
"specification (and used by the managed bean and EJB specifications) is still"
" supported in CDI."
msgstr "企业级和简单的Web Bean都支持EJB规范指定的 <literal>@Interceptors</literal> 注释，例如："

#. Tag: programlisting
#, no-c-format
msgid ""
"@Interceptors({TransactionInterceptor.class, SecurityInterceptor.class})\n"
"public class ShoppingCart {\n"
"   public void checkout() { ... }\n"
"}"
msgstr ""

#. Tag: para
#, no-c-format
msgid "However, this approach suffers the following drawbacks:"
msgstr "然而，这种方法具有下列缺陷："

#. Tag: para
#, no-c-format
msgid "the interceptor implementation is hardcoded in business code,"
msgstr "拦截器实现被硬编码到在业务代码中，"

#. Tag: para
#, no-c-format
msgid "interceptors may not be easily disabled at deployment time, and"
msgstr "拦截器可能无法轻松地在部署期间关闭，并且"

#. Tag: para
#, no-c-format
msgid ""
"the interceptor ordering is non-global &mdash; it is determined by the order"
" in which interceptors are listed at the class level."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "Therefore, we recommend the use of CDI-style interceptor bindings."
msgstr "因此，我们建议使用Web Bean风格的拦截器绑定。"
