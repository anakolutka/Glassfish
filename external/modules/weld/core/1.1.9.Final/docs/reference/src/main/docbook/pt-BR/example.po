# Language pt-BR translations for Introduction_to_Web_Beans package.
# Automatically generated, 2009.
# 
# Bruno Leonardo Gonçalves <brunolmfg@gmail.com>, 2012. #zanata
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2012-01-16T16:07:16\n"
"PO-Revision-Date: 2010-01-15 10:27-0300\n"
"Last-Translator: Bruno Leonardo Gonçalves <brunolmfg@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: \n"

#. Tag: title
#, no-c-format
msgid "JSF web application example"
msgstr "Exemplo de aplicação web JSF "

#. Tag: para
#, no-c-format
msgid ""
"Let's illustrate these ideas with a full example. We're going to implement "
"user login/logout for an application that uses JSF. First, we'll define a "
"request-scoped bean to hold the username and password entered during login, "
"with constraints defined using annotations from the Bean Validation "
"specification:"
msgstr ""
"Vamos ilustrar essas ideias com um exemplo completo. Nós  implementaremos um"
" login/logout de usuário de uma aplicação que utiliza JSF. Primeiro, "
"definiremos um bean com escopo de solicitação para manter o nome do usuário "
"(username) e a senha (password) fornecidos durante o login, com as "
"restrições definidas utilizando anotações da especificação Beans Validation:"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Named @RequestScoped\n"
"public class Credentials {\n"
"    private String username;\n"
"    private String password;\n"
"    \n"
"    @NotNull @Length(min=3, max=25)\n"
"    public String getUsername() { return username; }\n"
"    public void setUsername(String username) { this.username = username; }\n"
"    \n"
"    @NotNull @Length(min=6, max=20)\n"
"    public String getPassword() { return password; }\n"
"    public void setPassword(String password) { this.password = password; }\n"
"}"
msgstr ""
"@Named @RequestScoped\n"
"public class Credentials {\n"
"    private String username;\n"
"    private String password;\n"
"    \n"
"    @NotNull @Length(min=3, max=25)\n"
"    public String getUsername() { return username; }\n"
"    public void setUsername(String username) { this.username = username; }\n"
"    \n"
"    @NotNull @Length(min=6, max=20)\n"
"    public String getPassword() { return password; }\n"
"    public void setPassword(String password) { this.password = password; }\n"
"}"

#. Tag: para
#, no-c-format
msgid "This bean is bound to the login prompt in the following JSF form:"
msgstr "Esse bean é vinculado ao prompt de login no seguinte formulário JSF:"

#. Tag: programlisting
#, no-c-format
msgid ""
"&lt;h:form&gt;\n"
"   &lt;h:panelGrid columns=\"2\" rendered=\"#{!login.loggedIn}\"&gt;\n"
"      &lt;f:validateBean&gt;\n"
"         &lt;h:outputLabel for=\"username\"&gt;Username:&lt;/h:outputLabel&gt;\n"
"         &lt;h:inputText id=\"username\" value=\"#{credentials.username}\"/&gt;\n"
"         &lt;h:outputLabel for=\"password\"&gt;Password:&lt;/h:outputLabel&gt;\n"
"         &lt;h:inputSecret id=\"password\" value=\"#{credentials.password}\"/&gt;\n"
"      &lt;/f:validateBean&gt;\n"
"   &lt;/h:panelGrid&gt;\n"
"   &lt;h:commandButton value=\"Login\" action=\"#{login.login}\" rendered=\"#{!login.loggedIn}\"/&gt;\n"
"   &lt;h:commandButton value=\"Logout\" action=\"#{login.logout}\" rendered=\"#{login.loggedIn}\"/&gt;\n"
"&lt;/h:form&gt;"
msgstr ""
"&lt;h:form&gt;\n"
"   &lt;h:panelGrid columns=\"2\" rendered=\"#{!login.loggedIn}\"&gt;\n"
"      &lt;f:validateBean&gt;\n"
"         &lt;h:outputLabel for=\"username\"&gt;Username:&lt;/h:outputLabel&gt;\n"
"         &lt;h:inputText id=\"username\" value=\"#{credentials.username}\"/&gt;\n"
"         &lt;h:outputLabel for=\"password\"&gt;Password:&lt;/h:outputLabel&gt;\n"
"         &lt;h:inputSecret id=\"password\" value=\"#{credentials.password}\"/&gt;\n"
"      &lt;/f:validateBean&gt;\n"
"   &lt;/h:panelGrid&gt;\n"
"   &lt;h:commandButton value=\"Login\" action=\"#{login.login}\" rendered=\"#{!login.loggedIn}\"/&gt;\n"
"   &lt;h:commandButton value=\"Logout\" action=\"#{login.logout}\" rendered=\"#{login.loggedIn}\"/&gt;\n"
"&lt;/h:form&gt;"

#. Tag: para
#, no-c-format
msgid "Users are represented by a JPA entity:"
msgstr "Os usuários são representados por uma entidade JPA:"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Entity\n"
"public class User {\n"
"   private @NotNull @Length(min=3, max=25) @Id String username;\n"
"   private @NotNull @Length(min=6, max=20) String password;\n"
"   \n"
"   public String getUsername() { return username; }\n"
"   public void setUsername(String username) { this.username = username; }\n"
"   public String setPassword(String password) { this.password = password; }\n"
"}"
msgstr ""
"@Entity\n"
"public class User {\n"
"   private @NotNull @Length(min=3, max=25) @Id String username;\n"
"   private @NotNull @Length(min=6, max=20) String password;\n"
"   \n"
"   public String getUsername() { return username; }\n"
"   public void setUsername(String username) { this.username = username; }\n"
"   public String setPassword(String password) { this.password = password; }\n"
"}"

#. Tag: para
#, no-c-format
msgid ""
"(Note that we're also going to need a <literal>persistence.xml</literal> "
"file to configure the JPA persistence unit containing "
"<literal>User</literal>.)"
msgstr ""
"(Observe que também vamos precisar de um arquivo "
"<literal>persistence.xml</literal> para configurar a unidade de persistência"
" JPA contendo a entidade <literal>User</literal>.)"

#. Tag: para
#, no-c-format
msgid ""
"The actual work is done by a session-scoped bean that maintains information "
"about the currently logged-in user and exposes the <literal>User</literal> "
"entity to other beans:"
msgstr ""
"O verdadeiro trabalho é realizado por um bean com escopo de sessão que "
"mantém informações sobre o atual usuário conectado e expõe a entidade "
"<literal>User</literal> para outros beans:"

#. Tag: programlisting
#, no-c-format
msgid ""
"@SessionScoped @Named\n"
"public class Login implements Serializable {\n"
"\n"
"   @Inject Credentials credentials;\n"
"   @Inject @UserDatabase EntityManager userDatabase;\n"
"\n"
"   private User user;\n"
"    \n"
"   public void login() {\n"
"      List&lt;User&gt; results = userDatabase.createQuery(\n"
"         \"select u from User u where u.username = :username and u.password = :password\")\n"
"         .setParameter(\"username\", credentials.getUsername())\n"
"         .setParameter(\"password\", credentials.getPassword())\n"
"         .getResultList();\n"
"        \n"
"      if (!results.isEmpty()) {\n"
"         user = results.get(0);\n"
"      }\n"
"      else {\n"
"         // perhaps add code here to report a failed login\n"
"      }\n"
"   }\n"
"    \n"
"   public void logout() {\n"
"      user = null;\n"
"   }\n"
"    \n"
"   public boolean isLoggedIn() {\n"
"      return user != null;\n"
"   }\n"
"    \n"
"   @Produces @LoggedIn User getCurrentUser() {\n"
"      return user;\n"
"   }\n"
"\n"
"}"
msgstr ""
"@SessionScoped @Named\n"
"public class Login implements Serializable {\n"
"\n"
"   @Inject Credentials credentials;\n"
"   @Inject @UserDatabase EntityManager userDatabase;\n"
"\n"
"   private User user;\n"
"    \n"
"   public void login() {\n"
"      List&lt;User&gt; results = userDatabase.createQuery(\n"
"         \"select u from User u where u.username = :username and u.password = :password\")\n"
"         .setParameter(\"username\", credentials.getUsername())\n"
"         .setParameter(\"password\", credentials.getPassword())\n"
"         .getResultList();\n"
"        \n"
"      if (!results.isEmpty()) {\n"
"         user = results.get(0);\n"
"      }\n"
"      else {\n"
"         // perhaps add code here to report a failed login\n"
"      }\n"
"   }\n"
"    \n"
"   public void logout() {\n"
"      user = null;\n"
"   }\n"
"    \n"
"   public boolean isLoggedIn() {\n"
"      return user != null;\n"
"   }\n"
"    \n"
"   @Produces @LoggedIn User getCurrentUser() {\n"
"      return user;\n"
"   }\n"
"\n"
"}"

#. Tag: para
#, no-c-format
msgid ""
"<literal>@LoggedIn</literal> and <literal>@UserDatabase</literal> are custom"
" qualifier annotations:"
msgstr ""
"<literal>@LoggedIn</literal> e <literal>@UserDatabase</literal> são "
"anotações de qualificadores personalizados:"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Qualifier\n"
"@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, PARAMETER, FIELD})\n"
"public @interface LoggedIn {}"
msgstr ""
"@Qualifier\n"
"@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, PARAMETER, FIELD})\n"
"public @interface LoggedIn {}"

#. Tag: programlisting
#, no-c-format
msgid ""
"@Qualifier\n"
"@Retention(RUNTIME)\n"
"@Target({METHOD, PARAMETER, FIELD})\n"
"public @interface UserDatabase {}"
msgstr ""
"@Qualifier\n"
"@Retention(RUNTIME)\n"
"@Target({METHOD, PARAMETER, FIELD})\n"
"public @interface UserDatabase {}"

#. Tag: para
#, no-c-format
msgid ""
"We need an adaptor bean to expose our typesafe "
"<literal>EntityManager</literal>:"
msgstr ""
"Precisamos de um bean adaptador para expor nossa "
"<literal>EntityManager</literal> typesafe:"

#. Tag: programlisting
#, no-c-format
msgid ""
"class UserDatabaseProducer {\n"
"   @Produces @UserDatabase @PersistenceContext \n"
"   static EntityManager userDatabase;\n"
"}"
msgstr ""
"class UserDatabaseProducer {\n"
"   @Produces @UserDatabase @PersistenceContext \n"
"   static EntityManager userDatabase;\n"
"}"

#. Tag: para
#, no-c-format
msgid ""
"Now <literal>DocumentEditor</literal>, or any other bean, can easily inject "
"the current user:"
msgstr ""
"Agora, <literal>DocumentEditor</literal> ou qualquer outro bean, pode "
"facilmente injetar o usuário atual:"

#. Tag: programlisting
#, no-c-format
msgid ""
"public class DocumentEditor {\n"
"   @Inject Document document;\n"
"   @Inject @LoggedIn User currentUser;\n"
"   @Inject @DocumentDatabase EntityManager docDatabase;\n"
"    \n"
"   public void save() {\n"
"      document.setCreatedBy(currentUser);\n"
"      docDatabase.persist(document);\n"
"   }\n"
"}"
msgstr ""
"public class DocumentEditor {\n"
"   @Inject Document document;\n"
"   @Inject @LoggedIn User currentUser;\n"
"   @Inject @DocumentDatabase EntityManager docDatabase;\n"
"    \n"
"   public void save() {\n"
"      document.setCreatedBy(currentUser);\n"
"      docDatabase.persist(document);\n"
"   }\n"
"}"

#. Tag: para
#, no-c-format
msgid "Or we can reference the current user in a JSF view:"
msgstr "Ou podemos referenciar o usuário atual em uma visão JSF:"

#. Tag: programlisting
#, no-c-format
msgid ""
"&lt;h:panelGroup rendered=\"#{login.loggedIn}\"&gt;\n"
"   signed in as #{currentUser.username}\n"
"&lt;/h:panelGroup&gt;"
msgstr ""
"&lt;h:panelGroup rendered=\"#{login.loggedIn}\"&gt;\n"
"   signed in as #{currentUser.username}\n"
"&lt;/h:panelGroup&gt;"

#. Tag: para
#, no-c-format
msgid ""
"Hopefully, this example gave you a taste of the CDI programming model. In "
"the next chapter, we'll explore dependency injection in greater depth."
msgstr ""
"Esperamos que este exemplo tenha dado um gostinho do modelo de programação "
"em CDI. No capítulo seguinte, exploraremos a injeção de dependência com "
"maior profundidade."
