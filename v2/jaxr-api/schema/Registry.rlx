<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE module SYSTEM "relaxCore.dtd">

<!--
 The contents of this file are subject to the terms 
 of the Common Development and Distribution License 
 (the License).  You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the license at 
 https://glassfish.dev.java.net/public/CDDLv1.0.html or
 glassfish/bootstrap/legal/CDDLv1.0.txt.
 See the License for the specific language governing 
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL 
 Header Notice in each file and include the License file 
 at glassfish/bootstrap/legal/CDDLv1.0.txt.  
 If applicable, add the following below the CDDL Header, 
 with the fields enclosed by brackets [] replaced by
 you own identifying information: 
 "Portions Copyrighted [year] [name of copyright owner]"
 
 Copyright 2007 Sun Microsystems, Inc. All rights reserved.
-->

<!--Generated by XML Authority. -->
<module moduleVersion = "1.2"
	 relaxCoreVersion = "1.0"
	 targetNamespace = "file:///C:/jsews/jaxr/schema/Registry.dtd"
	 xmlns = "http://www.xml.gr.jp/xmlns/relaxCore">
	<interface>
		<export label = "RootElement"/>
	</interface>
	<annotation>
		<documentation> Begin information model mapping. </documentation>
		<documentation>
ObjectAttributes are attributes from the RegistryObject interface in ebRIM.

id may be empty. If specified it may be in urn:uuid format or be in some
arbitrary format. If id is empty registry must generate globally unique id.

If id is provided and in proper UUID syntax (starts with urn:uuid:) 
registry will honour it.

If id is provided and is not in proper UUID syntax then it is used for
linkage within document and is ignored by the registry. In this case the
registry generates a UUID for id attribute.

id must not be null when object is being retrieved from the registry.

		</documentation>
	</annotation>
	<attPool role = "ObjectAttributes">
		<attribute name = "id" type = "ID"/>
		<attribute name = "name" type = "string"/>
		<attribute name = "description" type = "string"/>
	</attPool>
	<elementRule role = "ObjectRef">
		<annotation>
			<documentation> 
Use as a proxy for an Object that is in the registry already.
Specifies the id attribute of the object in the registry as its id attribute.
id attribute in ObjectAttributes is exactly the same syntax and semantics as
id attribute in RegistryObject.

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "ObjectRef">
		<annotation>
			<documentation> 
Use as a proxy for an Object that is in the registry already.
Specifies the id attribute of the object in the registry as its id attribute.
id attribute in ObjectAttributes is exactly the same syntax and semantics as
id attribute in RegistryObject.

			</documentation>
		</annotation>
		<attribute name = "id" type = "ID"/>
	</tag>
	<elementRule role = "ObjectRefList">
		<sequence occurs = "*">
			<ref label = "ObjectRef"/>
		</sequence>
	</elementRule>
	<tag name = "ObjectRefList"/>
	<attPool role = "RegistryEntryAttributes">
		<ref role = "ObjectAttributes"/>
		<attribute name = "majorVersion" type = "string"/>
		<attribute name = "minorVersion" type = "string"/>
		<attribute name = "status" type = "string"/>
		<attribute name = "userVersion" type = "string"/>
		<attribute name = "stability" type = "string"/>
		<attribute name = "expirationDate" type = "string"/>
		<attribute name = "objectType" required = "true" type = "string"/>
	</attPool>
	<elementRule role = "RegistryEntry">
		<sequence>
			<ref label = "SlotList" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryEntry">
		<ref role = "RegistryEntryAttributes"/>
	</tag>
	<elementRule role = "Value" type = "string"/>
	<tag name = "Value"/>
	<elementRule role = "ValueList">
		<sequence>
			<ref label = "Value" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "ValueList"/>
	<elementRule role = "Slot">
		<sequence>
			<ref label = "ValueList" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "Slot">
		<attribute name = "name" required = "true" type = "string"/>
		<attribute name = "slotType" type = "string"/>
	</tag>
	<elementRule role = "SlotList">
		<sequence>
			<ref label = "Slot" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "SlotList"/>
	<elementRule role = "ExtrinsicObject">
		<annotation>
			<documentation>
ExtrinsicObject are attributes from the ExtrinsicObject interface in ebRIM.
It inherits RegistryEntryAttributes

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "ExtrinsicObject">
		<annotation>
			<documentation>
ExtrinsicObject are attributes from the ExtrinsicObject interface in ebRIM.
It inherits RegistryEntryAttributes

			</documentation>
		</annotation>
		<ref role = "RegistryEntryAttributes"/>
		<attribute name = "contentURI" required = "true" type = "string"/>
		<attribute name = "mimeType" type = "string"/>
		<attribute name = "opaque" type = "NMTOKEN">
			<enumeration value = "true"/>
			<enumeration value = "false"/>
		</attribute>
	</tag>
	<attPool role = "IntrinsicObjectAttributes">
		<ref role = "RegistryEntryAttributes"/>
	</attPool>
	<elementRule role = "RegistryEntryList">
		<annotation>
			<documentation> Leaf classes that reflect the concrete classes in ebRIM </documentation>
		</annotation>
		<choice occurs = "*">
			<ref label = "Association"/>
			<ref label = "Classification"/>
			<ref label = "ClassificationNode"/>
			<ref label = "Package"/>
			<ref label = "ExternalLink"/>
			<ref label = "ExternalIdentifier"/>
			<ref label = "Organization"/>
			<ref label = "ExtrinsicObject"/>
			<ref label = "ObjectRef"/>
		</choice>
	</elementRule>
	<tag name = "RegistryEntryList">
		<annotation>
			<documentation> Leaf classes that reflect the concrete classes in ebRIM </documentation>
		</annotation>
	</tag>
	<elementRule role = "ExternalLink">
		<annotation>
			<documentation>
An ExternalLink specifies a link from a RegistryEntry and an external URI

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "ExternalLink">
		<annotation>
			<documentation>
An ExternalLink specifies a link from a RegistryEntry and an external URI

			</documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
		<attribute name = "externalURI" type = "string"/>
	</tag>
	<elementRule role = "ExternalIdentifier">
		<annotation>
			<documentation>
An ExternalIdentifier provides an identifier for a RegistryEntry

The value is the value of the identifier (e.g. the social security number)

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "ExternalIdentifier">
		<annotation>
			<documentation>
An ExternalIdentifier provides an identifier for a RegistryEntry

The value is the value of the identifier (e.g. the social security number)

			</documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
		<attribute name = "value" required = "true" type = "string"/>
	</tag>
	<elementRule role = "Association">
		<annotation>
			<documentation>
An Association specifies references to two previously submitted
registry entrys.

The sourceObject is id of the sourceObject in association
The targetObject is id of the targetObject in association

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "Association">
		<annotation>
			<documentation>
An Association specifies references to two previously submitted
registry entrys.

The sourceObject is id of the sourceObject in association
The targetObject is id of the targetObject in association

			</documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
		<attribute name = "sourceRole" type = "string"/>
		<attribute name = "targetRole" type = "string"/>
		<attribute name = "associationType" required = "true" type = "string"/>
		<attribute name = "bidirection" type = "NMTOKEN">
			<enumeration value = "true"/>
			<enumeration value = "false"/>
		</attribute>
		<attribute name = "sourceObject" required = "true" type = "IDREF"/>
		<attribute name = "targetObject" required = "true" type = "IDREF"/>
	</tag>
	<elementRule role = "Classification">
		<annotation>
			<documentation>
A Classification specifies references to two registry entrys.

The classifiedObject is id of the Object being classified.
The classificationNode is id of the ClassificationNode classying the object

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "Classification">
		<annotation>
			<documentation>
A Classification specifies references to two registry entrys.

The classifiedObject is id of the Object being classified.
The classificationNode is id of the ClassificationNode classying the object

			</documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
		<attribute name = "classifiedObject" required = "true" type = "IDREF"/>
		<attribute name = "classificationNode" required = "true" type = "IDREF"/>
	</tag>
	<elementRule role = "Package">
		<annotation>
			<documentation>
A Package is a named collection of objects.

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "Package">
		<annotation>
			<documentation>
A Package is a named collection of objects.

			</documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
	</tag>
	<attPool role = "TelephoneNumberAttributes">
		<attribute name = "areaCode" required = "true" type = "string"/>
		<attribute name = "contryCode" required = "true" type = "string"/>
		<attribute name = "extension" type = "string"/>
		<attribute name = "number" required = "true" type = "string"/>
		<attribute name = "url" type = "string"/>
	</attPool>
	<elementRule role = "TelephoneNumber">
		<empty/>
	</elementRule>
	<tag name = "TelephoneNumber">
		<ref role = "TelephoneNumberAttributes"/>
	</tag>
	<elementRule role = "FaxNumber">
		<empty/>
	</elementRule>
	<tag name = "FaxNumber">
		<ref role = "TelephoneNumberAttributes"/>
	</tag>
	<elementRule role = "PagerNumber">
		<empty/>
	</elementRule>
	<tag name = "PagerNumber">
		<ref role = "TelephoneNumberAttributes"/>
	</tag>
	<elementRule role = "MobileTelephoneNumber">
		<empty/>
	</elementRule>
	<tag name = "MobileTelephoneNumber">
		<ref role = "TelephoneNumberAttributes"/>
	</tag>
	<elementRule role = "PostalAddress">
		<annotation>
			<documentation> PostalAddress </documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "PostalAddress">
		<annotation>
			<documentation> PostalAddress </documentation>
		</annotation>
		<attribute name = "city" required = "true" type = "string"/>
		<attribute name = "country" required = "true" type = "string"/>
		<attribute name = "postalCode" required = "true" type = "string"/>
		<attribute name = "state" type = "string"/>
		<attribute name = "street" required = "true" type = "string"/>
	</tag>
	<elementRule role = "PersonName">
		<annotation>
			<documentation> PersonName </documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "PersonName">
		<annotation>
			<documentation> PersonName </documentation>
		</annotation>
		<attribute name = "firstName" required = "true" type = "string"/>
		<attribute name = "middleName" type = "string"/>
		<attribute name = "lastName" required = "true" type = "string"/>
	</tag>
	<elementRule role = "Organization">
		<annotation>
			<documentation> Organization </documentation>
		</annotation>
		<sequence>
			<ref label = "PostalAddress"/>
			<ref label = "FaxNumber" occurs = "?"/>
			<ref label = "TelephoneNumber"/>
		</sequence>
	</elementRule>
	<tag name = "Organization">
		<annotation>
			<documentation> Organization </documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
		<attribute name = "parent" type = "IDREF"/>
		<attribute name = "primaryContact" required = "true" type = "IDREF"/>
	</tag>
	<elementRule role = "User">
		<sequence>
			<ref label = "PersonName"/>
			<ref label = "PostalAddress"/>
			<ref label = "TelephoneNumber"/>
			<ref label = "MobileTelephoneNumber" occurs = "?"/>
			<ref label = "FaxNumber" occurs = "?"/>
			<ref label = "PagerNumber" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "User">
		<ref role = "ObjectAttributes"/>
		<attribute name = "organization" type = "IDREF"/>
		<attribute name = "email" type = "string"/>
		<attribute name = "url" type = "string"/>
	</tag>
	<elementRule role = "AuditableEvent">
		<empty/>
	</elementRule>
	<tag name = "AuditableEvent">
		<ref role = "ObjectAttributes"/>
		<attribute name = "eventType" required = "true" type = "string"/>
		<attribute name = "registryEntry" required = "true" type = "IDREF"/>
		<attribute name = "timestamp" required = "true" type = "string"/>
		<attribute name = "user" required = "true" type = "IDREF"/>
	</tag>
	<elementRule role = "ClassificationNode">
		<annotation>
			<documentation>
ClassificationNode is used to submit a Classification tree to the Registry.

parent is the id to the parent node. code is an optional code value for a ClassificationNode
often defined by an external taxonomy (e.g. NAICS)

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "ClassificationNode">
		<annotation>
			<documentation>
ClassificationNode is used to submit a Classification tree to the Registry.

parent is the id to the parent node. code is an optional code value for a ClassificationNode
often defined by an external taxonomy (e.g. NAICS)

			</documentation>
		</annotation>
		<ref role = "IntrinsicObjectAttributes"/>
		<attribute name = "parent" type = "IDREF"/>
		<attribute name = "code" type = "string"/>
	</tag>
	<elementRule role = "SubmitObjectsRequest">
		<annotation>
			<documentation>
End information model mapping.

Begin Registry Services Interface

&lt;!ELEMENT RequestAcceptedResponse EMPTY&gt;
&lt;!ATTLIST RequestAcceptedResponse
        xml:lang NMTOKEN #REQUIRED
&gt;
&lt;!--

The SubmitObjectsRequest allows one to submit a list of RegistryEntry elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the contentURI attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.

			</documentation>
		</annotation>
		<sequence>
			<ref label = "RegistryEntryList"/>
		</sequence>
	</elementRule>
	<tag name = "SubmitObjectsRequest">
		<annotation>
			<documentation>
End information model mapping.

Begin Registry Services Interface

&lt;!ELEMENT RequestAcceptedResponse EMPTY&gt;
&lt;!ATTLIST RequestAcceptedResponse
        xml:lang NMTOKEN #REQUIRED
&gt;
&lt;!--

The SubmitObjectsRequest allows one to submit a list of RegistryEntry elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the contentURI attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "AddSlotsRequest">
		<sequence occurs = "+">
			<ref label = "ObjectRef"/>
			<ref label = "SlotList"/>
		</sequence>
	</elementRule>
	<tag name = "AddSlotsRequest"/>
	<elementRule role = "RemoveSlotsRequest">
		<annotation>
			<documentation> Only need name in Slot within SlotList </documentation>
		</annotation>
		<sequence occurs = "+">
			<ref label = "ObjectRef"/>
			<ref label = "SlotList"/>
		</sequence>
	</elementRule>
	<tag name = "RemoveSlotsRequest">
		<annotation>
			<documentation> Only need name in Slot within SlotList </documentation>
		</annotation>
	</tag>
	<elementRule role = "ApproveObjectsRequest">
		<annotation>
			<documentation>
The ObjectRefList is the list of
refs to the registry entrys being approved.

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ObjectRefList"/>
		</sequence>
	</elementRule>
	<tag name = "ApproveObjectsRequest">
		<annotation>
			<documentation>
The ObjectRefList is the list of
refs to the registry entrys being approved.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "DeprecateObjectsRequest">
		<annotation>
			<documentation>
The ObjectRefList is the list of
refs to the registry entrys being deprecated.

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ObjectRefList"/>
		</sequence>
	</elementRule>
	<tag name = "DeprecateObjectsRequest">
		<annotation>
			<documentation>
The ObjectRefList is the list of
refs to the registry entrys being deprecated.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "RemoveObjectsRequest">
		<annotation>
			<documentation>
The ObjectRefList is the list of
refs to the registry entrys being removed

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ObjectRefList"/>
		</sequence>
	</elementRule>
	<tag name = "RemoveObjectsRequest">
		<annotation>
			<documentation>
The ObjectRefList is the list of
refs to the registry entrys being removed

			</documentation>
		</annotation>
		<attribute name = "deletionScope" type = "NMTOKEN">
			<enumeration value = "DeleteAll"/>
			<enumeration value = "DeleteRepositoryItemOnly"/>
		</attribute>
	</tag>
	<elementRule role = "GetRootClassificationNodesRequest">
		<empty/>
	</elementRule>
	<tag name = "GetRootClassificationNodesRequest">
		<attribute name = "namePattern" type = "string">
			<annotation>
				<documentation>
The namePattern follows SQL-92 syntax for the pattern specified in
LIKE clause. It allows for selecting only those root nodes that match
the namePattern. The default value of '*' matches all root nodes.

				</documentation>
			</annotation>
		</attribute>
	</tag>
	<elementRule role = "GetRootClassificationNodesResponse">
		<annotation>
			<documentation>
The response includes one or more ClassificationNodes

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ClassificationNode" occurs = "+"/>
		</sequence>
	</elementRule>
	<tag name = "GetRootClassificationNodesResponse">
		<annotation>
			<documentation>
The response includes one or more ClassificationNodes

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "GetClassificationTreeRequest">
		<annotation>
			<documentation>
Get the classification tree under the ClassificationNode specified parentRef. 

If depth is 1 just fetch immediate child 
nodes, otherwise fetch the descendant tree upto the specified depth level.
If depth is 0 that implies fetch entire sub-tree

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "GetClassificationTreeRequest">
		<annotation>
			<documentation>
Get the classification tree under the ClassificationNode specified parentRef. 

If depth is 1 just fetch immediate child 
nodes, otherwise fetch the descendant tree upto the specified depth level.
If depth is 0 that implies fetch entire sub-tree

			</documentation>
		</annotation>
		<attribute name = "parent" required = "true" type = "string"/>
		<attribute name = "depth" type = "string"/>
	</tag>
	<elementRule role = "GetClassificationTreeResponse">
		<annotation>
			<documentation>
The response includes one or more ClassificationNodes which includes only
immediate ClassificationNode children nodes if depth attribute in 
GetClassificationTreeRequest was 1, otherwise the decendent nodes 
upto specified depth level are returned.

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ClassificationNode" occurs = "+"/>
		</sequence>
	</elementRule>
	<tag name = "GetClassificationTreeResponse">
		<annotation>
			<documentation>
The response includes one or more ClassificationNodes which includes only
immediate ClassificationNode children nodes if depth attribute in 
GetClassificationTreeRequest was 1, otherwise the decendent nodes 
upto specified depth level are returned.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "GetClassifiedObjectsRequest">
		<annotation>
			<documentation>
Get refs to all registry entrys that are classified by all the 
ClassificationNodes specified by ObjectRefList. 
Note this is an implicit logical AND operation 

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ObjectRefList"/>
		</sequence>
	</elementRule>
	<tag name = "GetClassifiedObjectsRequest">
		<annotation>
			<documentation>
Get refs to all registry entrys that are classified by all the 
ClassificationNodes specified by ObjectRefList. 
Note this is an implicit logical AND operation 

			</documentation>
		</annotation>
		<attribute name = "objectType" type = "string"/>
	</tag>
	<elementRule role = "GetClassifiedObjectsResponse">
		<annotation>
			<documentation>
objectType attribute can specify the type of objects that the registry
client is interested in, that is classified by this ClassificationNode.
It is a String that matches a choice in the type attribute of ExtrinsicObject.
The default value of '*' implies that client is interested in all types
of registry entrys that are classified by the specified ClassificationNode. 

			</documentation>
			<documentation>
The response includes a sequence of zero or more
RegistryEntrys that are classified by the ClassificationNodes 
specified in the ObjectRefList in GetClassifiedObjectsRequest.

			</documentation>
		</annotation>
		<sequence>
			<ref label = "RegistryEntry" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "GetClassifiedObjectsResponse">
		<annotation>
			<documentation>
objectType attribute can specify the type of objects that the registry
client is interested in, that is classified by this ClassificationNode.
It is a String that matches a choice in the type attribute of ExtrinsicObject.
The default value of '*' implies that client is interested in all types
of registry entrys that are classified by the specified ClassificationNode. 

			</documentation>
			<documentation>
The response includes a RegistryEntryList which has zero or more
RegistryEntrys that are classified by the ClassificationNodes 
specified in the ObjectRefList in GetClassifiedObjectsRequest.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "AdhocQueryRequest">
		<annotation>
			<documentation>
An Ad hoc query request specifies a query string as defined by [RS] in the queryString attribute

			</documentation>
		</annotation>
		<choice>
			<ref label = "FilterQuery"/>
			<ref label = "ReturnRegistryEntry"/>
			<ref label = "ReturnRepositoryItem"/>
			<ref label = "SQLQuery"/>
		</choice>
	</elementRule>
	<tag name = "AdhocQueryRequest">
		<annotation>
			<documentation>
An Ad hoc query request specifies a query string as defined by [RS] in the queryString attribute

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "SQLQuery" type = "string"/>
	<tag name = "SQLQuery"/>
	<elementRule role = "AdhocQueryResponse">
		<annotation>
			<documentation>
The response includes a RegistryEntryList which has zero or more
RegistryEntrys that match the query specified in AdhocQueryRequest.

			</documentation>
		</annotation>
		<choice>
			<ref label = "RegistryEntryList"/>
			<ref label = "FilterQueryResult"/>
			<ref label = "ReturnRegistryEntryResult"/>
			<ref label = "ReturnRepositoryItemResult"/>
		</choice>
	</elementRule>
	<tag name = "AdhocQueryResponse">
		<annotation>
			<documentation>
The response includes a RegistryEntryList which has zero or more
RegistryEntrys that match the query specified in AdhocQueryRequest.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "GetContentRequest">
		<annotation>
			<documentation>
Gets the actual content (not metadata) specified by the ObjectRefList

			</documentation>
		</annotation>
		<sequence>
			<ref label = "ObjectRefList"/>
		</sequence>
	</elementRule>
	<tag name = "GetContentRequest">
		<annotation>
			<documentation>
Gets the actual content (not metadata) specified by the ObjectRefList

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "GetContentResponse">
		<annotation>
			<documentation>
The GetObjectsResponse will have no sub-elements if there were no errors.
The actual contents will be in the other payloads of the message.  

			</documentation>
		</annotation>
		<empty/>
	</elementRule>
	<tag name = "GetContentResponse">
		<annotation>
			<documentation>
The GetObjectsResponse will have no sub-elements if there were no errors.
The actual contents will be in the other payloads of the message.  

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "RegistryProfile">
		<annotation>
			<documentation>
Describes the capability profile for the registry and what optional features
are supported

			</documentation>
		</annotation>
		<sequence>
			<ref label = "OptionalFeaturesSupported"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryProfile">
		<annotation>
			<documentation>
Describes the capability profile for the registry and what optional features
are supported

			</documentation>
		</annotation>
		<attribute name = "version" required = "true" type = "string"/>
	</tag>
	<elementRule role = "OptionalFeaturesSupported">
		<empty/>
	</elementRule>
	<tag name = "OptionalFeaturesSupported">
		<attribute name = "sqlQuery" type = "NMTOKEN">
			<enumeration value = "true"/>
			<enumeration value = "false"/>
		</attribute>
		<attribute name = "xQuery" type = "NMTOKEN">
			<enumeration value = "true"/>
			<enumeration value = "false"/>
		</attribute>
	</tag>
	<elementRule role = "FilterQuery">
		<annotation>
			<documentation> Begin FilterQuery DTD </documentation>
		</annotation>
		<choice>
			<ref label = "RegistryEntryQuery"/>
			<ref label = "AuditableEventQuery"/>
			<ref label = "ClassificationNodeQuery"/>
			<ref label = "RegistryPackageQuery"/>
			<ref label = "OrganizationQuery"/>
		</choice>
	</elementRule>
	<tag name = "FilterQuery">
		<annotation>
			<documentation> Begin FilterQuery DTD </documentation>
		</annotation>
	</tag>
	<elementRule role = "FilterQueryResult">
		<choice>
			<ref label = "RegistryEntryQueryResult"/>
			<ref label = "AuditableEventQueryResult"/>
			<ref label = "ClassificationNodeQueryResult"/>
			<ref label = "RegistryPackageQueryResult"/>
			<ref label = "OrganizationQueryResult"/>
		</choice>
	</elementRule>
	<tag name = "FilterQueryResult"/>
	<elementRule role = "RegistryEntryQueryResult">
		<sequence>
			<ref label = "RegistryEntryView" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryEntryQueryResult"/>
	<elementRule role = "RegistryEntryView">
		<empty/>
	</elementRule>
	<tag name = "RegistryEntryView">
		<attribute name = "objectURN" required = "true" type = "string"/>
		<attribute name = "contentURI" type = "string"/>
		<attribute name = "objectID" type = "string"/>
	</tag>
	<elementRule role = "AuditableEventQueryResult">
		<sequence>
			<ref label = "AuditableEventView" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "AuditableEventQueryResult"/>
	<elementRule role = "AuditableEventView">
		<empty/>
	</elementRule>
	<tag name = "AuditableEventView">
		<attribute name = "objectID" required = "true" type = "string"/>
		<attribute name = "timestamp" required = "true" type = "string"/>
	</tag>
	<elementRule role = "ClassificationNodeQueryResult">
		<sequence>
			<ref label = "ClassificationNodeView" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "ClassificationNodeQueryResult"/>
	<elementRule role = "ClassificationNodeView">
		<empty/>
	</elementRule>
	<tag name = "ClassificationNodeView">
		<attribute name = "objectURN" required = "true" type = "string"/>
		<attribute name = "contentURI" type = "string"/>
		<attribute name = "objectID" type = "string"/>
	</tag>
	<elementRule role = "RegistryPackageQueryResult">
		<sequence>
			<ref label = "RegistryPackageView" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryPackageQueryResult"/>
	<elementRule role = "RegistryPackageView">
		<empty/>
	</elementRule>
	<tag name = "RegistryPackageView">
		<attribute name = "objectURN" required = "true" type = "string"/>
		<attribute name = "contentURI" type = "string"/>
		<attribute name = "objectID" type = "string"/>
	</tag>
	<elementRule role = "OrganizationQueryResult">
		<sequence>
			<ref label = "OrganizationView" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "OrganizationQueryResult"/>
	<elementRule role = "OrganizationView">
		<empty/>
	</elementRule>
	<tag name = "OrganizationView">
		<attribute name = "orgURN" required = "true" type = "string"/>
		<attribute name = "objectID" type = "string"/>
	</tag>
	<elementRule role = "RegistryEntryQuery">
		<sequence>
			<ref label = "RegistryEntryFilter" occurs = "?"/>
			<ref label = "SourceAssociationBranch" occurs = "*"/>
			<ref label = "TargetAssociationBranch" occurs = "*"/>
			<ref label = "HasClassificationBranch" occurs = "*"/>
			<ref label = "SubmittingOrganizationBranch" occurs = "?"/>
			<ref label = "ResponsibleOrganizationBranch" occurs = "?"/>
			<ref label = "ExternalIdentifierFilter" occurs = "*"/>
			<ref label = "ExternalLinkFilter" occurs = "*"/>
			<ref label = "SlotFilter" occurs = "*"/>
			<ref label = "HasAuditableEventBranch" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryEntryQuery"/>
	<elementRule role = "SourceAssociationBranch">
		<sequence>
			<ref label = "AssociationFilter" occurs = "?"/>
			<ref label = "RegistryEntryFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "SourceAssociationBranch"/>
	<elementRule role = "TargetAssociationBranch">
		<sequence>
			<ref label = "AssociationFilter" occurs = "?"/>
			<ref label = "RegistryEntryFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "TargetAssociationBranch"/>
	<elementRule role = "HasClassificationBranch">
		<sequence>
			<ref label = "ClassificationFilter" occurs = "?"/>
			<ref label = "ClassificationNodeFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "HasClassificationBranch"/>
	<elementRule role = "SubmittingOrganizationBranch">
		<sequence>
			<ref label = "OrganizationFilter" occurs = "?"/>
			<ref label = "ContactFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "SubmittingOrganizationBranch"/>
	<elementRule role = "ResponsibleOrganizationBranch">
		<sequence>
			<ref label = "OrganizationFilter" occurs = "?"/>
			<ref label = "ContactFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "ResponsibleOrganizationBranch"/>
	<elementRule role = "HasAuditableEventBranch">
		<sequence>
			<ref label = "AuditableEventFilter" occurs = "?"/>
			<ref label = "UserFilter" occurs = "?"/>
			<ref label = "OrganizationFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "HasAuditableEventBranch"/>
	<elementRule role = "AuditableEventQuery">
		<sequence>
			<ref label = "AuditableEventFilter" occurs = "?"/>
			<ref label = "RegistryEntryQuery" occurs = "*"/>
			<ref label = "InvokedByBranch" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "AuditableEventQuery"/>
	<elementRule role = "InvokedByBranch">
		<sequence>
			<ref label = "UserFilter" occurs = "?"/>
			<ref label = "OrganizationQuery" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "InvokedByBranch"/>
	<elementRule role = "ClassificationNodeQuery">
		<sequence>
			<ref label = "ClassificationNodeFilter" occurs = "?"/>
			<ref label = "PermitsClassificationBranch" occurs = "*"/>
			<ref label = "HasParentNode" occurs = "?"/>
			<ref label = "HasSubnode" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "ClassificationNodeQuery"/>
	<elementRule role = "PermitsClassificationBranch">
		<sequence>
			<ref label = "ClassificationFilter" occurs = "?"/>
			<ref label = "RegistryEntryQuery" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "PermitsClassificationBranch"/>
	<elementRule role = "HasParentNode">
		<sequence>
			<ref label = "ClassificationNodeFilter" occurs = "?"/>
			<ref label = "HasParentNode" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "HasParentNode"/>
	<elementRule role = "HasSubnode">
		<sequence>
			<ref label = "ClassificationNodeFilter" occurs = "?"/>
			<ref label = "HasSubnode" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "HasSubnode"/>
	<elementRule role = "RegistryPackageQuery">
		<sequence>
			<ref label = "PackageFilter" occurs = "?"/>
			<ref label = "HasMemberBranch" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryPackageQuery"/>
	<elementRule role = "HasMemberBranch">
		<sequence>
			<ref label = "RegistryEntryQuery" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "HasMemberBranch"/>
	<elementRule role = "OrganizationQuery">
		<sequence>
			<ref label = "OrganizationFilter" occurs = "?"/>
			<ref label = "SubmitsRegistryEntry" occurs = "*"/>
			<ref label = "HasParentOrganization" occurs = "?"/>
			<ref label = "InvokesEventBranch" occurs = "*"/>
			<ref label = "ContactFilter" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "OrganizationQuery"/>
	<elementRule role = "SubmitsRegistryEntry">
		<sequence>
			<ref label = "RegistryEntryQuery" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "SubmitsRegistryEntry"/>
	<elementRule role = "HasParentOrganization">
		<sequence>
			<ref label = "OrganizationFilter" occurs = "?"/>
			<ref label = "HasParentOrganization" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "HasParentOrganization"/>
	<elementRule role = "InvokesEventBranch">
		<sequence>
			<ref label = "UserFilter" occurs = "?"/>
			<ref label = "AuditableEventFilter" occurs = "?"/>
			<ref label = "RegistryEntryQuery" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "InvokesEventBranch"/>
	<elementRule role = "ReturnRegistryEntry">
		<sequence>
			<ref label = "RegistryEntryQuery"/>
			<ref label = "WithClassifications" occurs = "?"/>
			<ref label = "WithSourceAssociations" occurs = "?"/>
			<ref label = "WithTargetAssociations" occurs = "?"/>
			<ref label = "WithAuditableEvents" occurs = "?"/>
			<ref label = "WithExternalLinks" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "ReturnRegistryEntry"/>
	<elementRule role = "WithClassifications">
		<sequence>
			<ref label = "ClassificationFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "WithClassifications"/>
	<elementRule role = "WithSourceAssociations">
		<sequence>
			<ref label = "AssociationFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "WithSourceAssociations"/>
	<elementRule role = "WithTargetAssociations">
		<sequence>
			<ref label = "AssociationFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "WithTargetAssociations"/>
	<elementRule role = "WithAuditableEvents">
		<sequence>
			<ref label = "AuditableEventFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "WithAuditableEvents"/>
	<elementRule role = "WithExternalLinks">
		<sequence>
			<ref label = "ExternalLinkFilter" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "WithExternalLinks"/>
	<elementRule role = "ReturnRegistryEntryResult">
		<sequence>
			<ref label = "RegistryEntryMetadata" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "ReturnRegistryEntryResult"/>
	<elementRule role = "RegistryEntryMetadata">
		<sequence>
			<ref label = "RegistryEntry"/>
			<ref label = "Classification" occurs = "*"/>
			<ref label = "SourceAssociations" occurs = "?"/>
			<ref label = "TargetAssociations" occurs = "?"/>
			<ref label = "AuditableEvent" occurs = "*"/>
			<ref label = "ExternalLink" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryEntryMetadata"/>
	<elementRule role = "SourceAssociations">
		<sequence>
			<ref label = "Association" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "SourceAssociations"/>
	<elementRule role = "TargetAssociations">
		<sequence>
			<ref label = "Association" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "TargetAssociations"/>
	<elementRule role = "ReturnRepositoryItem">
		<sequence>
			<ref label = "RegistryEntryQuery"/>
			<ref label = "RecursiveAssociationOption" occurs = "?"/>
			<ref label = "WithDescription" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "ReturnRepositoryItem"/>
	<elementRule role = "RecursiveAssociationOption">
		<sequence>
			<ref label = "AssociationType" occurs = "+"/>
		</sequence>
	</elementRule>
	<tag name = "RecursiveAssociationOption">
		<attribute name = "depthLimit" type = "string"/>
	</tag>
	<elementRule role = "AssociationType">
		<empty/>
	</elementRule>
	<tag name = "AssociationType">
		<attribute name = "role" required = "true" type = "string"/>
	</tag>
	<elementRule role = "WithDescription">
		<empty/>
	</elementRule>
	<tag name = "WithDescription"/>
	<elementRule role = "ReturnRepositoryItemResult">
		<sequence>
			<ref label = "RepositoryItem" occurs = "*"/>
		</sequence>
	</elementRule>
	<tag name = "ReturnRepositoryItemResult"/>
	<elementRule role = "RepositoryItem">
		<choice>
			<ref label = "RegistryPackage"/>
			<ref label = "ExtrinsicObject"/>
			<ref label = "WithdrawnObject"/>
			<ref label = "ExternalLink"/>
		</choice>
	</elementRule>
	<tag name = "RepositoryItem">
		<attribute name = "identifier" required = "true" type = "string"/>
		<attribute name = "name" required = "true" type = "string"/>
		<attribute name = "contentURI" required = "true" type = "string"/>
		<attribute name = "objectType" required = "true" type = "string"/>
		<attribute name = "status" required = "true" type = "string"/>
		<attribute name = "stability" required = "true" type = "string"/>
		<attribute name = "description" type = "string"/>
	</tag>
	<elementRule role = "RegistryPackage">
		<empty/>
	</elementRule>
	<tag name = "RegistryPackage"/>
	<elementRule role = "WithdrawnObject">
		<empty/>
	</elementRule>
	<tag name = "WithdrawnObject"/>
	<elementRule role = "ExternalLinkItem">
		<empty/>
	</elementRule>
	<tag name = "ExternalLinkItem"/>
	<elementRule role = "ObjectFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ObjectFilter"/>
	<elementRule role = "RegistryEntryFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryEntryFilter"/>
	<elementRule role = "IntrinsicObjectFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "IntrinsicObjectFilter"/>
	<elementRule role = "ExtrinsicObjectFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ExtrinsicObjectFilter"/>
	<elementRule role = "PackageFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "PackageFilter"/>
	<elementRule role = "OrganizationFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "OrganizationFilter"/>
	<elementRule role = "ContactFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ContactFilter"/>
	<elementRule role = "ClassificationNodeFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ClassificationNodeFilter"/>
	<elementRule role = "AssociationFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "AssociationFilter"/>
	<elementRule role = "ClassificationFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ClassificationFilter"/>
	<elementRule role = "ExternalLinkFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ExternalLinkFilter"/>
	<elementRule role = "SlotFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "SlotFilter"/>
	<elementRule role = "ExternalIdentifierFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "ExternalIdentifierFilter"/>
	<elementRule role = "AuditableEventFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "AuditableEventFilter"/>
	<elementRule role = "UserFilter">
		<sequence>
			<ref label = "Clause"/>
		</sequence>
	</elementRule>
	<tag name = "UserFilter"/>
	<elementRule role = "Clause">
		<annotation>
			<documentation>
The following lines define the XML syntax for Clause.

			</documentation>
		</annotation>
		<choice>
			<ref label = "SimpleClause"/>
			<ref label = "CompoundClause"/>
		</choice>
	</elementRule>
	<tag name = "Clause">
		<annotation>
			<documentation>
The following lines define the XML syntax for Clause.

			</documentation>
		</annotation>
	</tag>
	<elementRule role = "SimpleClause">
		<choice>
			<ref label = "BooleanClause"/>
			<ref label = "RationalClause"/>
			<ref label = "StringClause"/>
		</choice>
	</elementRule>
	<tag name = "SimpleClause">
		<attribute name = "leftArgument" required = "true" type = "string"/>
	</tag>
	<elementRule role = "CompoundClause">
		<sequence>
			<ref label = "Clause"/>
			<ref label = "Clause" occurs = "+"/>
		</sequence>
	</elementRule>
	<tag name = "CompoundClause">
		<attribute name = "connectivePredicate" required = "true" type = "NMTOKEN">
			<enumeration value = "And"/>
			<enumeration value = "Or"/>
		</attribute>
	</tag>
	<elementRule role = "BooleanClause">
		<empty/>
	</elementRule>
	<tag name = "BooleanClause">
		<attribute name = "booleanPredicate" required = "true" type = "NMTOKEN">
			<enumeration value = "true"/>
			<enumeration value = "false"/>
		</attribute>
	</tag>
	<elementRule role = "RationalClause">
		<choice>
			<ref label = "IntClause"/>
			<ref label = "FloatClause"/>
		</choice>
	</elementRule>
	<tag name = "RationalClause">
		<attribute name = "logicalPredicate" required = "true" type = "NMTOKEN">
			<enumeration value = "LE"/>
			<enumeration value = "LT"/>
			<enumeration value = "GE"/>
			<enumeration value = "GT"/>
			<enumeration value = "EQ"/>
			<enumeration value = "NE"/>
		</attribute>
	</tag>
	<elementRule role = "IntClause" type = "integer"/>
	<tag name = "IntClause"/>
	<elementRule role = "FloatClause" type = "float"/>
	<tag name = "FloatClause"/>
	<elementRule role = "StringClause" type = "string"/>
	<tag name = "StringClause">
		<attribute name = "stringPredicate" required = "true" type = "NMTOKEN">
			<enumeration value = "contains"/>
			<enumeration value = "-contains"/>
			<enumeration value = "startswith"/>
			<enumeration value = "-startswith"/>
			<enumeration value = "equal"/>
			<enumeration value = "-equal"/>
			<enumeration value = "endswith"/>
			<enumeration value = "-endswith"/>
		</attribute>
	</tag>
	<elementRule role = "RegistryErrorList">
		<annotation>
			<documentation> End FilterQuery DTD </documentation>
			<documentation> Begin RegistryError definition </documentation>
			<documentation> The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification </documentation>
		</annotation>
		<sequence>
			<ref label = "RegistryError" occurs = "+"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryErrorList">
		<annotation>
			<documentation> End FilterQuery DTD </documentation>
			<documentation> Begin RegistryError definition </documentation>
			<documentation> The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification </documentation>
		</annotation>
		<attribute name = "highestSeverity" type = "NMTOKEN">
			<enumeration value = "Warning"/>
			<enumeration value = "Error"/>
		</attribute>
	</tag>
	<elementRule role = "RegistryError" type = "string"/>
	<tag name = "RegistryError">
		<attribute name = "codeContext" required = "true" type = "string"/>
		<attribute name = "errorCode" required = "true" type = "string"/>
		<attribute name = "severity" type = "NMTOKEN">
			<enumeration value = "Warning"/>
			<enumeration value = "Error"/>
		</attribute>
		<attribute name = "location" type = "string"/>
		<attribute name = "xml:lang" type = "NMTOKEN"/>
	</tag>
	<elementRule role = "RegistryResponse">
		<sequence>
			<choice occurs = "?">
				<ref label = "AdhocQueryResponse"/>
				<ref label = "GetContentResponse"/>
				<ref label = "GetClassificationTreeResponse"/>
				<ref label = "GetClassifiedObjectsResponse"/>
				<ref label = "GetRootClassificationNodesResponse"/>
			</choice>
			<ref label = "RegistryErrorList" occurs = "?"/>
		</sequence>
	</elementRule>
	<tag name = "RegistryResponse">
		<attribute name = "status" required = "true" type = "NMTOKEN">
			<enumeration value = "success"/>
			<enumeration value = "failure"/>
		</attribute>
	</tag>
	<elementRule role = "RootElement">
		<annotation>
			<documentation> The contrived root node </documentation>
		</annotation>
		<choice>
			<ref label = "SubmitObjectsRequest"/>
			<ref label = "ApproveObjectsRequest"/>
			<ref label = "DeprecateObjectsRequest"/>
			<ref label = "RemoveObjectsRequest"/>
			<ref label = "GetRootClassificationNodesRequest"/>
			<ref label = "GetClassificationTreeRequest"/>
			<ref label = "GetClassifiedObjectsRequest"/>
			<ref label = "AdhocQueryRequest"/>
			<ref label = "GetContentRequest"/>
			<ref label = "AddSlotsRequest"/>
			<ref label = "RemoveSlotsRequest"/>
			<ref label = "RegistryResponse"/>
			<ref label = "RegistryProfile"/>
		</choice>
	</elementRule>
	<tag name = "RootElement">
		<annotation>
			<documentation> The contrived root node </documentation>
		</annotation>
	</tag>
	<elementRule role = "Href" type = "string"/>
	<tag name = "Href"/>
	<elementRule role = "XMLDocumentErrorLocn">
		<sequence>
			<ref label = "DocumentId"/>
			<ref label = "Xpath"/>
		</sequence>
	</elementRule>
	<tag name = "XMLDocumentErrorLocn"/>
	<elementRule role = "DocumentId" type = "string"/>
	<tag name = "DocumentId"/>
	<elementRule role = "Xpath" type = "string"/>
	<tag name = "Xpath"/>
</module>