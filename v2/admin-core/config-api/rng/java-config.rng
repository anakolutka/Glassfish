<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:sch="http://www.ascc.net/xml/schematron"
         xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:x="http://www.w3.org/1999/xhtml"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

  <define name="java-config">
    <element name="java-config">
      <x:div class='dtd'>
        Java Runtime environment configuration
      </x:div>
      <ref name="java-config-attlist"/>
      <optional>
        <ref name="profiler"/>
      </optional>
      <zeroOrMore>
        <choice>
          <ref name="jvm-options"/>
          <ref name="property"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="java-config-attlist" combine="interleave">
    <optional>
      <attribute name="java-home" a:defaultValue="${com.sun.aas.javaRoot}">
	<x:div class='dtd'>
        Specifies the installation directory for Java runtime.  JDK
        1.4 or higher is supported.
      </x:div>
    </attribute>
    </optional>
    <optional>
      <attribute name="debug-enabled" a:defaultValue="false">
        <x:div class='dtd'>
          If set to true, the server starts up in debug mode ready for
          attaching with a JPDA based debugger.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="debug-options" a:defaultValue="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n">
        <x:div class='dtd'>
          JPDA based debugging options string.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="rmic-options" a:defaultValue="-iiop -poa -alwaysgenerate -keepgenerated -g">
        <x:div class='dtd'>
          Options string passed to RMI compiler, at application
          deployment time.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="javac-options" a:defaultValue="-g">
        <x:div class='dtd'>
          Options string passed to Java compiler, at application
          deployment time.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="classpath-prefix">
        <x:div class='dtd'>
          A java classpath string that is prefixed to server-classpath
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="classpath-suffix">
        <x:div class='dtd'>
          A java classpath string that is appended to server-classpath
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="server-classpath">
        <x:div class='dtd'>
          A java classpath string that specifies the classes needed by
          the Application server. Do not expect users to change this
          under normal conditions.
          The shared application server classloader forms the final classpath 
          by concatenating classpath-prefix, ${INSTALL_DIR}/lib, 
          server-classpath, and classpath-suffix.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="system-classpath">
        <x:div class='dtd'>
          This classpath string supplied to the jvm at server startup.
          Contains appserv-launch.jar by default. Users may add to this
          classpath.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="native-library-path-prefix">
        <x:div class='dtd'>
          is prepended to the native library path, which is constructed internally.
          <x:p>
          Internally, the native library path is automatically
          constructed to be a concatenation of Application Server
          installation relative path for its native shared libraries,
          standard JRE native library path, the shell environment
          setting (LD-LIBRARY-PATH on Unix) and any path that may be
          specified in the profile element.
          </x:p>
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="native-library-path-suffix">
        <x:div class='dtd'>
          is appended to the native library path, which is constructed as described above.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="bytecode-preprocessors">
        <x:div class='dtd'>
          A comma separated list of classnames, each of which must
          implement the com.sun.appserv.BytecodePreprocessor
          interface.  Each of the specified preprocessor class will be
          called in the order specified. At the moment the comelling
          use is for a 3rd party Performance Profiling tool.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="env-classpath-ignored" a:defaultValue="true">
        <x:div class='dtd'>
          If set to false, the CLASSPATH environment variable will be
          read and appended to the Application Server classpath, which
          is constructed as described above. The CLASSPATH environment
          variable will be added after the classpath-suffix, at the
          very end.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
  </define>
  
</grammar>
