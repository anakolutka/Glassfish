# Language ja-JP translations for master.xml package.
# Automatically generated, 2008.
# 
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2012-01-16T16:07:16\n"
"PO-Revision-Date: 2009-05-18 01:40+0900\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: \n"

#. Tag: title
#, fuzzy, no-c-format
msgid "Integrating Weld into other environments"
msgstr "他の環境へのWeb Beansの統合"

#. Tag: para
#, no-c-format
msgid ""
"If you want to use Weld in another environment, you will need to provide "
"certain information to Weld via the integration SPI. In this Appendix we "
"will briefly discuss the steps needed."
msgstr ""

#. Tag: title
#, fuzzy, no-c-format
msgid "Enterprise Services"
msgstr "リソースサービス"

#. Tag: para
#, no-c-format
msgid ""
"If you just want to use managed beans, and not take advantage of enterprise "
"services (EE resource injection, CDI injection into EE component classes, "
"transactional events, support for CDI services in EJBs) and non-flat "
"deployments, then the generic servlet support provided by the \"Weld: "
"Servlets\" extension will be sufficient, and will work in any container "
"supporting the Servlet API."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"All SPIs and APIs described have extensive JavaDoc, which spell out the "
"detailed contract between the container and Weld."
msgstr ""

#. Tag: title
#, fuzzy, no-c-format
msgid "The Weld SPI"
msgstr "Web Beans SPI"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The Weld SPI is located in the <literal>weld-spi</literal> module, and "
"packaged as <literal>weld-spi.jar</literal>. Some SPIs are optional, and "
"should only be implemented if you need to override the default behavior; "
"others are required."
msgstr ""
"Web Beans SPIは<literal>webbeans-spi</literal>モジュールにあり、<literal>webbeans-"
"spi.jar</literal>としてパッケージされています。いくつかのSPIはオプションで、デフォルトの振る舞いを上書きする必要がある場合は、他のものが必要です。"

#. Tag: para
#, no-c-format
msgid ""
"All interfaces in the SPI support the decorator pattern and provide a "
"<literal>Forwarding</literal> class located in the "
"<literal>helpers</literal> sub package. Additional, commonly used, utility "
"classes, and standard implementations are also located in the "
"<literal>helpers</literal> sub package."
msgstr ""
"SPIのすべてのインタフェースがデコレータパターンをサポートし、<literal>helpers</literal> "
"サブパッケージの中にある<literal>Forwarding</literal>クラスを提供します。加えて、共通で使用されるユーティリティクラスや標準実装は<literal>helpers</literal>サブパッケージの中にあります、"

#. Tag: para
#, no-c-format
msgid ""
"Weld supports multiple environments. An environment is defined by an "
"implementation of the <literal>Environment</literal> interface. A number of "
"standard environments are built in, and described by the "
"<literal>Environments</literal> enumeration. Different environments require "
"different services to be present (for example a Servlet container doesn't "
"require transaction, EJB or JPA services). By default an EE environment is "
"assumed, but you can adjust the environment by calling "
"<literal>bootstrap.setEnvironment()</literal>."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Weld uses a generic-typed service registry to allow services to be "
"registered. All services implement the <literal>Service</literal> interface."
" The service registry allows services to be added and retrieved."
msgstr ""
"Web "
"Beansは、サービスの登録のために総称型のサービスレジストリを使用します。すべてのサービスが<literal>Service</literal>インタフェースを実装します。サービスレジストリは、サービスが追加されて、検索されることを可能とします。"

#. Tag: title
#, no-c-format
msgid "Deployment structure"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"An application is often comprised of a number of modules. For example, a "
"Java EE deployment may contain a number of EJB modules (containing business "
"logic) and war modules (containing the user interface). A container may "
"enforce certain <emphasis>accessibility</emphasis> rules which limit the "
"visibility of classes between modules. CDI allows these same rules to apply "
"to bean and observer method resolution. As the accessibility rules vary "
"between containers, Weld requires the container to "
"<emphasis>describe</emphasis> the deployment structure, via the "
"<literal>Deployment</literal> SPI."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The CDI specification discusses <emphasis>Bean Deployment "
"Archives</emphasis> (BDAs)&mdash;archives which are marked as containing "
"beans which should be deployed to the CDI container, and made available for "
"injection and resolution. Weld reuses this description of <emphasis>Bean "
"Deployment Archives</emphasis> in its deployment structure SPI. Each "
"deployment exposes the BDAs which it contains; each BDA may also reference "
"other which it can access. Together, the transitive closure of this graph "
"forms the beans which are deployed in the application."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To describe the deployment structure to Weld, the container should provide "
"an implementation of <literal>Deployment</literal>. "
"<literal>Deployment.getBeanDeploymentArchives()</literal> allows Weld to "
"discover the modules which make up the application. The CDI specification "
"also allows beans to be specified programmatically as part of the bean "
"deployment. These beans may, or may not, be in an existing BDA. For this "
"reason, Weld will call <literal>Deployment.loadBeanDeploymentArchive(Class "
"clazz)</literal> for each programmatically described bean."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"As programmatically described beans may result in additional BDAs being "
"added to the graph, Weld will discover the BDA structure every time an "
"unknown BDA is returned by "
"<literal>Deployment.loadBeanDeploymentArchive</literal>."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Virtual BDAs"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"In a strict container, each BDA might have to explicitly specify which other"
" BDAs it can access. However many containers will allow an easy mechanism to"
" make BDAs bi-directionally accessible (such as a library directory). In "
"this case, it is allowable (and reasonable) to describe all such archives as"
" a single, 'virtual' <literal>BeanDeploymentArchive</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"A container, might, for example, use a flat accessibility structure for the "
"application. In this case, a single <literal>BeanDeploymentArchive</literal>"
" would be attached to the <literal>Deployment</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<literal>BeanDeploymentArchive</literal> provides three methods which allow "
"it's contents to be discovered by "
"Weld&mdash;<literal>BeanDeploymentArchive.getBeanClasses()</literal> must "
"return all the classes in the BDA, "
"<literal>BeanDeploymentArchive.getBeansXml()</literal> must return a data "
"structure representing the <code>beans.xml</code> deployment descriptor for "
"the archive, and <literal>BeanDeploymentArchive.getEjbs()</literal> must "
"provide an EJB descriptor for every EJB in the BDA, or an empty list if it "
"is not an EJB archive."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To aid container integrator, Weld provides a built-in <code>beans.xml</code>"
" parser. To parse a <code>beans.xml</code> into the data-structure required "
"by <code>BeanDeploymentArchive</code>, the container should call "
"<code>Bootstrap.parseBeansXml(URL)</code>. Weld can also parse multiple "
"<code>beans.xml</code> files, merging them to become a single data-"
"structure. This can be achieved by calling "
"<code>Bootstrap.parseBeansXml(Iterable&lt;URL&gt;)</code>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"BDA X may also reference another BDA Y whose beans can be resolved by, and "
"injected into, any bean in BDA X. These are the accessible BDAs, and every "
"BDA that is directly accessible by BDA X should be returned. A BDA will also"
" have BDAs which are accessible transitively, and the transitive closure of "
"the sub-graph of BDA X describes all the beans resolvable by BDA X."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Matching the classloader structure for the deployment"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"In practice, you can regard the deployment structure represented by "
"<literal>Deployment</literal>, and the virtual BDA graph as a mirror of the "
"classloader structure for a deployment. If a class can from BDA X can be "
"loaded by another in BDA Y, it is accessible, and therefore BDA Y's "
"accessible BDAs should include BDA X."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To specify the directly accessible BDAs, the container should provide an "
"implementation of "
"<literal>BeanDeploymentArchive.getBeanDeploymentArchives()</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Weld allows the container to describe a circular graph, and will convert a "
"graph to a tree as part of the deployment process."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Certain services are provided for the whole deployment, whilst some are "
"provided per-BDA. BDA services are provided using "
"<literal>BeanDeploymentArchive.getServices()</literal> and only apply to the"
" BDA on which they are provided."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The contract for <code>Deployment</code> requires the container to specify "
"the portable extensions (see chapter 12 of the CDI specification) which "
"should be loaded by the application. To aid the container integrator, Weld "
"provides the method <code>Bootstrap.loadExtensions(ClassLoader)</code> which"
" will load the extensions for the specified classloader."
msgstr ""

#. Tag: title
#, no-c-format
msgid "EJB descriptors"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Weld delegates EJB 3 bean discovery to the container so that it doesn't "
"duplicate the work done by the EJB container, and respects any vendor-"
"extensions to the EJB definition."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>EjbDescriptor</literal> should return the relevant metadata as "
"defined in the EJB specification. Each business interface of a session bean "
"should be described using a <literal>BusinessInterfaceDescriptor</literal>."
msgstr ""
"<literal>EjbDescriptor</literal>は、ほとんど読んで字の通りですが、EJBの仕様で定義されている関連メタデータを返します。これらの二つのインタフェースに加えて、ローカルのビジネスインタフェース(インタフェースクラスとEJBのインスタンスをルックアップするために使用されるJNDI名をカプセル化したもの)を表す<literal>BusinessInterfaceDescriptor</literal>があります。"

#. Tag: title
#, no-c-format
msgid "EE resource injection and resolution services"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"All the EE resource services are per-BDA services, and may be provided using"
" one of two methods. Which method to use is at the discretion of the "
"integrator."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The integrator may choose to provide all EE resource injection services "
"themselves, using another library or framework. In this case the integrator "
"should use the <literal>EE</literal> environment, and implement the <xref "
"linkend=\"injection.services\" /> SPI."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Alternatively, the integrator may choose to use CDI to provide EE resource "
"injection. In this case, the <literal>EE_INJECT</literal> environment should"
" be used, and the integrator should implement the <xref "
"linkend=\"ejb.services.resolution\" />, <xref linkend=\"resource.services\" "
"/> and <xref linkend=\"jpa.services\" />."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"CDI only provides annotation-based EE resource injection; if you wish to "
"provide deployment descriptor (e.g. <literal>ejb-jar.xml</literal>) "
"injection, you must use <xref linkend=\"injection.services\" />."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"If the container performs EE resource injection, the injected resources must"
" be serializable. If EE resource injection is provided by Weld, the resolved"
" resource must be serializable."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"If you use a non-EE environment then you may implement any of the EE service"
" SPIs, and Weld will provide the associated functionality. There is no need "
"to implement those services you don't need!"
msgstr ""

#. Tag: title
#, no-c-format
msgid "EJB services"
msgstr "EJBサービス"

#. Tag: para
#, no-c-format
msgid "EJB services are split between two interfaces which are both per-BDA."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<literal>EJBServices</literal> is used to resolve local EJBs used to back "
"session beans, and must always be provided in an EE environment. "
"<literal>EJBServices.resolveEjb(EjbDescriptor ejbDescriptor)</literal> "
"returns a "
"wrapper&mdash;<literal>SessionObjectReference</literal>&mdash;around the EJB"
" reference. This wrapper allows Weld to request a reference that implements "
"the given business interface, and, in the case of SFSBs, both request the "
"removal of the EJB from the container and query whether the EJB has been "
"previously removed."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"<literal>EJBResolutionServices.resolveEjb(InjectionPoint ij)</literal> "
"allows the resolution of <literal>@EJB</literal> (for injection into managed"
" beans). This service is not required if the implementation of <xref "
"linkend=\"injection.services\" /> takes care of <literal>@EJB</literal> "
"injection."
msgstr ""
"(Java "
"EEリソースとしてのインジェクションの)Webサービスの参照の解決は、コンテナに委譲されます。あなたはこの操作を提供する<literal>WebServices</literal>の実装を提供する必要があります。Java"
" "
"EEリソースの解決のために、<literal>jndiName</literal>または<literal>mappedName</literal>が提供されるでしょう。"

#. Tag: title
#, no-c-format
msgid "JPA services"
msgstr "JPAサービス"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Just as EJB resolution is delegated to the container, resolution of "
"<literal>@PersistenceContext</literal> for injection into managed beans "
"(with the <literal>InjectionPoint</literal> provided), is delegated to the "
"container."
msgstr ""
"ちょうどEJBの解決がコンテナに委譲されるように、(<literal>InjectionPoint</literal>が与えられた)シンプルBeansへのインジェクションのための<literal>@PersistenceContext</literal>の解決、およびJava"
" "
"EEリソースとしてのインジェクションのための、永続コンテキストと(<literal>unitName</literal>が与えられた)永続ユニットの解決はコンテナに委譲されます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"To allow JPA integration, the <literal>JpaServices</literal> interface "
"should be implemented. This service is not required if the implementation of"
" <xref linkend=\"injection.services\" /> takes care of "
"<literal>@PersistenceContext</literal> injection."
msgstr ""
"(Java "
"EEリソースとしてのインジェクションの)Webサービスの参照の解決は、コンテナに委譲されます。あなたはこの操作を提供する<literal>WebServices</literal>の実装を提供する必要があります。Java"
" "
"EEリソースの解決のために、<literal>jndiName</literal>または<literal>mappedName</literal>が提供されるでしょう。"

#. Tag: title
#, no-c-format
msgid "Transaction Services"
msgstr "トランザクションサービス"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Weld delegates JTA activities to the container. The SPI provides a couple "
"hooks to easily achieve this with the <literal>TransactionServices</literal>"
" interface."
msgstr ""
"Web "
"BeansはJTAの活動をコンテナへ委譲する必要があります。SPIはこれを容易に実現するために、<literal>TransactionServices</literal>インタフェースで数カ所のフックを提供します。"

#. Tag: para
#, no-c-format
msgid ""
"Any <literal>javax.transaction.Synchronization</literal> implementation may "
"be passed to the <literal>registerSynchronization()</literal> method and the"
" SPI implementation should immediately register the synchronization with the"
" JTA transaction manager used for the EJBs."
msgstr ""
"どのような<literal>javax.transaction.Synchronization</literal>の実装も、<literal>registerSynchronization()</literal>メソッドに渡されるかもしれません。そしてSPIの実装は、EJBに使用されるJTAトランザクションマネージャとの同期をすぐに登録すべきです。"

#. Tag: para
#, no-c-format
msgid ""
"To make it easier to determine whether or not a transaction is currently "
"active for the requesting thread, the "
"<literal>isTransactionActive()</literal> method can be used. The SPI "
"implementation should query the same JTA transaction manager used for the "
"EJBs."
msgstr ""
"要求スレッドでトランザクションが現在アクティブであるかどうか確認しやすくするために、<literal>isTransactionActive()</literal>メソッドが使用されます。SPIの実装は、EJBで使用される同じJTAトランザクションマネージャに問い合わせを行うべきです。"

#. Tag: title
#, no-c-format
msgid "Resource Services"
msgstr "リソースサービス"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The resolution of <literal>@Resource</literal> (for injection into managed "
"beans) is delegated to the container. You must provide an implementation of "
"<literal>ResourceServices</literal> which provides these operations. This "
"service is not required if the implementation of <xref "
"linkend=\"injection.services\" /> takes care of <literal>@Resource</literal>"
" injection."
msgstr ""
"(Java "
"EEリソースとしてのインジェクションの)Webサービスの参照の解決は、コンテナに委譲されます。あなたはこの操作を提供する<literal>WebServices</literal>の実装を提供する必要があります。Java"
" "
"EEリソースの解決のために、<literal>jndiName</literal>または<literal>mappedName</literal>が提供されるでしょう。"

#. Tag: title
#, fuzzy, no-c-format
msgid "Injection Services"
msgstr "トランザクションサービス"

#. Tag: para
#, no-c-format
msgid ""
"An integrator may wish to use <literal>InjectionServices</literal> to "
"provide additional field or method injection over-and-above that provided by"
" Weld. An integration into a Java EE environment may use "
"<literal>InjectionServices</literal> to provide EE resource injection for "
"managed beans."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<literal>InjectionServices</literal> provides a very simple contract, the "
"<literal>InjectionServices.aroundInject(InjectionContext ic);</literal> "
"interceptor will be called for every instance that CDI injects, whether it "
"is a contextual instance, or a non-contextual instance injected by "
"<literal>InjectionTarget.inject()</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The <literal>InjectionContext</literal> can be used to discover additional "
"information about the injection being performed, including the "
"<literal>target</literal> being injected. <literal>ic.proceed()</literal> "
"should be called to perform CDI-style injection, and call initializer "
"methods."
msgstr ""

#. Tag: title
#, fuzzy, no-c-format
msgid "Security Services"
msgstr "リソースサービス"

#. Tag: para
#, no-c-format
msgid ""
"In order to obtain the <literal>Principal</literal> representing the current"
" caller identity, the container should provide an implementation of "
"<literal>SecurityServices</literal>."
msgstr ""

#. Tag: title
#, fuzzy, no-c-format
msgid "Bean Validation Services"
msgstr "トランザクションサービス"

#. Tag: para
#, no-c-format
msgid ""
"In order to obtain the default <literal>ValidatorFactory</literal> for the "
"application deployment, the container should provide an implementation of "
"<literal>ValidationServices</literal>."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Identifying the BDA being addressed"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"When a client makes a request to an application which uses Weld, the request"
" may be addressed at any of the BDAs in the application deployment. To allow"
" Weld to correctly service the request, it needs to know which BDA the "
"request is addressed at. Where possible, Weld will provide some context, but"
" use of these by the integrator is optional."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Most Servlet contains use a classloader-per-war, this may provide a good way"
" to identify the BDA in use for web requests."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"When Weld needs to identify the BDA, it will use one of these services, "
"depending on what is servicing the request:"
msgstr ""

#. Tag: term
#, no-c-format
msgid ""
"<literal>ServletServices.getBeanDeploymentArchive(ServletContext "
"ctx)</literal>"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Identify the war in use. The <literal>ServletContext</literal> is provided "
"for additional context."
msgstr ""

#. Tag: title
#, no-c-format
msgid "The bean store"
msgstr "Beanストア"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Weld uses a map like structure to store bean instances - "
"<literal>org.jboss.weld.context.api.BeanStore</literal>. You may find "
"<literal>org.jboss.weld.context.api.helpers.ConcurrentHashMapBeanStore</literal>"
" useful."
msgstr ""
"Web Beansは、Beanインスタンスを保存するために構成されたものとしてあるMap - "
"<literal>org.jboss.webbeans.context.api.BeanStore</literal>を使用します。<literal>org.jboss.webbeans.context.api.helpers.ConcurrentHashMapBeanStore</literal>が役に立つことがわかるでしょう。"

#. Tag: title
#, no-c-format
msgid "The application context"
msgstr "アプリケーションコンテキスト"

#. Tag: para
#, no-c-format
msgid ""
"Weld expects the Application Server or other container to provide the "
"storage for each application's context. The "
"<literal>org.jboss.weld.context.api.BeanStore</literal> should be "
"implemented to provide an application scoped storage."
msgstr ""

#. Tag: title
#, fuzzy, no-c-format
msgid "Initialization and shutdown"
msgstr "ブートストラップとシャットダウン"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>org.jboss.weld.bootstrap.api.Bootstrap</literal> interface "
"defines the initialization for Weld, bean deployment and bean validation. To"
" boot Weld, you must create an instance of "
"<literal>org.jboss.weld.bootstrap.WeldBeansBootstrap</literal> (which "
"implements <literal>Boostrap</literal>), tell it about the services in use, "
"and then request the container start."
msgstr ""
"<literal>org.jboss.webbeans.bootstrap.api.Bootstrap</literal>インタフェースはWeb "
"Beansのブートストラップを定義します。Web "
"Beansを起動するために、(<literal>Boostrap</literal>を実装した)<literal>org.jboss.webbeans.bootstrap.api.Bootstrap</literal>インスタンスを取得し、使用中のSPIに伝え、コンテナに起動を要求する必要があります。"

#. Tag: para
#, no-c-format
msgid ""
"The bootstrap is split into phases, container initialization, bean "
"deployment, bean validation and shutdown. Initialization will create a "
"manager, and add the built-in contexts, and examine the deployment "
"structure. Bean deployment will deploy any beans (defined using annotations,"
" programmatically, or built in). Bean validation will validate all beans."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"To initialize the container, you call "
"<literal>Bootstrap.startInitialization()</literal>. Before calling "
"<literal>startInitialization()</literal>, you must register any services "
"required by the environment. You can do this by calling, for example, "
"<literal>bootstrap.getServices().add(JpaServices.class, new "
"MyJpaServices())</literal>. You must also provide the application context "
"bean store."
msgstr ""
"ブートストラップの初期化のためには<literal>Bootstrap.initialize()</literal>を呼びます。<literal>initialize()</literal>を呼び出す前に、その環境で必要となるサービスを登録する必要があります。これは、<literal>bootstrap.getServices().add(JpaServices.class,"
" new "
"MyJpaServices())</literal>を呼び出すことで可能です。また、アプリケーションコンテキストのBeanストアを提供する必要があります。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Having called <literal>startInitialization()</literal>, the "
"<literal>Manager</literal> for each BDA can be obtained by calling "
"<literal>Bootstrap.getManager(BeanDeploymentArchive bda)</literal>."
msgstr ""
"<literal>initialize()</literal>が呼び出されると、<literal>Manager</literal>は<literal>Bootstrap.getManager()</literal>を呼ぶことで得ることができます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"To deploy the discovered beans, call "
"<literal>Bootstrap.deployBeans()</literal>."
msgstr "コンテナをブートするためには<literal>Bootstrap.boot()</literal>を呼びます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"To validate the deployed beans, call "
"<literal>Bootstrap.validateBeans()</literal>."
msgstr "コンテナをブートするためには<literal>Bootstrap.boot()</literal>を呼びます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"To place the container into a state where it can service requests, call "
"<literal>Bootstrap.endInitialization()</literal>"
msgstr "コンテナをブートするためには<literal>Bootstrap.boot()</literal>を呼びます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"To shutdown the container you call <literal>Bootstrap.shutdown()</literal>. "
"This allows the container to perform any cleanup operations needed."
msgstr ""
"コンテナをシャットダウンするためには<literal>Bootstrap.shutdown()</literal>、または<literal>webBeansManager.shutdown()</literal>を呼びます。これで、コンテナは必要なクリーンアップ操作を実行できます。"

#. Tag: title
#, no-c-format
msgid "Resource loading"
msgstr "リソースのロード"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Weld needs to load classes and resources from the classpath at various "
"times. By default, they are loaded from the Thread Context ClassLoader if "
"available, if not the same classloader that was used to load Weld, however "
"this may not be correct for some environments. If this is case, you can "
"implement <literal>org.jboss.weld.spi.ResourceLoader</literal>."
msgstr ""
"Web "
"Beansは様々なタイミングでクラスパスからクラスとリソースをロードする必要があります。デフォルトでは、可能であればスレッドコンテキストクラスローダからロードします。しかしながら、もしWeb"
" "
"Beansのロードに使用されたクラスローダと異なる場合は、ある環境ではこれは正しくないかもしれません。もしそうであれば、<literal>org.jboss.webbeans.spi.ResourceLoader</literal>を実装することができます。"

#. Tag: title
#, no-c-format
msgid "The contract with the container"
msgstr "コンテナとの契約"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"There are a number of requirements that Weld places on the container for "
"correct functioning that fall outside implementation of APIs."
msgstr "Web Beans RIは、APIの実装からは外れますが正しく機能するために、コンテナ上に配置するにあたって多くの要件があります。"

#. Tag: term
#, no-c-format
msgid "Classloader isolation"
msgstr "クラスローダの分離"

#. Tag: para
#, no-c-format
msgid ""
"If you are integrating Weld into an environment that supports deployment of "
"multiple applications, you must enable, automatically, or through user "
"configuration, classloader isolation for each CDI application."
msgstr ""

#. Tag: term
#, no-c-format
msgid "Servlet"
msgstr "サーブレット"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into a Servlet environment you must register "
"<literal>org.jboss.weld.servlet.WeldListener</literal> as a Servlet "
"listener, either automatically, or through user configuration, for each CDI "
"application which uses Servlet."
msgstr ""
"Web "
"Beansをサーブレット環境と統合しているなら、自動的またはユーザ設定によって、<literal>org.jboss.webbeans.servlet.WebBeansListener</literal>をサーブレットリスナーとして登録する必要があります。この登録は、サーブレットを使用する各Web"
" Beansアプリケーションで必要です。"

#. Tag: para
#, no-c-format
msgid ""
"You must ensure that <literal>WeldListener.contextInitialized()</literal> is"
" called after beans are deployed is complete "
"(<literal>Bootstrap.deployBeans()</literal> has been called)."
msgstr ""

#. Tag: term
#, no-c-format
msgid "JSF"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into a JSF environment you must register "
"<literal>org.jboss.weld.jsf.WeldPhaseListener</literal> as a phase listener."
msgstr ""
"Web "
"Beansをサーブレット環境と統合しているなら、自動的またはユーザ設定によって、<literal>org.jboss.webbeans.servlet.WebBeansListener</literal>をサーブレットリスナーとして登録する必要があります。この登録は、サーブレットを使用する各Web"
" Beansアプリケーションで必要です。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into a JSF environment you must register "
"<literal>org.jboss.weld.el.WeldELContextListener</literal> as an EL Context "
"listener."
msgstr ""
"Web "
"Beansをサーブレット環境と統合しているなら、自動的またはユーザ設定によって、<literal>org.jboss.webbeans.servlet.WebBeansListener</literal>をサーブレットリスナーとして登録する必要があります。この登録は、サーブレットを使用する各Web"
" Beansアプリケーションで必要です。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into a JSF environment you must register "
"<literal>org.jboss.weld.jsf.ConversationAwareViewHandler</literal> as a "
"delegating view handler."
msgstr ""
"Web "
"Beansをサーブレット環境と統合しているなら、自動的またはユーザ設定によって、<literal>org.jboss.webbeans.servlet.WebBeansListener</literal>をサーブレットリスナーとして登録する必要があります。この登録は、サーブレットを使用する各Web"
" Beansアプリケーションで必要です。"

#. Tag: para
#, no-c-format
msgid ""
"If you are integrating Weld into a JSF environment you must obtain the bean "
"manager for the module and then call "
"<literal>BeanManager.wrapExpressionFactory()</literal>, passing "
"<literal>Application.getExpressionFactory()</literal> as the argument. The "
"wrapped expression factory must be used in all EL expression evaluations "
"performed by JSF in this web application."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"If you are integrating Weld into a JSF environment you must obtain the bean "
"manager for the module and then call "
"<literal>BeanManager.getELResolver()</literal>, The returned EL resolver "
"should be registered with JSF for this web application."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"There are a number of ways you can obtain the bean manager for the module. "
"You could call <literal>Bootstrap.getManager()</literal>, passing in the BDA"
" for this module. Alternatively, you could use the injection into Java EE "
"component classes, or look up the bean manager in JNDI."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into a JSF environment you must register "
"<literal>org.jboss.weld.servlet.ConversationPropagationFilter</literal> as a"
" Servlet listener, either automatically, or through user configuration, for "
"each CDI application which uses JSF. This filter can be registered for all "
"Servlet deployment safely."
msgstr ""
"Web "
"BeansをJSF環境と統合しているなら、自動的またはユーザ設定によって、<literal>org.jboss.webbeans.servlet.ConversationPropagationFilter</literal>をサーブレットフィルタとして登録する必要があります。この登録は、JSFを使用する各Web"
" Beansアプリケーションで必要です。すべてのサーブレットのデプロイのために、このフィルタは安全に登録できます。"

#. Tag: para
#, fuzzy, no-c-format
msgid "Weld only supports JSF 1.2 and above."
msgstr "Web BeansはJSF 1.2以上をサポートしています。"

#. Tag: term
#, no-c-format
msgid "JSP"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into a JSP environment you must register "
"<literal>org.jboss.weld.el.WeldELContextListener</literal> as an EL Context "
"listener."
msgstr ""
"Web "
"Beansをサーブレット環境と統合しているなら、自動的またはユーザ設定によって、<literal>org.jboss.webbeans.servlet.WebBeansListener</literal>をサーブレットリスナーとして登録する必要があります。この登録は、サーブレットを使用する各Web"
" Beansアプリケーションで必要です。"

#. Tag: para
#, no-c-format
msgid ""
"If you are integrating Weld into a JSP environment you must obtain the bean "
"manager for the module and then call "
"<literal>BeanManager.wrapExpressionFactory()</literal>, passing "
"<literal>Application.getExpressionFactory()</literal> as the argument. The "
"wrapped expression factory must be used in all EL expression evaluations "
"performed by JSP."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"If you are integrating Weld into a JSP environment you must obtain the bean "
"manager for the module and then call "
"<literal>BeanManager.getELResolver()</literal>, The returned EL resolver "
"should be registered with JSP for this web application."
msgstr ""

#. Tag: term
#, no-c-format
msgid "Session Bean Interceptor"
msgstr "セッションBeanインタセプタ"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you are integrating Weld into an EJB environment you must register the "
"<literal>aroundInvoke</literal> method of "
"<literal>org.jboss.weld.ejb.SessionBeanInterceptor</literal> as a EJB "
"around-invoke interceptor for all EJBs in the application, either "
"automatically, or through user configuration, for each CDI application which"
" uses enterprise beans. If you are running in a EJB 3.1 environment, you "
"should register this as an around-timeout interceptor as well."
msgstr ""
"Web "
"BeansをEJB環境と統合しているなら、自動的またはユーザ設定によって、アプリケーション中のすべてのEJBに対して<literal>org.jboss.webbeans.ejb.SessionBeanInterceptor</literal>をEJBインタセプタとして登録する必要があります。この登録は、エンタープライズBeanを使用する各Web"
" Beansアプリケーションで必要です。"

#. Tag: para
#, no-c-format
msgid ""
"You must register the <literal>SessionBeanInterceptor</literal> as the inner"
" most interceptor in the stack for all EJBs."
msgstr ""
"すべてのEJBで、<literal>SessionBeanInterceptor</literal>をインタセプタスタックの中で最も内側に登録する必要があります。"

#. Tag: term
#, fuzzy, no-c-format
msgid "The <literal>weld-core.jar</literal>"
msgstr "<literal>webbeans-core.jar</literal>"

#. Tag: para
#, no-c-format
msgid ""
"Weld can reside on an isolated classloader, or on a shared classloader. If "
"you choose to use an isolated classloader, the default "
"<literal>SingletonProvider</literal>, "
"<literal>IsolatedStaticSingletonProvider</literal>, can be used. If you "
"choose to use a shared classloader, then you will need to choose another "
"strategy."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"You can provide your own implementation of <literal>Singleton</literal> and "
"<literal>SingletonProvider</literal> and register it for use using "
"<literal>SingletonProvider.initialize(SingletonProvider provider)</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Weld also provides an implementation of Thread Context Classloader per "
"application strategy, via the <literal>TCCLSingletonProvider</literal>."
msgstr ""

#. Tag: term
#, no-c-format
msgid "Binding the manager in JNDI"
msgstr "JNDIにマネージャをバインドする"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"You should bind the bean manager for the bean deployment archive into JNDI "
"at <literal>java:comp/BeanManager</literal>. The type should be "
"<literal>javax.enterprise.inject.spi.BeanManager</literal>. To obtain the "
"correct bean manager for the bean deployment archive, you may call "
"<literal>bootstrap.getBeanManager(beanDeploymentArchive)</literal>"
msgstr ""
"あなたはマネージャの<literal>ObjectFactory</literal> への<literal>参照</literal>をJNDIの "
"<literal>java:app/Manager</literal>にバインドしなければなりません。その型は<literal>javax.inject.manager.Manager</literal>と<literal>org.jboss.webbeans.resources.ManagerObjectFactory</literal>でなければなりません。"

#. Tag: term
#, no-c-format
msgid "Performing CDI injection on Java EE component classes"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The CDI specification requires the container to provide injection into non-"
"contextual resources for all Java EE component classes. Weld delegates this "
"responsibility to the container. This can be achieved using the CDI defined "
"<literal>InjectionTarget</literal> SPI. Furthermore, you must perform this "
"operation on the correct bean manager for the bean deployment archive "
"containing the EE component class."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The CDI specification also requires that a "
"<literal>ProcessInjectionTarget</literal> event is fired for every Java EE "
"component class. Furthermore, if an observer calls "
"<literal>ProcessInjectionTarget.setInjectionTarget()</literal> the container"
" must use <emphasis>the specified</emphasis> injection target to perform "
"injection."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To help the integrator, Weld provides "
"<literal>WeldManager.fireProcessInjectionTarget()</literal> which returns "
"the <literal>InjectionTarget</literal> to use."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"// Fire ProcessInjectionTarget, returning the InjectionTarget\n"
"// to use\n"
"InjectionTarget it = weldBeanManager.fireProcessInjectionTarget(clazz);\n"
"\n"
"// Per instance required, create the creational context\n"
"CreationalContext&lt;?&gt; cc = beanManager.createCreationalContext(null);\n"
"\n"
"// Produce the instance, performing any constructor injection required\n"
"Object instance = it.produce();\n"
"\n"
"// Perform injection and call initializers\n"
"it.inject(instance, cc);\n"
"\n"
"// Call the post-construct callback\n"
"it.postConstruct(instance);\n"
"\n"
"// Call the pre-destroy callback\n"
"it.preDestroy(instance);\n"
"\n"
"// Clean up the instance\n"
"it.dispose();\n"
"cc.release();"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The container may intersperse other operations between these calls. Further,"
" the integrator may choose to implement any of these calls in another "
"manner, assuming the contract is fulfilled."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"When performing injections on EJBs you must use the Weld-defined SPI, "
"<literal>WeldManager</literal>. Furthermore, you must perform this operation"
" on the correct bean manager for the bean deployment archive containing the "
"EJB."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"// Obtain the EjbDescriptor for the EJB\n"
"// You may choose to use this utility method to get the descriptor\n"
"EjbDescriptor&lt;?&gt; ejbDescriptor = beanManager.getEjbDescriptor(ejbName);\n"
"\n"
"// Get an the Bean object\n"
"Bean&lt;?&gt; bean = beanManager.getBean(ejbDescriptor);\n"
"\n"
"// Create the injection target\n"
"InjectionTarget it = deploymentBeanManager.createInjectionTarget(ejbDescriptor);\n"
"\n"
"// Per instance required, create the creational context\n"
"CreationalContext&lt;?&gt; cc = deploymentBeanManager.createCreationalContext(bean);\n"
"\n"
"// Perform injection and call initializers\n"
"it.inject(instance, cc);\n"
"\n"
"// You may choose to have CDI call the post construct and pre destroy\n"
"// lifecycle callbacks\n"
"\n"
"// Call the post-construct callback\n"
"it.postConstruct(instance);\n"
"\n"
"// Call the pre-destroy callback\n"
"it.preDestroy(instance);\n"
"\n"
"// Clean up the instance\n"
"it.dispose();\n"
"cc.release();"
msgstr ""
