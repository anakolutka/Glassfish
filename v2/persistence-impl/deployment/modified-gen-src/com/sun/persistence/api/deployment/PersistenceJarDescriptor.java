/*
 * The contents of this file are subject to the terms 
 * of the Common Development and Distribution License 
 * (the "License").  You may not use this file except 
 * in compliance with the License.
 * 
 * You can obtain a copy of the license at 
 * glassfish/bootstrap/legal/CDDLv1.0.txt or 
 * https://glassfish.dev.java.net/public/CDDLv1.0.html. 
 * See the License for the specific language governing 
 * permissions and limitations under the License.
 * 
 * When distributing Covered Code, include this CDDL 
 * HEADER in each file and include the License file at 
 * glassfish/bootstrap/legal/CDDLv1.0.txt.  If applicable, 
 * add the following below this CDDL HEADER, with the 
 * fields enclosed by brackets "[]" replaced with your 
 * own identifying information: Portions Copyright [yyyy] 
 * [name of copyright owner]
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-1973 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// This file may need to modified upon recompilation of the source schema. 
// Generated on: 2005.04.20 at 08:27:00 IST 
//


package com.sun.persistence.api.deployment;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.AccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.sun.persistence.api.deployment.ClassDescriptor;
import com.sun.persistence.api.deployment.DescriptorNode;

@XmlAccessorType(value = AccessType.FIELD)
@XmlType(name = "", propOrder = {
    "classDescriptor"
})
@XmlRootElement(name = "persistence-jar", namespace = "http://java.sun.com/xml/ns/persistence_ORM")
public class PersistenceJarDescriptor
    extends DescriptorNode
{

    @XmlElement(name = "class", namespace = "http://java.sun.com/xml/ns/persistence_ORM", type = ClassDescriptor.class)
    protected List<ClassDescriptor> classDescriptor;

    protected List<ClassDescriptor> _getClassDescriptor() {
        if (classDescriptor == null) {
            classDescriptor = new ArrayList<ClassDescriptor>();
        }
        return classDescriptor;
    }

    /**
     * Gets the value of the classDescriptor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the classDescriptor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getClassDescriptor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link com.sun.persistence.api.deployment.ClassDescriptor}
     * 
     */
    public List<ClassDescriptor> getClassDescriptor() {
        return this._getClassDescriptor();
    }

    public boolean isSetClassDescriptor() {
        return (this.classDescriptor!= null);
    }

    public void unsetClassDescriptor() {
        this.classDescriptor = null;
    }

    //Added by Sahoo, as these are still not available in schema
    @javax.xml.bind.annotation.XmlTransient
    private List<NamedQueryDescriptor> namedQuery;
    @javax.xml.bind.annotation.XmlTransient
    private SequenceGeneratorDescriptor sequenceGenerator;
    @javax.xml.bind.annotation.XmlTransient
    private TableGeneratorDescriptor tableGenerator;
    @javax.xml.bind.annotation.XmlTransient
    private GeneratedIdTableDescriptor generatedIdTable;
     
    protected List<NamedQueryDescriptor> _getNamedQuery() {
        if (namedQuery == null) {
            namedQuery = new DescriptorNodeList<NamedQueryDescriptor>(this);
        }
        return namedQuery;
    }
 
    public List<NamedQueryDescriptor> getNamedQuery() {
        return this._getNamedQuery();
    }
     
    public void setSequenceGenerator(SequenceGeneratorDescriptor value) {
        this.sequenceGenerator = value;
        value.parent (this);
    }
     
    public SequenceGeneratorDescriptor getSequenceGenerator() {
        return sequenceGenerator;
    }
     
    public void setTableGenerator(TableGeneratorDescriptor value) {
        this.tableGenerator = value;
        value.parent (this);
    }
     
    public TableGeneratorDescriptor getTableGenerator() {
        return tableGenerator;
    }
     
    public void setGeneratedIdTable(GeneratedIdTableDescriptor value) {
        this.generatedIdTable = value;
        value.parent (this);
    }
      
    public GeneratedIdTableDescriptor getGeneratedIdTable() {
        return generatedIdTable;
    }

    //Added code

    PersistenceJarDescriptor() {
        classDescriptor = new com.sun.persistence.api.deployment.DescriptorNodeList<ClassDescriptor>(this);
    }

    public void accept(Visitor v) throws DeploymentException {
        v.visitPersistenceJarDescriptor(this);
    }

    /**
     * @param className of the class for which descriptor should be returned
     * @return descriptor object for the given class name, returns null if there
     *         is no such class in this PersistenceJar.
     */
    public ClassDescriptor getClassDescriptor(String className) {
        for (ClassDescriptor c : getClassDescriptor()) {
            if (c.getName().equals(className)) {
                return c;
            }
        }
        return null;
    }
}
