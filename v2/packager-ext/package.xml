<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 Copyright 2006 Sun Microsystems, Inc. All rights reserved.
 Use is subject to license terms.
-->

<!-- QQ. FIXME TODO: 
   - forte.zip license icon.zip unlauncher stuff 
   - locale packaging
-->

<target name="package" 
        depends="package-SUNWasu,
                 package-jdk,
                 package-SUNWasac,
                 package-SUNWascmn,
                 package-SUNWasdem,
                 package-SUNWasr,
                 package-SUNWasman,
                 package-SUNWasut,
                 package-SUNWjhrt,
                 package-SUNWasjdoc,
                 package-SUNWderby,
		 package-ant,
                 package-imq,
                 create-ship,
		 clean-tmp,
                 clean-packed-jars" >
</target>


<!-- package ant.zip -->
<target name="package-ant" depends="publish-init">
    <zip zipfile="${ant.package.home}/ant.zip"
         basedir="${install.dir}/lib/ant"
         excludes="bootstrap.**,docs/**,pkgs/**"/>
</target>

<!-- package imq.zip -->
<target name="package-imq" depends="publish-init">
    <zip zipfile="${imq.package.home}/imq.ee.license.zip" 
         basedir="${imq.publish.home}"
         includes="imq/etc/lic/imqbrokerunl.lic"/>

    <zip zipfile="${imq.package.home}/imq.se.license.zip" 
         basedir="${imq.publish.home}"
         includes="imq/var/lic/imqbrokertry.lic,
                   imq/etc/lic/imqbrokerstd.lic"/>

    <zip zipfile="${imq.package.home}/imq.pe.license.zip" 
         basedir="${imq.publish.home}"
         includes="imq/var/lic/imqbrokertry.lic"/>

    <zip zipfile="${imq.package.home}/imq.zip" 
         basedir="${imq.publish.home}"
	 includes="imq/**"
         excludes="bootstrap.**,imq.zip,
	           imq/etc/lic/**,
	           imq/var/lic/**,
	           imq/lib/activation.jar,
	           imq/lib/com-sun-commons-logging.jar,
	           imq/lib/jhall.jar,
	           imq/lib/mail.jar,
	           imq/lib/saaj-api.jar,
	           imq/lib/saaj-impl.jar,
	           imq/pkgs/**,
	           imq/rpms/**"/>

</target>

<target name="clean-tmp" depends="publish-init"> 
    <echo message="deleting install_tmp directory"/>
    <exec dir="." executable="rm">
    	<arg line="-rf ${install.tmp.dir}"/>
    </exec>
    <echo message="deleting asman_tmp directory"/>
    <exec dir="." executable="rm">
    	<arg line="-rf ${asman.tmp.dir}"/>
    </exec>
    <exec dir="." executable="rm">
    	<arg line="-rf ${asdem.tmp.dir}"/>
    </exec>

</target>

<!-- package SUNWjhrt -->
<target name="package-SUNWjhrt" depends="publish-init"
        description="Package SUNWjhrt, aka jhall">
    <echo message="Packaging SUNWjhrt, aka jhall..."/>
    <antcall target="package-common">
        <param name="component.package" value="SUNWjhrt"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${jhall.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>
</target>


<!-- package jdk.zip -->
<target name="package-jdk" unless="darwin" depends="publish-init,package-install-init,publish-jdk">
    <zip zipfile="${jdk.package.home}/jdk.zip"
         basedir="${jdk.publish.home}" 
         excludes="jre/**,bootstrap.**,src.zip,rpms/**,pkgs/**,pkgarchive/**"/>
 </target>




<target name="package-SUNWasac" 
        depends="publish-init,package-install-init"
        description="Package SUNWasac, aka admin stuff">
    <echo message="Creating package SUNWasac, aka admin stuff..."/>

    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWasac"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="package-common">
        <param name="component.package" value="SUNWasac"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${tools.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWasac"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>
</target>

<target name="package-SUNWderby"
        depends="publish-init,package-install-init"
        description="Package SUNWderby, aka derby">
    <echo message="Packaging SUNWderby, aka derby..."/>

    <antcall target="package-common">
        <param name="component.package" value="SUNWderby"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${derby.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>
</target>

<target name="package-SUNWasdem"
        depends="publish-init,package-install-init"
        description="Package SUNWasdem, aka samples">
    <echo message="Packaging SUNWasdem, aka samples..."/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWasdem"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="package-common">
        <param name="component.package" value="SUNWasdem"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${packager.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>

    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWasdem"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>
</target>


<target name="package-SUNWascmn" 
        depends="publish-init,package-install-init"
        description="Package SUNWascmn, aka server runtime">
    <echo message="Packaging SUNWascmn, aka server runtime..."/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWascmn"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="package-common">
        <param name="component.package" value="SUNWascmn"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${packager.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWascmn"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>

</target>

<target name="package-SUNWasu"  
       depends="publish-init,package-install-init,publish-asu"
    description="Merge more than one package">        
    <echo message="${native.build}" />
    <antcall target="build-solaris-package">    
        <param name="component.package" value="SUNWasu"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="package-common">
        <param name="component.package" value="SUNWasu"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${packager.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>

    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWasu"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>
</target>



<!-- asr has only etc/init.d scripts and rbac files. Build it
     only if we are building Solaris package -->
<target name="package-SUNWasr" if="solarissvr4build"
        depends="publish-init,package-install-init"
        description="Package SUNWasr">
    <echo message="Packaging SUNWasr"/>

    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWasr"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}"/>
    </antcall>
<!-- rpms and zips will not be built for SUNWasr-->

    <!--antcall target="package-common">
        <param name="component.package" value="SUNWasr"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${packager.package.home}"/>
        <param name="component.publish.home" value="${asro.tmp.dir}"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWasr"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${asro.tmp.dir}"/>
    </antcall-->
</target>

<target name="package-SUNWasjdoc" 
        depends="package-SUNWasjdoc-unix,package-SUNWasjdoc-windows">
</target>

<target name="package-SUNWasjdoc-windows" 
        depends="publish-init" if="windows">
     <zip destfile="${s1as-javadocs.package.home}/SUNWasjdoc.zip"
         basedir="${javadoc.publish.home}/appserver"/>
</target>

<target name="package-SUNWasjdoc-unix" 
        depends="publish-init,publish-install-SUNWasjdoc"
        description="Package SUNWasjdoc" if="unix">
    <echo message="Creating package SUNWasjdoc"/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWasjdoc"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${javadoc.publish.home}"/>
    </antcall>
    <antcall target="package-common">
        <param name="component.package" value="SUNWasjdoc"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${s1as-javadocs.package.home}"/>
        <param name="component.publish.home" value="${javadoc.publish.home}/appserver"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWasjdoc"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${javadoc.publish.home}/appserver"/>
    </antcall>
</target>


<target name="package-SUNWasman" if="unix"
	depends="publish-init-asman,publish-init"
        description="Package SUNWasman, aka The man pages">
    <echo message="Packaging SUNWasman, The man pages ..."/>
        <antcall target="create-zip-filelist">
            <param name="component.package" value="SUNWasman"/>
            <param name="package.home" value="${package.home}"/>
            <param name="publish.package.home" value="${packager.package.home}"/>
        </antcall>
	<antcall target="build-rpm">
	    <param name="component.package" value="SUNWasman"/>
	    <param name="package.home" value="${package.home}"/>
	    <param name="component.publish.home"
               value="${asman.tmp.dir}"/>
	</antcall>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWasman"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${asman.tmp.dir}"/>
    </antcall>
</target>

<target name="package-SUNWasut" 
        depends="publish-init,package-install-init"
        description="Package SUNWasut, aka upgrade tool">
    <echo message="Creating package SUNWasut, aka upgrade tool..."/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWasut"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="package-common">
        <param name="component.package" value="SUNWasut"/>
        <param name="package.home" value="${package.home}"/>
        <param name="publish.package.home" value="${packager.package.home}"/>
        <param name="component.publish.home" value="${install.dir}"/>
    </antcall>
    <echo message="Creating package SUNWasut, aka upgrade tool...."/>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWasut"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>
</target>

<target name="create-ship" depends="publish-init, create-ship-solaris, create-ship-linux">
</target>

<target name="create-ship-solaris" if="solarissvr4build">
<copy file="internal/install/bundled_pkg.txt" todir="${pkgs.home}"/>
<copy file="internal/install/as8pkginstall.pl" todir="${pkgs.home}"/>
<copy file="internal/install/conf.txt" todir="${pkgs.home}"/>
<copy file="internal/install/admin.conf" todir="${pkgs.home}"/>
<!--copy file="../installer/misc/pe-licenses/3RD-PARTY-LICENSE.txt" todir="${pkgs.home}"/-->
<!--copy file="../installer/misc/pe-licenses/J2EE14_AppServer_License.txt" tofile="${pkgs.home}/LICENSE.txt"/-->
<copy file="internal/install/xcp" todir="${pkgs.home}"/>
<chmod perm="ugo+x">
        <fileset dir="${pkgs.home}"
                 includes="as8pkginstall.pl, xcp"/>
</chmod>
</target>

<target name="create-ship-linux" if="linuxrpmbuild">
<exec executable="sh" dir="internal/install" failonerror="true">
       <arg line="./copy_bundled_rpm.txt ./bundled_rpm.txt ../../${rpms.home}/bundled_rpm.txt ${build_release_id}"/> 
</exec>
<copy file="internal/install/as8rpminstall.pl" todir="${rpms.home}"/>
<copy file="internal/install/conf.linux.txt" todir="${rpms.home}"/>
<copy file="internal/install/xcp" todir="${rpms.home}"/>
<copy file="internal/install/asenv" todir="${rpms.home}"/>
<copy file="internal/install/appservenv" todir="${rpms.home}"/>
<copy file="internal/install/filelista" todir="${rpms.home}"/>
<copy file="internal/install/filelistb" todir="${rpms.home}"/>
<!--copy file="../installer/misc/pe-licenses/3RD-PARTY-LICENSE.txt" todir="${rpms.home}"/-->
<!-- copy file="../installer/misc/pe-licenses/J2EE14_AppServer_License.txt" tofile="${rpms.home}/LICENSE.txt"/-->
<copy file="packages/common_files/i.asenv" todir="${rpms.home}"/>
<copy file="packages/common_files/i.appservenv" todir="${rpms.home}"/>
<copy file="${ant.package.home}/ant.zip" todir="${rpms.home}"/>
<copy file="${ant.package.home}/SUNWjhrt.zip" todir="${rpms.home}"/>
<!--
<copy file="${ext_rpm_dir}/imq_se/3.6/20040617/Linux/imq/rpms/sun-javahelp-2_0-linux-i586.rpm" todir="${rpms.home}"/>
<copy file="${ext_rpm_dir}/imq_se/3.6/20040617/Linux/imq/rpms/sun-nspr-4.1.6-2.i386.rpm" todir="${rpms.home}"/>
<copy file="${ext_rpm_dir}/imq_se/3.6/20040617/Linux/imq/rpms/sun-nss-3.3.10-1.i386.rpm" todir="${rpms.home}"/> -->
<chmod perm="ugo+x">
        <fileset dir="${rpms.home}"
                 includes="as8rpminstall.pl, xcp, asenv, appservenv"/>
</chmod>
</target>

<target name="package-external" 
        depends="package-SUNWjmail,
                 package-SUNWjaf">
</target>
<!-- package SUNWjaf -->
<target name="package-SUNWjaf" depends="publish-init,package-install-init,publish-external-init"
        description="Package SUNWjaf, aka Java Activation Framework">
    <echo message="Packaging SUNWjaf, aka Java Activation Framework..."/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWjaf"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWjaf"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}"/>
    </antcall>
</target>

<!-- package SUNWjmail -->
<target name="package-SUNWjmail" depends="publish-init,package-install-init,publish-external-init"
        description="Package SUNWjmail, aka JavaMail">
    <echo message="Packaging SUNWjmail, aka JavaMail..."/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWjmail"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWjmail"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>
</target>

<!-- package SUNWaclg -->
<target name="package-SUNWaclg" depends="publish-init,publish-external-init"
        description="Package SUNWaclg, aka commons-logging">
    <echo message="Packaging SUNWaclg, aka commons-logging..."/>
    <antcall target="build-solaris-package">	
        <param name="component.package" value="SUNWaclg"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" 
               value="${install.tmp.dir}"/>
    </antcall>
    <antcall target="build-rpm">  
        <param name="component.package" value="SUNWaclg"/>
        <param name="package.home" value="${package.home}"/>
        <param name="component.publish.home" value="${install.tmp.dir}/appserver"/>
    </antcall>
</target>

<!-- Target to pack jars that are bundled with SUNWasu -->
<target name="jar-pack-SUNWasu-jars" >
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-cmp.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-jstl.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-tags.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-ws.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="com-sun-commons-launcher.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="j2ee-svc.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="jsf-impl.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall> 
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="sun-appserv-ant.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="sun-as-jsr88-dm.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib/deployment"/>
    </antcall> 
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-ws.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib/"/>
    </antcall> 
    <!-- antcall target="jar-pack">
        <param name="pack.jar.name" value="toplink-essentials.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib/"/>
    </antcall --> 
</target>
<target name="jar-pack-SUNWascmn-jars" >
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-ext.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-rt.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="javaee.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall> 
</target>
<target name="jar-pack-SUNWasac-jars" >
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-admin.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="admin-cli.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall>
    <antcall target="jar-pack">
        <param name="pack.jar.name" value="appserv-deployment-client.jar"/>
        <param name="pack.jar.dir" value="${install.dir}/lib"/>
    </antcall> 
</target>

<!-- removes the packed jars -->
<target name="clean-packed-jars" >
     <delete>
       <fileset dir="${install.dir}/lib" includes="**/*.pack.gz" /> 
       <fileset dir="${install.dir}/lib/normalized" includes="**/*" /> 
       <fileset dir="${install.dir}/lib/deployment" includes="**/*.pack.gz" />
    </delete>
</target>
