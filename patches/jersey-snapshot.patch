Index: nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/provider/ProgressStatusJsonProvider.java
===================================================================
--- nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/provider/ProgressStatusJsonProvider.java	(revision 63278)
+++ nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/provider/ProgressStatusJsonProvider.java	(working copy)
@@ -1,7 +1,7 @@
 /*
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  *
- * Copyright (c) 2012 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012-2014 Oracle and/or its affiliates. All rights reserved.
  *
  * The contents of this file are subject to the terms of either the GNU
  * General Public License Version 2 only ("GPL") or the Common Development
@@ -43,16 +43,12 @@
 import java.io.OutputStream;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Type;
-import java.util.Collection;
 import java.util.Set;
 import javax.ws.rs.Produces;
 import javax.ws.rs.WebApplicationException;
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.MultivaluedMap;
 import javax.ws.rs.ext.Provider;
-import org.codehaus.jackson.JsonEncoding;
-import org.codehaus.jackson.JsonFactory;
-import org.codehaus.jackson.JsonGenerator;
 import org.glassfish.api.admin.ProgressStatus;
 import org.glassfish.api.admin.progress.ProgressStatusBase;
 import org.glassfish.api.admin.progress.ProgressStatusBase.ChildProgressStatus;
@@ -64,18 +60,18 @@
 @Provider
 @Produces({MediaType.APPLICATION_JSON, "application/x-javascript"})
 public class ProgressStatusJsonProvider extends BaseProvider<ProgressStatusBase> {
-    
+
     private static final JsonFactory factory = new JsonFactory();
-    
+
     public ProgressStatusJsonProvider() {
         super(ProgressStatus.class, MediaType.APPLICATION_JSON_TYPE, new MediaType("application", "x-javascript"));
     }
-    
+
     @Override
     protected boolean isGivenTypeWritable(Class<?> type, Type genericType) {
         return desiredType.isAssignableFrom(type);
     }
-    
+
     @Override
     public void writeTo(ProgressStatusBase proxy, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,
             MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream) throws IOException, WebApplicationException {
@@ -85,7 +81,7 @@
         out.writeEndObject();
         out.flush();
     }
-    
+
     public void writeJson(String name, ProgressStatusBase ps, int allocatedSteps, JsonGenerator out) throws IOException {
         if (ps == null) {
             return;
@@ -118,5 +114,5 @@
     public String getContent(ProgressStatusBase proxy) {
         throw new UnsupportedOperationException("Not supported yet.");
     }
-    
+
 }
Index: nucleus/admin/util/pom.xml
===================================================================
--- nucleus/admin/util/pom.xml	(revision 63278)
+++ nucleus/admin/util/pom.xml	(working copy)
@@ -174,8 +174,8 @@
             <scope>provided</scope>
         </dependency>
         <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-core-asl</artifactId>
+            <groupId>com.fasterxml.jackson.jaxrs</groupId>
+            <artifactId>jackson-jaxrs-base</artifactId>
         </dependency>
     </dependencies>
 </project>
Index: nucleus/admin/util/src/main/java/com/sun/enterprise/admin/remote/reader/ProgressStatusDTOJsonProprietaryReader.java
===================================================================
--- nucleus/admin/util/src/main/java/com/sun/enterprise/admin/remote/reader/ProgressStatusDTOJsonProprietaryReader.java	(revision 63278)
+++ nucleus/admin/util/src/main/java/com/sun/enterprise/admin/remote/reader/ProgressStatusDTOJsonProprietaryReader.java	(working copy)
@@ -1,7 +1,7 @@
 /*
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  *
- * Copyright (c) 2013 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013-2014 Oracle and/or its affiliates. All rights reserved.
  *
  * The contents of this file are subject to the terms of either the GNU
  * General Public License Version 2 only ("GPL") or the Common Development
@@ -42,9 +42,9 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
-import org.codehaus.jackson.JsonFactory;
-import org.codehaus.jackson.JsonParser;
-import org.codehaus.jackson.JsonToken;
+import com.fasterxml.jackson.core.JsonFactory;
+import com.fasterxml.jackson.core.JsonParser;
+import com.fasterxml.jackson.core.JsonToken;
 import org.glassfish.api.admin.progress.ProgressStatusDTO;
 import org.glassfish.api.admin.progress.ProgressStatusDTO.ChildProgressStatusDTO;
 
@@ -53,14 +53,14 @@
  * @author mmares
  */
 public class ProgressStatusDTOJsonProprietaryReader implements ProprietaryReader<ProgressStatusDTO> {
-    
+
     private static final JsonFactory factory = new JsonFactory();
-    
+
     @Override
     public boolean isReadable(Class<?> type, String mimetype) {
         return type.isAssignableFrom(ProgressStatusDTO.class);
     }
-    
+
     public ProgressStatusDTO readFrom(final HttpURLConnection urlConnection) throws IOException {
         return readFrom(urlConnection.getInputStream(), urlConnection.getContentType());
     }
@@ -72,7 +72,7 @@
             JsonToken token = jp.nextToken(); //sorounding object
             jp.nextToken(); //Name progress-status
             JsonToken token2 = jp.nextToken();
-            if (token != JsonToken.START_OBJECT || 
+            if (token != JsonToken.START_OBJECT ||
                     token2 != JsonToken.START_OBJECT ||
                     !"progress-status".equals(jp.getCurrentName())) {
                 throw new IOException("Not expected type (progress-status) but (" + jp.getCurrentName() + ")");
@@ -87,7 +87,7 @@
         ChildProgressStatusDTO child = readChildProgressStatus(jp);
         return child.getProgressStatus();
     }
-    
+
     public static ChildProgressStatusDTO readChildProgressStatus(JsonParser jp) throws IOException {
         ProgressStatusDTO psd = new ProgressStatusDTO();
         int allocatedSteps = 0;
Index: nucleus/admin/util/src/main/java/com/sun/enterprise/admin/remote/reader/ProgressStatusEventJsonProprietaryReader.java
===================================================================
--- nucleus/admin/util/src/main/java/com/sun/enterprise/admin/remote/reader/ProgressStatusEventJsonProprietaryReader.java	(revision 63278)
+++ nucleus/admin/util/src/main/java/com/sun/enterprise/admin/remote/reader/ProgressStatusEventJsonProprietaryReader.java	(working copy)
@@ -42,9 +42,9 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
-import org.codehaus.jackson.JsonFactory;
-import org.codehaus.jackson.JsonParser;
-import org.codehaus.jackson.JsonToken;
+import com.fasterxml.jackson.core.JsonFactory;
+import com.fasterxml.jackson.core.JsonParser;
+import com.fasterxml.jackson.core.JsonToken;
 import org.glassfish.api.admin.progress.ProgressStatusEvent;
 import org.glassfish.api.admin.progress.ProgressStatusEventComplete;
 import org.glassfish.api.admin.progress.ProgressStatusEventCreateChild;
@@ -56,14 +56,14 @@
  * @author mmares
  */
 public class ProgressStatusEventJsonProprietaryReader implements ProprietaryReader<ProgressStatusEvent> {
-    
+
     private static final JsonFactory factory = new JsonFactory();
-    
+
     @Override
     public boolean isReadable(Class<?> type, String mimetype) {
         return type.isAssignableFrom(ProgressStatusEvent.class);
     }
-    
+
     public ProgressStatusEvent readFrom(HttpURLConnection urlConnection) throws IOException {
         return readFrom(urlConnection.getInputStream(), urlConnection.getContentType());
     }
@@ -75,7 +75,7 @@
             JsonToken token = jp.nextToken(); //sorounding object
             jp.nextToken(); //Name progress-status-event
             JsonToken token2 = jp.nextToken();
-            if (token != JsonToken.START_OBJECT || 
+            if (token != JsonToken.START_OBJECT ||
                     token2 != JsonToken.START_OBJECT ||
                     !"progress-status-event".equals(jp.getCurrentName())) {
                 throw new IOException("Not expected type (progress-status-event) but (" + jp.getCurrentName() + ")");
@@ -85,7 +85,7 @@
             jp.close();
         }
     }
-    
+
     public static ProgressStatusEvent readProgressStatusEvent(JsonParser jp) throws IOException {
         String id = null;
         JsonToken token = null;
@@ -116,7 +116,7 @@
         }
         return result;
     }
-    
+
     public static void readToPSEventSet(ProgressStatusEventSet event, JsonParser jp) throws IOException {
         while (jp.nextToken() != JsonToken.END_OBJECT) {
             String fieldname = jp.getCurrentName();
@@ -128,7 +128,7 @@
             }
         }
     }
-    
+
     public static void readToPSEventProgress(ProgressStatusEventProgress event, JsonParser jp) throws IOException {
         while (jp.nextToken() != JsonToken.END_OBJECT) {
             String fieldname = jp.getCurrentName();
@@ -142,7 +142,7 @@
             }
         }
     }
-    
+
     public static void readToPSEventComplete(ProgressStatusEventComplete event, JsonParser jp) throws IOException {
         while (jp.nextToken() != JsonToken.END_OBJECT) {
             String fieldname = jp.getCurrentName();
@@ -152,7 +152,7 @@
             }
         }
     }
-    
+
     public static void readToPSEventCreateChild(ProgressStatusEventCreateChild event, JsonParser jp) throws IOException {
         while (jp.nextToken() != JsonToken.END_OBJECT) {
             String fieldname = jp.getCurrentName();
Index: nucleus/packager/nucleus-jersey/pom.xml
===================================================================
--- nucleus/packager/nucleus-jersey/pom.xml	(revision 63278)
+++ nucleus/packager/nucleus-jersey/pom.xml	(working copy)
@@ -103,20 +103,20 @@
             <artifactId>javax.ws.rs-api</artifactId>
         </dependency>
         <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-mapper-asl</artifactId>
+            <groupId>com.fasterxml.jackson.jaxrs</groupId>
+            <artifactId>jackson-jaxrs-base</artifactId>
         </dependency>
         <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-jaxrs</artifactId>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-core</artifactId>
         </dependency>
         <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-xc</artifactId>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-annotations</artifactId>
         </dependency>
         <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-core-asl</artifactId>
+            <groupId>com.fasterxml.jackson.jaxrs</groupId>
+            <artifactId>jackson-jaxrs-json-provider</artifactId>
         </dependency>
         <dependency>
             <groupId>org.codehaus.jettison</groupId>
Index: nucleus/pom.xml
===================================================================
--- nucleus/pom.xml	(revision 63278)
+++ nucleus/pom.xml	(working copy)
@@ -147,15 +147,15 @@
         <servlet-api.version>3.1.0</servlet-api.version>
         <grizzly.version>2.3.12</grizzly.version>
         <saaj-api.version>1.3.4</saaj-api.version>
-        <hk2.version>2.3.0-b02</hk2.version>
-        <hk2.plugin.version>2.3.0-b02</hk2.plugin.version>
+        <hk2.version>2.3.0-b05</hk2.version>
+        <hk2.plugin.version>2.3.0-b05</hk2.plugin.version>
         <trilead-ssh2.version>build212-hudson-6</trilead-ssh2.version>
         <pfl.version>4.0.0-b004</pfl.version>
         <gmbal.version>4.0.0-b001</gmbal.version>
         <woodstox.version>4.1.2</woodstox.version>
         <antlr.version>2.7.6</antlr.version>
-        <jersey.version>2.8</jersey.version>
-        <jackson.version>1.9.11</jackson.version>
+        <jersey.version>2.9-SNAPSHOT</jersey.version>
+        <jackson.version>2.3.2</jackson.version>
         <jettison.version>1.3.3</jettison.version>
         <jax-rs-api.version>2.0</jax-rs-api.version>
         <mimepull.version>1.9.4</mimepull.version>
@@ -747,23 +747,28 @@
                 <version>${javax.annotation-api.version}</version>
             </dependency>
             <dependency>
-                <groupId>org.codehaus.jackson</groupId>
-                <artifactId>jackson-mapper-asl</artifactId>
+                <groupId>com.fasterxml.jackson.jaxrs</groupId>
+                <artifactId>jackson-jaxrs-base</artifactId>
                 <version>${jackson.version}</version>
             </dependency>
             <dependency>
-                <groupId>org.codehaus.jackson</groupId>
-                <artifactId>jackson-jaxrs</artifactId>
+                <groupId>com.fasterxml.jackson.core</groupId>
+                <artifactId>jackson-core</artifactId>
                 <version>${jackson.version}</version>
             </dependency>
+             <dependency>
+                <groupId>com.fasterxml.jackson.core</groupId>
+                <artifactId>jackson-annotations</artifactId>
+                <version>${jackson.version}</version>
+            </dependency>
             <dependency>
-                <groupId>org.codehaus.jackson</groupId>
-                <artifactId>jackson-xc</artifactId>
+                <groupId>com.fasterxml.jackson.core</groupId>
+                <artifactId>jackson-databind</artifactId>
                 <version>${jackson.version}</version>
             </dependency>
             <dependency>
-                <groupId>org.codehaus.jackson</groupId>
-                <artifactId>jackson-core-asl</artifactId>
+                <groupId>com.fasterxml.jackson.jaxrs</groupId>
+                <artifactId>jackson-jaxrs-json-provider</artifactId>
                 <version>${jackson.version}</version>
             </dependency>
             <dependency>
