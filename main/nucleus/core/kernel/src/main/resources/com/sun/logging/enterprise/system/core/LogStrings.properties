#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2009-2011 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# Log messages used by the javax.enterprise.system.core logger 
# LogDomains.CORE_LOGGER, subsystem CORE.
# See java.text.MessageFormat for details on constructing messages.
# Messages in this file must be of the form 
# <Subsystem><4CharIntegerMessageId>:<message text>
#
#example.message1=WEB0001: Test Message. Parameter 1={0} parameter 2={1}
#example.message2=WEB0002: Date Message. Parameter 1={0,date} Parameter 2={1,time}
#example.message3=WEB0003: Number Message. Parameter 1={0,number,integer}

core.resourcedeploy_error=CORE5005: Error in resource deploy.
core.resource_disabled=CORE5039: Resource named {0} [Type: {1}] is disabled. It was not loaded.

#
# used in AbstractManager.java & ApplicationLifeCycle.java

server.ioexception=CORE5060: IOException : 
server.exception=CORE5061: Exception : 


#
optionalpkg.error=CORE5097: Exception occurred while satisfying optional package dependencies : {0}
satisfy.optionalpkg.dependency=CORE5098: Satisfying Optional Packages dependencies...

#
# Used in SystemAppLifecycle
#

#
# Used in ApplicationLoaderService
#
cannot.delete.temp.file=CORE10004: Cannot delete created temporary file {0}
cannot.find.applicationinfo=CORE10005: Cannot find the application type for the artifact at: {0}. Was the container or sniffer removed?
cannot.determine.location=CORE10007: Cannot determine original location for application: {0}
cannot.find.sniffer=CORE10008: Cannot find sniffer for module type: {0}
cannot.find.sniffer.for.app=CORE10009: Cannot find any sniffer for deployed app: {0} 
loading.application.time=CORE10010: Loading application {0} done in {1} ms
exception.open.artifact=CORE10011: IOException while opening deployed artifact
not.found.in.original.location=CORE10012: Application previously deployed is not at its original location any more: {0}
source.not.directory=CORE10013: Source is not a directory, using temporary location {0}
exception.while.deploying=CORE10016: Exception while deploying
ioexception.while.deploying=CORE10017: IOException while deploying

#
# Used in SnifferAdapter
#
core.snifferadapter.starting.container=CORE10018: Attempting to start the {0} container.
core.snifferadapter.container.started=CORE10019: Done with starting {0} container in {1} ms.
core.snifferadapter.no.container.available=CORE10020: Could not start container , no exception provided.
CORE10020.diag.cause.1=The container could not be started.
CORE10020.diag.check.1=Ensure the libraries for the container are available.
core.snifferadapter.exception.starting.container=CORE10021: Exception while starting container {0}.
CORE10021.diag.cause.1=An exception occurred while attempting to start the container.
CORE10021.diag.check.1=Please resolve issues mentioned in the stack trace.
core.snifferadapter.exception.mapping.request=CORE10022: Exception while mapping the request.
CORE10022.diag.cause.1=An exception occurred while mapping a request to the container.
CORE10022.diag.check.1=Please resolve issues mentioned in the stack trace.

#
# Used in AdminConsoleAdapter
#

console.adapter.timeout=GUIAPT0010:Timeout occurred when processing Admin Console request.
console.adapter.cannotProcess=GUIAPT0020:Cannot process admin console request.
console.adapter.resourceError=GUIAPT0030:Unable to serve resource: {0}.  Cause: {1}
console.adapter.resourceNotFound=GUIAPT0040:Resource not found:  {0}
GUIAPT0020.diag.cause.1=GUIAPT0040:InterruptedException occurred while the service thread is running.
console.adapter.propertyError=GUIAPT0050:Cannot write property '{0}' for AdminService in domain.xml
