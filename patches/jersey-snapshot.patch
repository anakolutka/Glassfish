Index: appserver/pom.xml
===================================================================
--- appserver/pom.xml	(revision 60375)
+++ appserver/pom.xml	(working copy)
@@ -123,7 +123,7 @@
         <wsdl4j.version>1.6.2</wsdl4j.version>
         <websocket-api.version>1.0-rc1</websocket-api.version>
         <tyrus.version>1.0-b13</tyrus.version>
-        <jsonp.version>1.0-b04</jsonp.version>
+        <jsonp.version>1.0-b05</jsonp.version>
         <concurrent-api.version>1.0-b05</concurrent-api.version>
         <concurrent.version>1.0-b04</concurrent.version>
         <javax.batch-api.version>1.0-b13</javax.batch-api.version>
Index: appserver/packager/jersey/pom.xml
===================================================================
--- appserver/packager/jersey/pom.xml	(revision 60375)
+++ appserver/packager/jersey/pom.xml	(working copy)
@@ -123,31 +123,35 @@
             </build>
         </profile>
     </profiles>
-    
+
     <dependencies>
-       <dependency>	  
-	    <groupId>org.glassfish.main.packager</groupId>
-	    <artifactId>nucleus-jersey</artifactId>
+        <dependency>
+            <groupId>org.glassfish.main.packager</groupId>
+            <artifactId>nucleus-jersey</artifactId>
             <version>${project.version}</version>
             <type>zip</type>
             <optional>true</optional>
-       </dependency>
-       <dependency>
-           <groupId>org.glassfish.jersey.media</groupId>
-           <artifactId>jersey-media-moxy</artifactId>
-       </dependency>
-       <dependency>
-           <groupId>org.glassfish.jersey.containers.glassfish</groupId>
-           <artifactId>jersey-gf-ejb</artifactId>
-       </dependency>
-       <dependency>
-           <groupId>org.glassfish.jersey.containers</groupId>
-           <artifactId>jersey-container-servlet</artifactId>
-       </dependency>
-       <dependency>
-           <groupId>org.glassfish.jersey.containers</groupId>
-           <artifactId>jersey-container-servlet-core</artifactId>
-       </dependency>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.jersey.media</groupId>
+            <artifactId>jersey-media-moxy</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.jersey.containers.glassfish</groupId>
+            <artifactId>jersey-gf-ejb</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.jersey.containers</groupId>
+            <artifactId>jersey-container-servlet</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.jersey.containers</groupId>
+            <artifactId>jersey-container-servlet-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.jersey.media</groupId>
+            <artifactId>jersey-media-json-processing</artifactId>
+        </dependency>
     </dependencies>
 </project>
 
Index: appserver/admingui/common/src/main/java/org/glassfish/admingui/common/security/AdminConsoleAuthModule.java
===================================================================
--- appserver/admingui/common/src/main/java/org/glassfish/admingui/common/security/AdminConsoleAuthModule.java	(revision 60375)
+++ appserver/admingui/common/src/main/java/org/glassfish/admingui/common/security/AdminConsoleAuthModule.java	(working copy)
@@ -41,20 +41,18 @@
 
 import java.net.MalformedURLException;
 import java.net.URL;
-import java.util.Enumeration;
-import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
 import javax.ws.rs.client.Client;
+import javax.ws.rs.client.ClientBuilder;
 import javax.ws.rs.client.Entity;
 import javax.ws.rs.client.WebTarget;
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.MultivaluedHashMap;
 import javax.ws.rs.core.MultivaluedMap;
 import javax.ws.rs.core.Response;
-import javax.ws.rs.client.ClientBuilder;
 
 import javax.security.auth.Subject;
 import javax.security.auth.callback.Callback;
@@ -70,12 +68,14 @@
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
 
+import org.glassfish.jersey.client.filter.HttpBasicAuthFilter;
+
+import org.glassfish.hk2.api.ServiceLocator;
+
 import org.glassfish.admingui.common.util.GuiUtil;
 import org.glassfish.admingui.common.util.RestResponse;
 import org.glassfish.admingui.common.util.RestUtil;
 import org.glassfish.grizzly.config.dom.NetworkListener;
-import org.glassfish.hk2.api.ServiceLocator;
-import org.glassfish.jersey.client.filter.HttpBasicAuthFilter;
 
 import com.sun.enterprise.config.serverbeans.Domain;
 import com.sun.enterprise.config.serverbeans.SecureAdmin;
@@ -235,7 +235,6 @@
             session.setAttribute(ORIG_REQUEST_PATH, origPath);
             RequestDispatcher rd = request.getRequestDispatcher(loginPage);
             try {
-                RestUtil.initialize(null);
                 rd.forward(request, response);
             } catch (Exception ex) {
                 AuthException ae = new AuthException();
@@ -253,8 +252,7 @@
 
         // Make REST Request
 
-        Client client2 = ClientBuilder.newClient();
-        RestUtil.initialize(client2);
+        Client client2 = RestUtil.initialize(ClientBuilder.newBuilder()).build();
         WebTarget target = client2.target(restURL);
         target.register(new HttpBasicAuthFilter(username, password));
         MultivaluedMap payLoad = new MultivaluedHashMap();
Index: appserver/admingui/common/src/main/java/org/glassfish/admingui/common/util/RestUtil.java
===================================================================
--- appserver/admingui/common/src/main/java/org/glassfish/admingui/common/util/RestUtil.java	(revision 60375)
+++ appserver/admingui/common/src/main/java/org/glassfish/admingui/common/util/RestUtil.java	(working copy)
@@ -57,6 +57,8 @@
 
 import javax.ws.rs.client.Client;
 import javax.ws.rs.client.ClientBuilder;
+import javax.ws.rs.client.ClientRequestContext;
+import javax.ws.rs.client.ClientRequestFilter;
 import javax.ws.rs.client.Entity;
 import javax.ws.rs.client.WebTarget;
 import javax.ws.rs.core.Cookie;
@@ -67,18 +69,21 @@
 
 import javax.faces.context.FacesContext;
 import javax.net.ssl.HostnameVerifier;
+import javax.net.ssl.SSLContext;
 import javax.net.ssl.SSLSession;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
 import javax.xml.parsers.ParserConfigurationException;
 
+import org.glassfish.jersey.client.filter.CsrfProtectionFilter;
+import org.glassfish.jersey.jackson.JacksonFeature;
+
+import org.glassfish.hk2.api.ServiceLocator;
+
 import org.glassfish.admingui.common.security.AdminConsoleAuthModule;
 import org.glassfish.api.ActionReport.ExitCode;
-import org.glassfish.hk2.api.ServiceLocator;
-import org.glassfish.jersey.client.ClientProperties;
-import org.glassfish.jersey.client.filter.CsrfProtectionFilter;
-import org.glassfish.jersey.jackson.JacksonFeature;
+
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
@@ -89,9 +94,6 @@
 import com.sun.enterprise.security.SecurityServicesUtil;
 import com.sun.enterprise.security.ssl.SSLUtils;
 import com.sun.jsftemplating.layout.descriptors.handler.HandlerContext;
-import javax.ws.rs.client.ClientRequestContext;
-import javax.ws.rs.client.ClientRequestFilter;
-import org.glassfish.jersey.client.SslConfig;
 
 /**
  *
@@ -108,9 +110,8 @@
 
     public static Client getJerseyClient() {
         if (JERSEY_CLIENT == null) {
-            JERSEY_CLIENT = ClientBuilder.newClient();
-            JERSEY_CLIENT.register(new CsrfProtectionFilter())
-                    .register(new RequiredHeadersFilter())
+            JERSEY_CLIENT = initialize(ClientBuilder.newBuilder()).build();
+            JERSEY_CLIENT.register(new RequiredHeadersFilter())
                     .register(new JacksonFeature());
         }
 
@@ -226,7 +227,6 @@
                     response.sendRedirect("/");
 
                     fc.responseComplete();
-                    initialize(null);
                     session.invalidate();
                 } catch (Exception ex) {
                     throw new RuntimeException(ex);
@@ -918,17 +918,21 @@
     // Jersey client methods
     //******************************************************************************************************************
 
-    public static void initialize(Client client) {
-        if (client == null) {
-            client = getJerseyClient();
-        }
+    public static ClientBuilder initialize(ClientBuilder clientBuilder) {
         try {
             ServiceLocator habitat = SecurityServicesUtil.getInstance().getHabitat();
             SecureAdmin secureAdmin = habitat.getService(SecureAdmin.class);
-            client.property(ClientProperties.SSL_CONFIG, new SslConfig(new BasicHostnameVerifier(),
-                                                                                          habitat.<SSLUtils>getService(SSLUtils.class).getAdminSSLContext(SecureAdmin.Util.DASAlias(secureAdmin), null)));
-            client.register(CsrfProtectionFilter.class);
 
+            final SSLContext sslContext = habitat
+                    .<SSLUtils>getService(SSLUtils.class)
+                    .getAdminSSLContext(SecureAdmin.Util.DASAlias(secureAdmin), null);
+
+            // Instruct Jersey to use HostNameVerifier and SSLContext provided by us.
+            clientBuilder
+                    .hostnameVerifier(new BasicHostnameVerifier())
+                    .sslContext(sslContext)
+                    .register(CsrfProtectionFilter.class);
+
         } catch (Exception ex) {
             Throwable cause = ex;
             int lcv = 0;
@@ -943,6 +947,7 @@
                 ex.printStackTrace();
             }
         }
+        return clientBuilder;
     }
 
     public static void postRestRequestFromServlet(HttpServletRequest request, String endpoint, Map<String, Object> attrs, boolean quiet, boolean throwException) {
Index: nucleus/admin/rest/rest-client/src/main/java/org/glassfish/admin/rest/client/ClientWrapper.java
===================================================================
--- nucleus/admin/rest/rest-client/src/main/java/org/glassfish/admin/rest/client/ClientWrapper.java	(revision 60375)
+++ nucleus/admin/rest/rest-client/src/main/java/org/glassfish/admin/rest/client/ClientWrapper.java	(working copy)
@@ -43,7 +43,6 @@
 import java.net.URI;
 import java.util.HashMap;
 import java.util.Map;
-import javax.net.ssl.SSLContext;
 
 import javax.ws.rs.client.Client;
 import javax.ws.rs.client.ClientRequestContext;
@@ -54,6 +53,9 @@
 import javax.ws.rs.core.Link;
 import javax.ws.rs.core.UriBuilder;
 
+import javax.net.ssl.HostnameVerifier;
+import javax.net.ssl.SSLContext;
+
 import org.glassfish.jersey.client.JerseyClientBuilder;
 import org.glassfish.jersey.client.filter.CsrfProtectionFilter;
 import org.glassfish.jersey.client.filter.HttpBasicAuthFilter;
@@ -192,13 +194,12 @@
     }
 
     @Override
-    public Client replaceWith(Configuration config) {
-        realClient.replaceWith(config);
-        return this;
+    public SSLContext getSslContext() {
+        return realClient.getSslContext();
     }
 
     @Override
-    public SSLContext getSslContext() {
-        return realClient.getSslContext();
+    public HostnameVerifier getHostnameVerifier() {
+        return realClient.getHostnameVerifier();
     }
 }
Index: nucleus/admin/rest/rest-service/src/test/java/org/glassfish/admin/rest/composite/resource/DummyUriInfo.java
===================================================================
--- nucleus/admin/rest/rest-service/src/test/java/org/glassfish/admin/rest/composite/resource/DummyUriInfo.java	(revision 60375)
+++ nucleus/admin/rest/rest-service/src/test/java/org/glassfish/admin/rest/composite/resource/DummyUriInfo.java	(working copy)
@@ -46,6 +46,7 @@
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+
 import javax.ws.rs.core.MultivaluedMap;
 import javax.ws.rs.core.PathSegment;
 import javax.ws.rs.core.UriBuilder;
@@ -150,20 +151,10 @@
     }
 
     @Override
-    public URI resolve(URI baseUri, URI uri) {
-        throw new UnsupportedOperationException("Not supported yet.");
-    }
-
-    @Override
     public URI relativize(URI uri) {
         throw new UnsupportedOperationException("Not supported yet.");
     }
 
-    @Override
-    public URI relativize(URI from, URI uri) {
-        throw new UnsupportedOperationException("Not supported yet.");
-    }
-
     private static class UriBuilderImpl extends UriBuilder {
 
         public UriBuilderImpl() {
Index: nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/utils/ProxyImpl.java
===================================================================
--- nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/utils/ProxyImpl.java	(revision 60375)
+++ nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/utils/ProxyImpl.java	(working copy)
@@ -40,7 +40,6 @@
 
 package org.glassfish.admin.rest.utils;
 
-
 import java.net.MalformedURLException;
 import java.net.URI;
 import java.net.URL;
@@ -49,6 +48,7 @@
 
 import javax.ws.rs.WebApplicationException;
 import javax.ws.rs.client.Client;
+import javax.ws.rs.client.ClientBuilder;
 import javax.ws.rs.client.WebTarget;
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.Response;
@@ -56,13 +56,13 @@
 import javax.ws.rs.core.UriInfo;
 
 import javax.net.ssl.HostnameVerifier;
+import javax.net.ssl.SSLContext;
 import javax.net.ssl.SSLSession;
 
-import org.glassfish.admin.rest.client.utils.MarshallingUtils;
 import org.glassfish.hk2.api.ServiceLocator;
-import org.glassfish.jersey.client.ClientProperties;
-import org.glassfish.jersey.client.SslConfig;
 
+import org.glassfish.admin.rest.client.utils.MarshallingUtils;
+
 import com.sun.enterprise.config.serverbeans.Domain;
 import com.sun.enterprise.config.serverbeans.SecureAdmin;
 import com.sun.enterprise.config.serverbeans.Server;
@@ -83,8 +83,8 @@
             if (forwardInstance != null) {
                 UriBuilder forwardUriBuilder = constructForwardURLPath(sourceUriInfo);
                 URI forwardURI = forwardUriBuilder.scheme("https").host(forwardInstance.getAdminHost()).port(forwardInstance.getAdminPort()).build(); //Host and Port are replaced to that of forwardInstanceName
+                client = addAuthenticationInfo(client, forwardInstance, habitat);
                 WebTarget resourceBuilder = client.target(forwardURI);
-                addAuthenticationInfo(client, resourceBuilder, forwardInstance, habitat);
                 Response response = resourceBuilder.request(MediaType.APPLICATION_JSON).get(Response.class); //TODO if the target server is down, we get ClientResponseException. Need to handle it
                 Response.Status status = Response.Status.fromStatusCode(response.getStatus());
                 if (status.getFamily() == javax.ws.rs.core.Response.Status.Family.SUCCESSFUL) {
@@ -134,11 +134,21 @@
     /**
      * Use SSL to authenticate
      */
-    private void addAuthenticationInfo(Client client, WebTarget resourceBuilder, Server server, ServiceLocator habitat) {
+    private Client addAuthenticationInfo(Client client, Server server, ServiceLocator habitat) {
         SecureAdmin secureAdmin = habitat.getService(SecureAdmin.class);
-        //Instruct Jersey to use HostNameVerifier and SSLContext provided by us.
-        client.property(ClientProperties.SSL_CONFIG, new SslConfig(new BasicHostnameVerifier(server.getAdminHost()),
-                habitat.<SSLUtils>getService(SSLUtils.class).getAdminSSLContext(SecureAdmin.Util.DASAlias(secureAdmin), "TLS" ))); //TODO need to get hardcoded "TLS" from corresponding ServerRemoteAdminCommand constant);
+
+        // TODO need to get hardcoded "TLS" from corresponding ServerRemoteAdminCommand constant);
+        final SSLContext sslContext = habitat
+                .<SSLUtils>getService(SSLUtils.class)
+                .getAdminSSLContext(SecureAdmin.Util.DASAlias(secureAdmin), "TLS");
+
+        // Instruct Jersey to use HostNameVerifier and SSLContext provided by us.
+        final ClientBuilder clientBuilder = ClientBuilder.newBuilder()
+                .withConfig(client.getConfiguration())
+                .hostnameVerifier(new BasicHostnameVerifier(server.getAdminHost()))
+                .sslContext(sslContext);
+
+        return clientBuilder.build();
     }
 
     /**
Index: nucleus/pom.xml
===================================================================
--- nucleus/pom.xml	(revision 60375)
+++ nucleus/pom.xml	(working copy)
@@ -107,18 +107,18 @@
         <servlet-api.version>3.1-b07</servlet-api.version>
         <grizzly.version>2.3-rc6</grizzly.version>
         <saaj-api.version>1.3.4</saaj-api.version>
-        <hk2.version>2.1.66</hk2.version>
-        <hk2.plugin.version>2.1.66</hk2.plugin.version>
+        <hk2.version>2.1.67</hk2.version>
+        <hk2.plugin.version>2.1.67</hk2.plugin.version>
         <trilead-ssh2.version>build212-hudson-6</trilead-ssh2.version>
         <pfl.version>3.2.0-b001</pfl.version>
         <gmbal.version>3.2.0-b003</gmbal.version>
         <woodstox.version>4.1.2</woodstox.version>
         <antlr.version>2.7.6</antlr.version>
-        <jersey.version>2.0-m13-1</jersey.version>
-        <jackson.version>1.9.8</jackson.version>
-        <jettison.version>1.3.1</jettison.version>
-        <guava.version>13.0</guava.version>
-        <jax-rs-api.version>2.0-m16</jax-rs-api.version>
+        <jersey.version>2.0-SNAPSHOT</jersey.version>
+        <jackson.version>1.9.11</jackson.version>
+        <jettison.version>1.3.3</jettison.version>
+        <guava.version>14.0</guava.version>
+        <jax-rs-api.version>2.0-rc2</jax-rs-api.version>
         <mimepull.version>1.9.1</mimepull.version>
         <jbi.version>1.0</jbi.version>
         <glassfish-management-api.version>3.2.0-b001</glassfish-management-api.version>
Index: nucleus/grizzly/nucleus-grizzly-all/pom.xml
===================================================================
--- nucleus/grizzly/nucleus-grizzly-all/pom.xml	(revision 60375)
+++ nucleus/grizzly/nucleus-grizzly-all/pom.xml	(working copy)
@@ -145,6 +145,10 @@
         </dependency>
         <dependency>
             <groupId>org.glassfish.grizzly</groupId>
+            <artifactId>grizzly-websockets</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.grizzly</groupId>
             <artifactId>grizzly-config</artifactId>
             <!-- grizzly was bringing in the following old hk2 jar that we don't want on the classpath -->
             <exclusions>
