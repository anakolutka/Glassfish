deploy(1)                 asadmin 유틸리티 하위 명령                 deploy(1)

제목
       deploy - 지정된 구성 요소 배치

시놉시스
           deploy [--help]
           [--force={false|true}]
           [--virtualservers virtual_servers]
           [--contextroot context_root]
           [--precompilejsp={false|true}]
           [--verify={false|true}]
           [--name component_name]
           [--upload={true|false}]
           [--retrieve local_dirpath]
           [--dbvendorname dbvendorname]
           [--createtables={true|false}|--dropandcreatetables={true|false}]
           [--uniquetablenames={true|false}]
           [--deploymentplan deployment_plan]
           [--altdd alternate_deploymentdescriptor]
           [--runtimealtdd runtime_alternate_deploymentdescriptor]
           [--deploymentorder deployment_order]
           [--enabled={true|false}]
           [--generatermistubs={false|true}]
           [--availabilityenabled={false|true}]
           [--asyncreplication={true|false}]
           [--lbenabled={true|false}]
           [--keepstate={false|true}]
           [--libraries jar_file[,jar_file]*]
           [--target target]
           [--type pkg-type]
           [--properties(name=value)[:name=value]*]
           [file_archive|filepath]

설명
       deploy 하위 명령은 서버에 응용 프로그램을 배치합니다. 응용 프로그램은
       엔터프라이즈 응용 프로그램, 웹 응용 프로그램, Enterprise JavaBeans(EJB)
       모듈, 커넥터 모듈 및 응용 프로그램 클라이언트 모듈일 수 있습니다. 구성
       요소가 이미 배치되어 있거나 존재하는 경우 --force 옵션을 true(기본값:
       false)로 설정하면 구성 요소가 강제로 재배치됩니다.

       --createtables 및 --dropandcreatetables 옵션은 부울 플래그이므로 true
       또는 false 값을 가질 수 있습니다. 이러한 옵션은 데이터베이스에 매핑되지
       않은 CMP bean을 배치하는 동안에만 사용됩니다. 즉, sun-cmp-mappings.xml
       기술자가 모듈의 META-INF 디렉토리에 제공되지 않습니다. 그렇지 않으면
       이러한 옵션은 무시됩니다.

       --createtables 옵션과 --dropandcreatetables 옵션은 상호 배타적이므로 한
       가지 옵션만 사용해야 합니다. 테이블 삭제 및/또는 테이블 생성을 실패하는
       경우에도 배치는 실패하지 않고 로그 파일에 경고 메시지가 표시됩니다.

       이 하위 명령은 원격 모드에서만 지원됩니다.

옵션
       --help, -?
           하위 명령에 대한 도움말 텍스트를 표시합니다.

       --force
           true로 설정된 경우 지정된 구성 요소가 이미 배치되어 있거나
           존재하더라도 구성 요소가 재배치됩니다. 기본값은 false입니다.

       --virtualservers
           하나 이상의 가상 서버 ID입니다. 여러 ID는 쉼표로 구분됩니다.

       --contextroot
           아카이브가 웹 모듈인 경우에만 적합합니다. 이 옵션은 다른 아카이브
           유형에 대해서는 무시되며 기본적으로 파일 이름이 확장자 없이
           지정됩니다.

       --precompilejsp
           기본적으로 이 옵션은 배치되는 동안 JSP가 사전 컴파일되도록 허용하지
           않습니다. 대신, JSP는 런타임 동안 컴파일됩니다. 기본값은
           false입니다.

       --verify
           true로 설정되고 필요한 검증자 패키지가 업데이트 도구에서 설치된
           경우 배치 기술자의 구문 및 의미가 확인됩니다. 기본값은 false입니다.

       --name
           배치 가능한 구성 요소의 이름입니다.

           이름에는 버전 식별자(옵션)가 포함될 수 있으며, 이 식별자는 이름
           다음에 오고 콜론(:)으로 이름과 구분됩니다. 버전 식별자는 문자 또는
           숫자로 시작해야 합니다. 영숫자 문자와 밑줄(_), 대시(-) 및 마침표(.)
           문자가 사용될 수 있습니다. 모듈 및 응용 프로그램 버전에 대한 자세한
           내용은 Oracle GlassFish Server Application Deployment Guide의
           "Module and Application Versions"를 참조하십시오.

       --upload
           하위 명령이 파일을 DAS에 업로드하는지를 지정합니다. 대부분의 경우
           이 옵션을 생략할 수 있습니다.

           적합한 값은 다음과 같습니다.

           false
               하위 명령이 파일을 업로드하지 않고 지정된 파일 이름을 통해
               파일에 액세스하려고 시도합니다. DAS가 파일에 액세스할 수 없는
               경우 하위 명령을 실패합니다.

               예를 들어, DAS가 관리 사용자 이외의 다른 사용자로 실행 중이며
               해당 파일에 대한 읽기 액세스 권한을 가지고 있지 않을 수
               있습니다. 이 경우 --upload 옵션이 false이면 하위 명령을
               실패합니다.

           true
               하위 명령이 네트워크 접속을 통해 파일을 DAS에 업로드합니다.

           기본값은 DAS가 하위 명령이 실행되는 호스트에 있는지 또는 원격
           호스트에 있는지에 따라 다릅니다.

           ·   DAS가 하위 명령이 실행되는 호스트에 있는 경우 기본값은
               false입니다.

           ·   DAS가 원격 호스트에 있는 경우 기본값은 true입니다.

           디렉토리 filepath가 지정된 경우 이 옵션이 무시됩니다.

       --retrieve
           서버 시스템에서 로컬 디렉토리로 클라이언트 Stub JAR 파일을
           검색합니다.

       --dbvendorname
           테이블을 생성할 데이터베이스 공급업체의 이름을 지정합니다. 지원되는
           값으로는 db2, mssql, mysql, oracle, derby, javadb, postgresql 및
           sybase가 있습니다. 이러한 값은 대소문자를 구분하지 않습니다.
           지정되지 않은 경우 glassfish-ejb-jar.xml의 database-vendor-name
           속성값이 사용됩니다. 값을 지정하지 않은 경우 glassfish-ejb-jar.xml
           파일에 있는 cmp-resource 요소의 jndi-name 하위 요소에서 지정한
           리소스에 접속하여 데이터베이스 공급업체 이름을 읽습니다. 접속을
           설정할 수 없는 경우 또는 값이 인식되지 않는 경우 SQL-92를 준수하는
           것으로 간주됩니다.

       --createtables
           true로 지정된 경우 매핑되지 않은 CMP bean이 있는 응용 프로그램을
           배치할 때 테이블을 생성합니다. false로 지정된 경우 테이블이
           생성되지 않습니다. 지정되지 않은 경우 glassfish-ejb-jar.xml 파일의
           cmp-resource 요소에 있는 create-tables-at-deploy 항목 값에 따라
           테이블 생성 여부가 결정됩니다. 테이블에 대한 고유한 제약 조건은
           생성되지 않습니다.

       --dropandcreatetables
           구성 요소가 재배치되었을 때 true로 설정된 경우 새 테이블을 생성하기
           전에 이전 배치에 의해 생성된 테이블이 삭제됩니다. 매핑되지 않은 CMP
           bean이 있는 배치된 응용 프로그램에 적용됩니다. 기존에 있던 테이블은
           응용 프로그램의 초기 배치 시 또는 명시적 배치 해제를 따르는 배치 시
           삭제되지 않습니다. false로 지정된 경우 테이블이 삭제되거나 생성되지
           않습니다. 지정되지 않은 경우 glassfish-ejb-jar.xml 파일의
           cmp-resource 요소에 있는 drop-tables-at-undeploy 항목이 true로
           설정된 경우 테이블이 삭제되고 glassfish-ejb-jar.xml 파일의
           cmp-resource 요소에 있는 create-tables-at-deploy 항목이 true로
           설정된 경우 새 테이블이 생성됩니다.

       --uniquetablenames
           모든⋅bean에⋅대해⋅고유한⋅테이블⋅이름이⋅생성되고⋅테이블⋅이름에⋅해시⋅코드가⋅추가됩니다.
           이 옵션은 대소문자를 구분하는 Bean 이름을 사용하는 응용 프로그램이
           있는 경우 유용합니다. 매핑되지 않은 CMP Bean이 있는 응용 프로그램에
           적용됩니다.

       --deploymentplan
           GlassFish Server 기술자가 포함된 JAR 파일인 배치 계획을 배치합니다.
           순수 EAR 파일을 배치할 경우 이 옵션을 지정합니다. 순수 EAR 파일은
           GlassFish Server 기술자가 없는 EAR입니다.

       --altdd
           응용 프로그램 아카이브 외부에 있는 Java EE 표준 배치 기술자를
           사용하여 응용 프로그램을 배치합니다. 대체 배치 기술자 파일의 절대
           경로 또는 상대 경로를 지정합니다. 대체 배치 기술자는 아카이브의
           패키지화된 최상위 레벨 배치 기술자를 대체합니다. 예를 들어, EAR의
           경우 --altdd 옵션을 사용하면 application.xml이 대체됩니다. 독립형
           모듈의 경우 --altdd를 사용하면 web.xml과 같은 최상위 레벨 모듈
           기술자가 대체됩니다.

       --runtimealtdd
           응용 프로그램 아카이브 외부에 있는 GlassFish Server 런타임 배치
           기술자를 사용하여 응용 프로그램을 배치합니다. 대체 배치 기술자
           파일의 절대 경로 또는 상대 경로를 지정합니다. 대체 배치 기술자는
           아카이브의 패키지화된 최상위 레벨 배치 기술자를 대체합니다. 예를
           들어, EAR의 경우 --runtimealtdd 옵션을 사용하면
           glassfish-application.xml이 대체됩니다. 독립형 모듈의 경우
           --runtimealtdd 옵션을 사용하면 glassfish-web.xml과 같은 최상위 레벨
           모듈 기술자가 대체됩니다. GlassFish Server 배치 기술자에만
           적용됩니다(glassfish-*.xml). 대체 배치 기술자 파일의 이름은
           glassfish-로 시작해야 합니다. 더 이상 사용되지 않는 sun-*.xml 배치
           기술자에는 적용되지 않습니다.

       --deploymentorder
           응용 프로그램의 배치 순서를 지정합니다. 응용 프로그램에 종속성이
           있는 경우 유용하며 서버 시작 시 특정 순서로 로드되어야 합니다. 배치
           순서는 정수로 지정됩니다. 기본값은 100입니다. 낮은 숫자를 가진 응용
           프로그램은 높은 숫자를 가진 응용 프로그램보다 먼저 로드됩니다. 예를
           들어 배치 순서가 102인 응용 프로그램은 배치 순서가 110인 응용
           프로그램 전에 로드됩니다. 배치 순서가 지정되지 않은 경우 기본값
           100이 지정됩니다. 응용 프로그램 두 개의 배치 순서가 같을 경우
           배치되는 첫번째 응용 프로그램이 서버 시작 시 첫번째로 로드되는 응용
           프로그램입니다.

           일반적으로 배치 순서는 응용 프로그램이 처음 배치될 때 지정되지만
           set 하위 명령을 사용하여 최초 배치 후에 지정하거나 변경할 수
           있습니다.  get 하위 명령을 사용하여 응용 프로그램의 배치 순서를 볼
           수 있습니다.

       --enabled
           사용자가 응용 프로그램에 액세스할 수 있습니다.
            false로 설정된 경우 사용자가 응용 프로그램에 액세스할 수 없습니다.
           이 옵션은 지정된 대상 인스턴스 또는 클러스터에서 응용 프로그램을
           사용으로 설정합니다. 대상 domain에 배치하는 경우 도메인에 대한
           배치가 특정 인스턴스 또는 클러스터에 배치되지 않으므로 이 옵션은
           무시됩니다. 기본값은 true입니다.

       --generatermistubs
           true로 설정된 경우 정적 RMI-IIOP Stub이 생성되어 client.jar에
           삽입됩니다.  false로 설정된 경우 Stub이 생성되지 않습니다. 기본값은
           false입니다.

       --availabilityenabled
           이 옵션은 웹 세션을 비롯하여 SFSB(Stateful 세션 Bean) 체크포인팅 및
           잠재적 비활성화에 대한 고가용성을 사용으로 설정할지 여부를
           제어합니다. false(기본값)로 설정된 경우 지정한 응용 프로그램, 웹
           응용 프로그램 또는 EJB 모듈에 대해 모든 웹 세션 저장과 SFSB
           체크포인트 지정이 사용 안함으로 설정됩니다. true로 설정된 경우
           지정된 응용 프로그램 또는 모듈이 고가용성에 대해 사용으로
           설정됩니다. 서버 및 컨테이너 레벨과 같은 보다 높은 레벨에서
           고가용성이 구성되고 사용으로 설정된 경우에만 이 옵션을 true로
           설정합니다.

       --asyncreplication
           이 옵션은 고가용성이 사용으로 설정된 웹 세션 및 SFSB 상태를 먼저
           버퍼링한 다음 별도의 비동기 스레드를 사용하여 복제할지 여부를
           제어합니다. true(기본값)로 설정된 경우 성능은 향상되지만 가용성이
           낮아집니다. 상태가 버퍼링되었지만 아직 복제되지 않은 인스턴스를
           실패할 경우 상태가 손실됩니다. false로 설정된 경우 성능은
           낮아지지만 가용성이 보장됩니다. 상태가 버퍼링되지 않으나 즉시
           클러스터의 다른 인스턴스로 전송됩니다.

       --lbenabled
           이 옵션은 배치된 응용 프로그램을 로드 균형 조정에 사용할 수 있는지
           여부를 제어합니다. 기본값은 true입니다.

       --keepstate
           이 옵션은 웹 세션, SFSB 인스턴스 및 지속적으로 생성된 EJB 타이머가
           재배치 간에 유지되는지 여부를 제어합니다.

           기본값은 false입니다. 이 옵션은 server라는 기본 서버 인스턴스에서만
           지원됩니다. 다른 대상에 대해서는 지원되지 않고 무시됩니다.

           재배치 간에 응용 프로그램을 일부 변경하면 이 기능이 제대로 작동하지
           않습니다. 예를 들면, SFSB bean 클래스에서 인스턴스 변수 집합을
           변경하지 마십시오.

           웹 응용 프로그램에서 이 기능은 glassfish-web-app.xml 파일에 있는
           session-manager 요소의 persistence-type 속성이 file인 경우에만
           적용할 수 있습니다.

           Stateful 세션 Bean 인스턴스의 경우 고가용성 없는 지속성 유형이
           서버에 설정되고(sfsb-persistence-type 속성) 이러한 유형이
           file(기본값/권장 값)로 설정되어야 합니다.

           활성 웹 세션, SFSB 인스턴스 또는 EJB 타이머를 보존 또는 복원하지
           못할 경우 재배치가 완료될 때 이들을 모두 사용할 수 없
           재배치는 계속되고 경고가 기록됩니다.

           활성 상태 데이터를 보존하기 위해 GlassFish Server은(는) 데이터를
           직렬화하여 메모리에 저장합니다. 데이터를 복원하기 위해 새로
           재배치된 응용 프로그램의 클래스 로더는 이전에 저장된 데이터의
           직렬화를 해제합니다.

       --libraries
           쉼표로 구분된 라이브러리 JAR 파일 목록. 라이브러리 JAR 파일을 상대
           또는 절대 경로로 지정합니다.  domain-dir/lib/applibs에 상대적인
           경로를 지정합니다. 응용 프로그램에서 라이브러리를 지정된 순서로
           사용할 수 있도록 합니다.

       --target
           배치할 대상을 지정합니다. 적합한 값은 다음과 같습니다.

           server
               기본 서버 인스턴스 server에 구성 요소를 배치하고 이는
               기본값입니다.

           domain
               도메인에 구성 요소를 배치합니다.  domain이 초기 배치에 대한
               대상인 경우 응용 프로그램은 도메인에 배치되지만 서버 인스턴스
               또는 클러스터는 해당 응용 프로그램을 참조하지 않습니다.
               domain이 재배치에 대한 대상이고(--force 옵션이 true로 설정됨),
               응용 프로그램을 참조하는 클러스터 또는 서버 인스턴스에 대해
               동적 재구성이 사용으로 설정되어 있는 경우 참조하는 클러스터
               또는 서버 인스턴스가 자동으로 응용 프로그램의 새 버전을
               가져옵니다. 재배치하는 동안 동적 구성이 사용 안함으로 설정된
               경우 참조하는 클러스터된 또는 서버 인스턴스는 클러스터화된 서버
               인스턴스 또는 독립형 서버 인스턴스가 재시작될 때까지 응용
               프로그램의 새 버전을 가져오지 않습니다.

           cluster_name
               클러스터에 있는 모든 서버 인스턴스에 구성 요소를 배치합니다.

           instance_name
               특정 독립형 서버 인스턴스에 구성 요소를 배치합니다.

       --type
           배치할 구성 요소의 패키지화 아카이브 유형입니다. 가능한 값은 다음과
           같습니다.

           car
               구성 요소가 CAR 파일로 패키지화됩니다.

           ear
               구성 요소가 EAR 파일로 패키지화됩니다.

           ejb
               구성 요소는 JAR 파일로 패키지화된 EJB입니다.

           osgi
               구성 요소가 OSGi 번들로 패키지화됩니다.

           rar
               구성 요소가 RAR 파일로 패키지화됩니다.

           war
               구성 요소가 WAR 파일로 패키지화됩니다.

       --properties 또는 --property
           배치에 대한 추가 속성을 지정하는 선택적 키워드-값 쌍입니다. 사용
           가능한 속성은 배치 또는 재배치할 구성 요소의 구현에 따라
           결정됩니다.  --properties 옵션과 --property 옵션은 동일합니다.
           지정하는 속성 수에 상관없이 어느 쪽 옵션이든 사용할 수 있습니다.

           배치에 대해 다음 속성을 지정할 수 있습니다.

           jar-signing-alias
               응용 프로그램 클라이언트 컨테이너 JAR 파일이 서명된 보안
               인증서에 대한 별칭을 지정합니다. Java Web Start는 코드가
               사용자의 시스템에서 신뢰하는 인증서로 서명된 JAR 파일에
               상주하지 않은 경우 향상된 권한 설정이 필요한 코드를 실행하지
               않습니다. 사용자의 편의를 위해 GlassFish Server에서는 자동으로
               도메인의 키 저장소에 있는 이 별칭이 있는 인증서를 사용하여 JAR
               파일에 서명합니다. 그런 다음 Java Web Start는 사용자에게 코드를
               신뢰할 것인지 묻고 GlassFish Server 인증서 정보를 표시합니다.
               다른 인증서로 이 JAR 파일에 서명하려면 도메인 키 저장소에 해당
               인증서를 추가한 다음 이 속성을 사용합니다. 예를 들어, 신뢰할 수
               있는 기관에서 발행되어 Java Web Start 프롬프트가 표시되지 않는
               인증서를 사용하거나, 자체 회사에서 발행되어 사용자가 신뢰할 수
               있는 것으로 확인한 인증서를 사용할 수 있습니다. 기본값은
               s1as(모든 도메인에 대해 생성된 자체 서명된 인증서의
               별칭)입니다.

           java-web-start-enabled
               응용 프로그램 클라이언트 모듈에 대해 Java Web Start 액세스가
               허용되는지를 지정합니다. 기본값은 true입니다.

           compatibility
               응용 프로그램에 대한 JAR 가시성 요구 사항에 대해 역호환되는
               GlassFish Server 릴리스를 지정합니다. 허용되는 유일한 값은
               v2이며 Sun GlassFish Enterprise Server 버전 2 또는 Sun Java
               시스템 Application Server 버전 9.1 또는 9.1.1을 참조합니다. JAR
               파일을 EAR 파일 내의 여러 모듈에서 볼 수 있는 Java EE 6 플랫폼
               사양 요구 사항은 Java EE 5보다 훨씬 엄격합니다. 특히, 응용
               프로그램 클라이언트는 참조가 표준 Java SE 방식(예: 확장자) 또는
               Java EE 라이브러리-디렉토리 방식을 사용하지 않으면 EAR 파일 내
               EJB JAR 파일 또는 다른 JAR 파일에 액세스할 수 없어야 합니다. 이
               속성을 v2로 설정하면 이러한 Java EE 6 제한 사항이 제거됩니다.

           keepSessions={false|true}
               이 옵션은 --keepstate 옵션으로 대체되었습니다.

               --force 옵션이 true로 설정된 경우 이 속성을 사용하여 재배치가
               완료되면 재배치할 응용 프로그램의 활성 세션을 보존한 다음
               복원할 것인지를 지정할 수 있습니다. 웹 컨테이너의 HTTP 세션에
               적용됩니다. 기본값은 false입니다.

               false
                   응용 프로그램의 활성 세션이 보존되지 않고 복원되지
                   않

               true
                   응용 프로그램의 활성 세션이 보존 및 복원됩니다.

                   응용⋅프로그램의⋅활성⋅세션을⋅보존⋅또는⋅복원하지⋅못할⋅경우⋅재배치가⋅완료될⋅때⋅모든⋅세션을⋅사용할⋅수
                   없

                   활성 세션을 보존하기 위해 GlassFish Server은(는) 세션을
                   직렬화하여 메모리에 저장합니다. 세션을 복원하기 위해 새로
                   재배치된 응용 프로그램의 클래스 로더는 이전에 저장된 세션의
                   직렬화를 해제합니다.

           preserveAppScopedResources
               true로 설정된 경우 모든 응용 프로그램 범위의 리소스를 보존하고
               재배치 중 복원합니다. 기본값은 false입니다.

           사용 가능한 다른 속성은 재배치할 구성 요소의 구현에 따라
           결정됩니다.

           OSGi 번들(--type=osgi)로 패키지화된 구성 요소의 경우 deploy 하위
           명령은 배치 시 WAR 파일을 WAB(Web Application Bundle)로 래핑하기
           위한 속성 인수를 수락합니다. 하위 명령은 이름이 UriScheme인 키를
           조회한 다음, 키가 있는 경우 이 키를 URL 스트림 처리기로 사용하여
           입력 스트림을 데코레이팅합니다. 다른 속성도 데코레이션 프로세스에
           사용됩니다. 예를 들어, GlassFish Server OSGi 웹 컨테이너는 일반 WAR
           파일을 WAB로 래핑하는 데 사용되는 webbundle이라는 URL 스트림
           처리기를 등록합니다. 사용법에 대한 자세한 내용은 이 도움말 페이지의
           예제를 참조하십시오.

피연산자
       file_archive|filepath
           배치되는 응용 프로그램이 들어 있는 아카이브의 경로입니다. 이 경로는
           절대 또는 상대 경로가 될 수 있습니다.

           아카이브는 다음 형식 중 하나가 될 수 있습니다.

           ·   아카이브 파일(예: /export/JEE_apps/hello.war)입니다.

               --upload 옵션이 true로 설정된 경우 로컬 클라이언트 시스템에
               있는 배치 가능 파일 경로입니다.  --upload 옵션이 false로 설정된
               경우 서버 시스템에 있는 파일 경로입니다.

           ·   배치 가능한 아카이브의 분해된 형식을 포함하는 디렉토리입니다.
               서버 시스템에 있는 디렉토리 경로입니다.

               디렉토리를 지정하는 경우 --upload 옵션이 무시됩니다.

예제
       예 1, 엔터프라이즈 응용 프로그램 배치
           이 예제는 Cart.ear 파일에 패키지화된 엔터프라이즈 응용 프로그램을
           기본 서버 인스턴스 server에 배치합니다.  --target 옵션을 사용하여
           다른 서버 인스턴스 또는 클러스터에 배치할 수 있습니다.

               asadmin> deploy Cart.ear
               Application deployed successfully with name Cart.
               Command deploy executed successfully

       예 2, 기본 컨텍스트 루트로 웹 응용 프로그램 배치
           이 예제는 hello.war 파일에 있는 웹 응용 프로그램을 기본 서버
           인스턴스 server에 배치합니다.  --target 옵션을 사용하여 다른 서버
           인스턴스 또는 클러스터에 배치할 수 있습니다.

               asadmin> deploy hello.war
               Application deployed successfully with name hello.
               Command deploy executed successfully

       예 3, 특정 컨텍스트 루트로 웹 응용 프로그램 강제 배치
           이 예제는 hello.war 파일에 있는 웹 응용 프로그램을 배치합니다.
           배치된 웹 응용 프로그램의 컨텍스트 루트는 greetings입니다. 응용
           프로그램이 이미 배치되어 있는 경우 재배치됩니다.

               asadmin> deploy --force=true --contextroot greetings hello.war
               Application deployed successfully with name hello.
               Command deploy executed successfully

       예 4, 엔터프라이즈 bean 배치
           이 예제는 CMP가 포함된 EJB 사양(엔터프라이즈 bean)을 기반으로 구성
           요소를 배치하고 bean에서 사용하는 데이터베이스 테이블을 생성합니다.

           이 예제는 --target 옵션을 사용합니다. 이 예제에서 대상은 기존
           클러스터 cluster1입니다.

               asadmin> deploy --createtables=true --target cluster1 EmployeeEJB.jar
               Application deployed successfully with name EmployeeEJB.
               Command deploy executed successfully

       예 5, 커넥터 모듈 배치
           이 예제는 RAR 파일에 패키지화되어 있는 커넥터 모듈을 배치합니다.

           이 예제는 --target 옵션을 사용합니다. 이 예제에서 대상은 클러스터에
           속하지 않는 기존의 독립형 서버 인스턴스입니다.

               asadmin> deploy --target myinstance jdbcra.rar
               Application deployed successfully with name jdbcra.
               Command deploy executed successfully

       예 6, 응용 프로그램의 배치 순서 지정
           이 예제는 응용 프로그램 두 개에 대한 배치 순서를 지정합니다. 서버
           시작 시 cart 응용 프로그램이 horse 응용 프로그램 전에 로드됩니다.

           가독성을 위해 이 예제에는 일부 출력 행이 생략되어 있습니다.

               asadmin> deploy --deploymentorder 102 --name cart cart.war
               ...
               asadmin> deploy --deploymentorder 110 --name horse horse.war
               ...

       예 7, 대체 Java EE 7 배치 기술자 파일을 사용하여 응용 프로그램 배치
           이 예제는 응용 프로그램 아카이브 외부에 있는 Java EE 표준 배치
           기술자 파일을 사용하여 응용 프로그램을 배치합니다.

               asadmin> deploy --altdd path_to_alternate_descriptor cart.ear
               Application deployed successfully with name cart.
               Command deploy executed successfully

       예 8, 대체 GlassFish Server 배치 기술자 파일을 사용하여 응용 프로그램
       배치
           이 예제는 응용 프로그램 아카이브 외부에 있는 GlassFish Server
           런타임 배치 기술자 파일을 사용하여 응용 프로그램을 배치합니다.

               asadmin> deploy --runtimealtdd path_to_alternate_runtime_descriptor horse.ear
               Application deployed successfully with name horse.
               Command deploy executed successfully

       예 9, WAR 파일을 WAB로 래핑
           이 예제에서는 OSGi 번들이 배치될 때 일반 WAR 파일을 WAB로
           래핑합니다. 이 내용은 OSGi 번들로 패키지화된 구성 요소에만
           적용됩니다.

           백슬래시(\) 문자는 명령에 있는 문자를 이스케이프하는 데 사용됩니다.
           asadmin 유틸리티용 옵션의 이스케이프 문자에 대한 자세한 내용은
           asadmin(1M) 도움말 페이지를 참조하십시오.

               asadmin deploy --type osgi \
               --properties "UriScheme=webbundle:Bundle-SymbolicName=bar:\
               Import-Package=javax.servlet;javax.servlet.http;
               %20version\\=3.0;resolution\\:
               =mandatory:Web-ContextPath=/foo" \
               /tmp/test_sample1.war
               Application deployed successfully with name sample1.
               Command deploy executed successfully

종료 상태
       0
           하위 명령이 성공적으로 실행됨

       1
           하위 명령 실행 중 오류 발생

참조
       redeploy(1), list-components(1), undeploy(1), get(1), set(1)

       asadmin(1M)

       Oracle GlassFish Server Application Deployment Guide

Java EE 7                       2013년 2월 12일                      deploy(1)
