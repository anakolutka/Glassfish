#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

AgentPortInUse=Node agent port {0} is in use.
tooManyNodes=More than one node in directory {0}. Please specify --node.
cantCreateNodeDirChild=Error attempting to create this node directory: {0}
cantGetHostName=Got an Exception attempting to get this computer''s host name: {0}
noInstallDirPath=Can''t find the GlassFish installation directory path.
Agent.noInstallDir=Can''t find the GlassFish installation directory.  I was looking at this path: {0}
ConfigClusterConflict=Can only specify one of --cluster or --config
lbenabledNotForStandaloneInstance=The lbenabled option is not supported for standalone instances.
Instance.badNodeDir=Node directory {0} does not exist or is not a directory
Instance.badInstanceDir=Server instance directory {0} does not exist or is not a directory
Instance.invalidAgentPort=Invalid agentport {0}. Specify a valid agentport between 1 and 65535.
Instance.noInstanceDirs=No server instances in directory {0}
Instance.tooManyInstanceDirs=More than one server instance in directory {0}
Instance.badInstanceName=You must supply the instance name
Instance.cantReadDasProperties=Can''t read {0}
Instance.cantWriteProperties=Can''t write {0}: {1}
Instance.dasPropertyComment=Domain Administration Server Connection Properties
Instance.nodeagentPropertiesComment=Node Agent Connection Properties
Instance.unknownHost=Could not determine host.  Create hostname directory as nodes/localhost.
Instance.nosync=Skipping synchronization with DAS.
Instance.nodomainxml=CLI810 Synchronization with DAS failed and no local domain.xml,\ncan't start instance.
Instance.syncFailed=Warning: Synchronization with DAS failed, continuing startup...
Instance.fullsync=Removing all cached state for instance {0}.
Instance.rendezvousAttempt=Attempting to rendezvous with DAS on {0}:{1}
Instance.rendezvousAlready={0} is already registered on DAS.
Instance.rendezvousFailed=Failed to rendezvous with DAS on {0}:{1}. \
Please check if this server is up and running and that the host and port provided are correct.
Instance.rendezvousSuccess=Rendezvoused with DAS on {0}:{1}.
Instance.oldDasProperties=The das.properties file at {0}\nis probably from a previous release but uses the standard port {1},\nwill update it to use port {2} - check that this is correct
Instance.oldDasPropertiesWrong=The das.properties file at {0}\nis probably from a previous release and uses non-standard port {1},\nwill update it to use port {2} - this is probably wrong
Instance.oldDasPropertiesPrompt=The das.properties file at {0}\nis probably from a previous release and uses non-standard port {1}\nEnter DAS admin port number [default:{2}] > 
Instance.dasPropertiesUpdateFailed=CLI811 Warning: failed to update das.properties file
Instance.badProtocol=CLI812 das.properties file at {0}\nspecifies an unknown protocol: {1}
Instance.reenterPort=Bad port number, reenter DAS admin port number [default:{0}] >
Instance.existingDasPropertiesWarning=Using DAS host {0} and port {1} from existing das.properties for node\n\
{2}. To use a different DAS, create a new node using create-node-ssh or\n\
create-node-config. Create the instance with the new node and correct\n\
host and port:\n\
asadmin --host das_host --port das_port create-local-instance --node node_name instance_name.
Instance.DasHostUnknown=The DAS hostname, {0}, is not known to instance host {1}. \
    This could be because the DAS host is known by a different name on {1} \
    or because the DAS hostname needs to be fully qualified with a domain name. \
    To correct this make sure that the system the DAS is running on can \
    identify itself with a fully qualified name (on Unix systems this is \
    often done by adding a fully qualified hostname in /etc/hosts). If the \
    DAS host is known by a different name then you need to change the \
    DAS admin HTTP listener address.
Instance.DasHostUnreachable=Could not contact the DAS running at {0}:{1}. \
    This could be because a firewall is blocking the connection back \
    to the DAS or because the DAS host is known by a different name on \
    the instance host {2}. To change the hostname that the DAS uses to identify \
    itself please update the DAS admin HTTP listener address.
masterPasswordFileNotCreated=Error creating master password file {0}
fileNotFound=File {0} not found.
MasterPassword=the master password
masterPasswordIncorrect=Incorrect master password.  Master password not saved.
###########
StopInstance.noInstanceNameAllowed=No instance name allowed with --host option.
StopInstance.instanceNotRunning=CLI1306 Warning - server instance is not running.
Instance.noSuchInstance=CLI1307 Warning - no server instance found with that name.
StopInstance.waitForDeath=Waiting for the instance to stop
StopInstance.instanceNotDead=Timed out ({0} seconds) waiting for the domain to stop.
## SynchronizeInstanceCommand
Sync.noDASConfigured=CLI800 das.properties file is missing, expected to find it here: {0}
Sync.alreadySynced=CLI801 Instance is already synchronized
Sync.failed=CLI802 Synchronization failed for directory {0}, caused by:\n  {1}
Sync.noConnect=CLI803 Failed to connect to DAS on host {0}, port {1}
## DeleteLocalInstanceCommand
DeleteInstance.running=The instance is running.  Stop it and then re-run the command.
DeleteInstance.noInstanceName=You must specify an instance.
DeleteInstance.badWhack=Unable to delete the instance directory: {0}
DeleteInstance.remoteError=The DAS command to remove the instance from the configuration failed.  \
The entire operation has been rolled back.  \nRun the command again after solving the problem with \
the Domain Administration Server.  \nOr run this command again with the filesystemonly argument set to true and the \
local files will be deleted only.  \nBelow is the original message from CLI and/or DAS:\n\n{0}
DeleteInstance.noWhack=The instance directory does not exist: {0}
DeleteInstance.noInstance=The instance does not exist on this machine.
Config.badConfigNames=You must specify a source and destination config 


restart.instanceNotRunning=Server is not running, will attempt to start it...
restart=Restarting Instance...
restartChangeDebug=Restarting Instance and explicitly setting debug to {0}...
#ImportSyncBundleCommand
noFile=File {0} does not exist.
import.sync.bundle.extractBundleFailed=Could not extract contents from bundle\n{0}\nto\n{1}.
import.sync.bundle.inboundPayloadFailed=Could not read bundle\n{0}\n{1}.
import.sync.bundle.completeRegistrationFailed=Unable to complete registration. \
Either DAS is offline, or {0} does not\nexist. Use the set command to complete registration:\nset {1}.
import.sync.bundle.backupInstanceDirFailed=Could not rename existing directory\n{0}\nto\n{1}.
import.sync.bundle.deletedInstanceDir=Deleted existing directory:\n{0}
import.sync.bundle.closeStreamFailed=Could not close stream on file\n{0}\n{1}
import.sync.bundle.invalidInstance=Instance {0} does not exist.

#SetupSshKey
KeySetupFailed=SSH key setup failed: {0}
KeyDoesNotExist=Specified key file {0} does not exist.
SSHPasswordPrompt=Enter SSH password for {0}@{1}> 
SSHPasswordNotFound=Non-interactive mode and SSH password not found in password file.
SSHPassphrasePrompt=Key {0} is encrypted\nEnter key passphrase> 
GenerateKeyPairPrompt=SSH key not found for user {0}\nWould you like to generate a SSH key pair (without a key passphrase) for {0} to access {1}? [y/n]: 
SSHAlreadySetup=SSH public key authentication is already configured for {0}@{1}
ErrorParsingKey=Error parsing key file {0}: {1}
ConnFailed=Connection verification failed.

#installNode
mkdir.failed=Could not create the directory {0} on host {1}
cannot.copy.zip.file=Could not copy zip file {0} to host {1}
jar.failed=Could not install glassfish on host {0}
fix.permissions.failed=Could not set permissions on commands in bin directory on host {0} for glassfish installation {1}
StopInstance.nopidprev=Can not find the process ID of the server.  It is supposed to be here: {0}.  Unable to kill the process.
StopInstance.pidprevreaderror=Error trying to read the Process ID from {0}: {1}
