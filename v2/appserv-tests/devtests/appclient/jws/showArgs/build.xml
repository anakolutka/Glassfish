<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE project [
<!ENTITY commonSetup SYSTEM "file:./../../../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "file:./../../../../config/common.xml">
<!ENTITY testproperties SYSTEM "file:./build.properties">
<!ENTITY jwsSetup SYSTEM "file:./../jwsSetup.xml">
]>

<project name="jws-showArgs" default="usage" basedir=".">

    &commonSetup;
    &commonBuild;
    &testproperties;
    &jwsSetup;

        

    <target name="all" depends="build,deploy,run,undeploy"/>

    <target name="clean" depends="init-common">
      <antcall  target="clean-common"/>
    </target>
 
    <!-- In this example there are only .java files for the client -->
    
    <target name="compile" depends="clean">
        <antcall target="compile-common">
            <param name="src" value="client"/>
        </antcall>
    </target>

    <target name="build">
        <antcall target="build.ear"/> <!-- also builds the client -->
    </target>
    
    <target name="build.ear" depends="build.client">
        <antcall target="ear-common">
            <param name="application.xml" value="ear/application-with-client-at-top-level.xml"/>
        </antcall>
    </target> 
    
    <target name="build.client" depends="compile">
        <antcall target="appclient-jar-common">
            <param name="application-client.xml" value="client/application-client.xml"/>
            <param name="appclientjar.classes" value="**/*.class" />
        </antcall>
    </target>
    
    <target name="deploy" 
            depends="init-common">
        <antcall target="deploy.ear"/>
        <antcall target="deploy.client"/>
    </target>

    <target name="deploy.ear" depends="build.ear">
        <antcall target="deploy-common"/>
    </target>
    
    <target name="deploy.client" depends="build.client">
        <antcall target="deploy-common">
            <param name="deployed.app" value="${assemble.dir}/${appname}-client.jar"/>
        </antcall>
    </target>
    
    <target name="undeploy" depends="init-common">
        <antcall target="undeploy.ear"/>
        <antcall target="undeploy.client"/>
    </target>
    
    <target name="undeploy.ear" depends="init-common">
        <antcall target="undeploy-common"/>
    </target>

    <target name="undeploy.client" depends="init-common">
        <antcall target="undeploy-client-common"/>
    </target>
    
    <target name="run" depends="init-common">
        <antcall target="test.standalone.client"/>
        <antcall target="test.embedded.client"/>
    </target>

    <target name="test.standalone.client">
        <antcall target="test.client">
            <param name="urlpath" value="/${clientname}"/>
        </antcall>
    </target>

    <target name="test.embedded.client">
        <antcall target="test.client">
            <param name="urlpath" value="/${appname}App/${clientname}"/>
        </antcall>
    </target>

    <target name="test.client" depends="init-common">
    
        <fail unless="urlpath">Please specify the argument 'urlpath' when invoking test.client</fail>
        <!--
            The very simple client under test just writes the arguments it 
            receives out to a file.  
        -->
        
        <!-- Get a current time stamp to demonstrate that the client receives the correct arguments. -->
        <tstamp prefix="test.client">
            <format property="FULL" pattern="yyyyMMdd hh:mm:ss.SSS"/>
        </tstamp>
        <echo>Test time is ${test.client.FULL}</echo>

        <!-- create a unique output file for the client to use -->
        <tempfile destdir="${build.classes.dir}" prefix="jws" suffix=".out" property="output.file.spec"/>
        <touch file="${output.file.spec}"/>
        <neutralize property="output.file.neutral" file="${output.file.spec}" id="output.file.id"/>

        <run-jws 
            urlpath="${urlpath}"
            args="-out ${output.file.neutral} this is a test at ${test.client.FULL}"
            resultproperty="result"
            />
        
        <!-- I want the client output dumped to the console to see it -->
        <concat>
            <path refid="output.file.id"/>
        </concat>
        
        <delete file="${output.file.neutral}"/>
        
    </target>
    
    <target name="usage">
        <antcall target="usage-common"/>
    </target>
</project>
