Usage#
deploy.command=Deploy an application to the application server
deploy.command.usagetext=Usage: deploy [--virtualservers virtual_servers] [--contextroot context_root] [--force=false] [--precompilejsp=false] [--name component_name] [--upload=true] [--enabled=true] [--libraries jar_file[(pathseparator)jar_file]*] [--property (name=value)[:name=value]*] file_archive| filepath
deploy.command.path=Path to the file or directory to deploy
deploy.command.name=Name for the application
deploy.command.contextroot=Web application's context-root.  Defaults to filename without extension.
deploy.command.libraries=A comma-separated list of library JAR files. 
deploy.command.force=If true, application is redeployed.  Defaults to false.
deploy.command.precompilejsp=If true, JSPs are compiled during deployment time. Defaults to false.
deploy.command.verify=If true, syntax and semantics of the deployment descriptor is verified.  Defaults to false.
deploy.command.retrieve=Retrieves the client stub JAR file from the server machine to the local directory.
deploy.command.dbvendorname=Name of the database vendor for which tables are created.
deploy.command.createtables=Creates tables at deployment of an application with unmapped CMP beans.
deploy.command.dropandcreatetables=If true, when application is redeployed, the tables created by the previous deployment are dropped before creating the new tables.
deploy.command.uniquetablenames=Guarantees unique table names for all the beans and results in a hashcode added to the table names.
deploy.command.deploymentplan=Takes the deployment plan, which is a JAR containing Sun-specific descriptors, and deploys it.
deploy.command.enabled=If true, allows users to access the application.  Defaults to true.
deploy.command.generatermistubs=If true, static RMI-IIOP stubs are generated and put into the client.jar.  Defaults to false.
deploy.command.availabilityenabled=If true, high-availability is enabled for SFSB checkpointing and potentially passivation.  Valid only for domains configured to support cluster.
deploy.command.target=Specify the target to deploy the application.
deploy.command.properties=Specify properties as name value pairs that will be passed to the application runtime.
deploy.nocontainer=No container services registered, done...
application.alreadyreg.redeploy=Application {0} already registered, please use deploy --force=true to redeploy
deploy.command.success={0} deployed successfully
deploy.unknownarchivetype=Archive type of {0} was not recognized
deploy.unknownarchiveformat=Archive format not recognized
deploy.errorexpandingjar=Error while expanding jar file
deploy.cannotcreateexpansiondir=Error while creating directory for jar expansion {0}; continuing
deploy.errorclosingarchive=Error while closing deployable artifact {0}
deploy.invalidpropertyformat=Deployment property does not follow the NAME=VALUE format : {0}

#
undeploy.command=Undeploy a previously deployed application from the application server
undeploy.command.name=Name of the deployed application
undeploy.command.target=Specify the target to undeploy the application.
undeploy.command.success={0} undeployed successfully
undeploy.contextcreation.failed =Cannot create context for undeployment : {0}

#
deploydir.command=deploys an exploded format of application archive. This command is deprecated.  Please use deploy command.  See 'deploy --help' for a complete description of deploy command.
deploydir.command.usagetext=Usage: deploydir [--virtualservers virtual_servers] [--contextroot context_root] [--force=true] [--precompilejsp=false] [--name component_name] [--upload=true] [--enabled=true] [--libraries jar_file[(pathseparator)jar_file]*] filepath

#
redeploy.command=Redeploy a previously deployed application.  
redeploy.command.name=Name of the application to be redeployed. This is a required option.
redeploy.command.path=Path to the file or directory to deploy.
redeploy.command.invalid.path=Cannot determine the path of application.
redeploy.command.cannot.redeploy=Cannot redeploy app, {0} without specifying the path operand.
redeploy.command.success={0} redeployed successfully
redeploy.command.usagetext=redeploy --name=archive_name [archive_file|path]

#
enable.command=Enables the application
enable.command.target=Specifies the target on which you are enabling the application.
enable.command.component=Name of the application to enable.
enable.command.success={0} enabled successfully

#
disable.command=Disables the application
disable.command.component=Name of the application to disable.
disable.command.success={0} disabled successfully

#
list.components=List user deployed applications.
list.components.type=Type of application to be listed.  Applicable types are: application, ejb, web, connector and webservice.  If nothing is specified, then all of the components are listed.
list.components.success=list-components successfully.
list.components.command.invalid.type=Invalid type value, {0}.
list.components.no.elements.to.list=Nothing to list.
list.applications.success=list-applications successfully.
list.applications=List user deployed applications.  See 'list-components --help' for a list of valid options.
list.applications.usagetext=list-applications [--type=type]
list.applications.warning=WARNING: This command will be removed.  Please use list-components command.

# common strings
application.alreadyreg=Application {0} already registered
application.notreg=Application {0} not registered
virtualservers=List of virtual servers to apply the command to
fnf=File not found : {0}
invalidconfig=invalid domain.xml entries, please file a bug
nocontainer=No container services registered, done...
unknownmoduletpe=Module type not recognized
