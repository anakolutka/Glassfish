//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-04/12/2007 12:08 AM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.24 at 01:25:15 PM PDT 
//


package com.sun.enterprise.config.serverbeans;

import org.jvnet.hk2.config.Attribute;
import org.jvnet.hk2.config.Configured;

import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.io.Serializable;


/**
 *
 */

/* @XmlType(name = "") */
@Configured
public class RequestProcessing
        implements Serializable {

	final transient private VetoableChangeSupport support = new VetoableChangeSupport(this);

    private final static long serialVersionUID = 1L;
    @Attribute

    protected String threadCount;
    @Attribute

    protected String initialThreadCount;
    @Attribute

    protected String threadIncrement;
    @Attribute

    protected String requestTimeoutInSeconds;
    @Attribute

    protected String headerBufferLengthInBytes;



    /**
     * Gets the value of the threadCount property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getThreadCount() {
        if (threadCount == null) {
            return "128";
        } else {
            return threadCount;
        }
    }

    /**
     * Sets the value of the threadCount property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setThreadCount(String value) {
        try {
            support.fireVetoableChange("threadCount", this.threadCount, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.threadCount = value;
    }

    /**
     * Gets the value of the initialThreadCount property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getInitialThreadCount() {
        if (initialThreadCount == null) {
            return "48";
        } else {
            return initialThreadCount;
        }
    }

    /**
     * Sets the value of the initialThreadCount property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setInitialThreadCount(String value) {
        try {
            support.fireVetoableChange("initialThreadCount", this.initialThreadCount, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.initialThreadCount = value;
    }

    /**
     * Gets the value of the threadIncrement property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getThreadIncrement() {
        if (threadIncrement == null) {
            return "10";
        } else {
            return threadIncrement;
        }
    }

    /**
     * Sets the value of the threadIncrement property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setThreadIncrement(String value) {
        try {
            support.fireVetoableChange("threadIncrement", this.threadIncrement, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.threadIncrement = value;
    }

    /**
     * Gets the value of the requestTimeoutInSeconds property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getRequestTimeoutInSeconds() {
        if (requestTimeoutInSeconds == null) {
            return "30";
        } else {
            return requestTimeoutInSeconds;
        }
    }

    /**
     * Sets the value of the requestTimeoutInSeconds property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setRequestTimeoutInSeconds(String value) {
        try {
            support.fireVetoableChange("requestTimeoutInSeconds", this.requestTimeoutInSeconds, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.requestTimeoutInSeconds = value;
    }

    /**
     * Gets the value of the headerBufferLengthInBytes property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getHeaderBufferLengthInBytes() {
        if (headerBufferLengthInBytes == null) {
            return "4096";
        } else {
            return headerBufferLengthInBytes;
        }
    }

    /**
     * Sets the value of the headerBufferLengthInBytes property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setHeaderBufferLengthInBytes(String value) {
        try {
            support.fireVetoableChange("headerBufferLengthInBytes", this.headerBufferLengthInBytes, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.headerBufferLengthInBytes = value;
    }

    public void addVetoableChangeListener(VetoableChangeListener param0) {
        support.addVetoableChangeListener(param0);
    }

    public void addVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.addVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.removeVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(VetoableChangeListener param0) {
        support.removeVetoableChangeListener(param0);
    }

}
