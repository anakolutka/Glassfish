<?xml version="1.0" encoding="iso-8859-1"?>
<!--
The contents of this file are subject to the terms
of the Common Development and Distribution License
(the "License").  You may not use this file except
in compliance with the License.

You can obtain a copy of the license at
glassfish/bootstrap/legal/CDDLv1.0.txt or
https://glassfish.dev.java.net/public/CDDLv1.0.html.
See the License for the specific language governing
permissions and limitations under the License.

When distributing Covered Code, include this CDDL
HEADER in each file and include the License file at
glassfish/bootstrap/legal/CDDLv1.0.txt.  If applicable,
add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your
own identifying information: Portions Copyright [yyyy]
[name of copyright owner]
-->
<project name="Nucleus Distribution (ips) Creation" default="create-image" basedir=".">
<property name="image.name" value="gfv3-nucleus"/>
<target name="create-image" depends="create-installer-image, create-glassfish-image">
    <mkdir dir="${installer.image.dir}"/>
    <mkdir dir="${installer.image.dir}/glassfishv3-prelude"/>
    <mkdir dir="${glassfish.image.dir}"/>
</target>


<target name="create-installer-image" description="Creating IPS Image without Domains for Installer">
    <antcall target="create-common-image">
        <param name="image.dir" value="${installer.image.dir}/glassfishv3-prelude"/>
    </antcall>
</target>

<target name="create-glassfish-image" description="Creating IPS Image with Domains">
    <antcall target="create-common-image">
        <param name="image.dir" value="${glassfish.image.dir}/glassfishv3-prelude"/>
    </antcall>

    <!-- copy domains -->
    <!-- unzip dest="${image.dir}" -->
    <unzip dest="local_image/glassfish/glassfishv3-prelude">
        <fileset dir="target">
            <include name="nucleus-base*.zip"/>
        </fileset>
        <patternset>
            <include name="**/domains/**"/>
        </patternset>
    </unzip>

    <!-- delete dir="target" includes="*.zip"/ -->
</target>

<target name="create-common-image" description="Creating IPS Image">
    <ant antfile="../distributions.xml" target="create-local-image">
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml" target="update-cfg-cache">
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml" target="install-package">
        <property name="package.name" value="felix"/>
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml" target="install-package">
        <property name="package.name" value="glassfish-hk2"/>
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml"  target="install-package">
        <property name="package.name" value="glassfish-grizzly"/>
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml" target="install-package">
        <property name="package.name" value="glassfish-api"/>
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml" target="install-package">
        <property name="package.name" value="glassfish-nucleus"/>
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <ant antfile="../distributions.xml" target="install-package">
        <property name="package.name" value="pkg-java"/>
        <property name="image.dir" value="${image.dir}"/>
    </ant>
    <delete
        file="${image.dir}/.org.opensolaris,pkg/catalog/glassfish.org/pkg_names.pkl"/>

    <!-- copy pkg-java -->
    <unzip dest="${image.dir}/..">
        <fileset dir="../.">
            <include name="pkg-java*.zip"/>
        </fileset>
    </unzip>

    <!-- copy uc client scripts -->
    <unzip dest="${image.dir}/bin">
        <fileset dir="../.">
            <include name="ucbootstrap*.zip"/>
        </fileset>
    </unzip>
    <copy file="${image.dir}/bin/ucbootstub" tofile="${image.dir}/bin/updatetool"/>
    <copy file="${image.dir}/bin/ucbootstub.bat" tofile="${image.dir}/bin/updatetool.bat"/>
    <move file="${image.dir}/bin/ucbootstub" tofile="${image.dir}/bin/pkg"/>
    <move file="${image.dir}/bin/ucbootstub.bat" tofile="${image.dir}/bin/pkg.bat"/>
</target>
</project>
