common.versionextracter.appserver.string=Application Server 
common.versionextracter.dtd_product_version_find_failured=Could not find product version in domain.xml file. 
commands.DomainRunningFragment=running
commands.DomainRunningMsg=The domain ({0}) is already running. All domains on the upgrade target must be stopped before starting the upgrade"
commands.executingCommandMsg=Executing command:  



upgrade.common.log_redirect=Log redirected to 
upgrade.common.general_exception=An exception occured: 
upgrade.common.upgrade_not_supported=Unsupported Upgrade Path. \nsource version: {0} profile: {1} \ntarget version: {2} profile: {3}
upgrade.common.delete_directory_failed=Error occured while deleting the directory : {0}
upgrade.common.delete_backedup_domain_directory_failed=Error occured while deleting the directory : {0}. Please restore domain from backup directory under domains root.
upgrade.common.copy_directory_failed=Fatal Error while backing up the domain directory. Cannot copy {0} to {1}
upgrade.common.make_directory_failed=Fatal Error while creating the backup domain directory. Cannot create {0}
upgrade.common.iiop_port_domain_doc=While updating iiop-clusters end point port nos to iiop-listener, could not obtain Domain element

upgrade.common.domain_start_failed=Failed to start domain: {0}
#todo: unused prop search. use this as test case
upgrade.common.inplace_upgrade_not_supported=This version of the server does not allow in-place domain upgrade only a side-by-side upgrade is supported.

upgrade.common.start_copy_user_libs=Start copying of user lib files.
upgrade.common.src_lib_dir_not_found=Source domain lib directory {0} not found. No files copied.
upgrade.common.trg_lib_dir_not_found=Target domain lib directory {0} not found. No files copied.
upgrade.common.finished_copy_user_libs=Finished copying of user lib files.
upgrade.common.dir_not_found=Directory not found {0}
upgrade.common.warning_user_must_copy_file=WARNING: User should copy all 3rd party jar files from the source server's lib directory to target server's lib directory.

upgrade.common.lib_exclude_error=Lib exclude file error {0}
upgrade.common.lib_copy_error=Lib file copy error {0}
upgrade.common.copied_dir=Copied dir: {0}
upgrade.common.copied_file=Copied file: {0}

enterprise.tools.upgrade.cli._invalid_option_or_value=Invalid option or value: {0} {1}
enterprise.tools.upgrade.cli.not_valid_source_install=Source Directory is invalid. Please enter a valid Domain Directory or Domain Root or type ctrl-c to exit.
enterprise.tools.upgrade.cli.not_valid_target_install=Please enter a valid directory path or type ctrl-c to exit.
enterprise.tools.upgrade.cli.Source_input=Enter the Domain directory of the source:\

enterprise.tools.upgrade.cli.move_dir=The domain {0} already exists. Would you like to rename it (y/n)?
enterprise.tools.upgrade.cli.yes_option=y

enterprise.tools.upgrade.cli.Target_input=Enter the Target Domains Root:\

enterprise.tools.upgrade.cli.MasterPW_input=Enter the Master password:\

enterprise.tools.upgrade.cli.unexpectedException=An unexpected exception occured:
enterprise.tools.upgrade.cli.arg_unknow_class_not_found=ARG_Unknown class not found.
enterprise.tools.upgrade.cli.invalid_option=Unknown option {0}
enterprise.tools.upgrade.cli.usage=Usage :
enterprise.tools.upgrade.cli.command_string=asupgrade [-c/--console] [-V/--version] [-h/--help] [-s/--source source_domain_directory] [-t/--target target_domains_root] [-m/--masterpassword mpassword] [-f/--passwordfile pwd_file_path]

enterprise.tools.upgrade.target.dir_does_not_exist=ERROR: Target directory {0} does not exist.  Tool will not create it.
enterprise.tools.upgrade.target.dir_domain_exist=ERROR: There is an existing target directory: {0}.  Tool will not overwrite it.
