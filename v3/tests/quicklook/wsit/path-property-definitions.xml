 <project name="Path property definitions">

     <property name="domain" value="domain1"/>

    <condition property="as.home" value="${glassfish.home}">
         <isset property="glassfish.home"/>
    </condition>

    <condition property="as.home" value="${env.AS_HOME}">
        <and>
            <isset property="env.AS_HOME"/>
            <not>
                <isset property="glassfish.home"/>
            </not>
        </and>
    </condition>

    <condition property="catalina.home" value="${env.CATALINA_HOME}">
        <isset property="env.CATALINA_HOME"/>
    </condition>

    <!--
        There are 2 ways to designate a tomcat build.
    -->
    <condition property="bld.for.tomcat" value="true">
        <or>
            <and>
                <not>
                    <isset property="as.home"/>
                </not>
                <isset property="catalina.home"/>
            </and>

            <and>
                <isset property="as.home"/>
                <isset property="catalina.home"/>
                <isset property="use.tomcat"/>
            </and>
        </or>
    </condition>

    <!--
        Verify that one of the two supported containers is identified
        for use.  If these are not set correctly lib.home and deploy.dir
        will not be correct and all elements that use them will not be correct.
    -->
    <fail message="Web container not identified. Require AS_HOME or CATALINA_HOME be set" >
        <condition >
            <and>
                <not>
                    <isset property="as.home"/>
                </not>
                <not>
                    <isset property="catalina.home"/>
                </not>
            </and>
        </condition>
    </fail>
    <fail message="Two Web containers identified. Only one allowed AS_HOME or CATALINA_HOME" >
        <condition>
            <and>
                <isset property="as.home"/>
                <isset property="catalina.home"/>
                <not>
                    <isset property="use.tomcat"/>
                </not>
            </and>
        </condition>
    </fail>

    <condition property="lib.home" value="${catalina.home}/shared/lib" else="${as.home}/lib">
        <isset property="bld.for.tomcat"/>
    </condition>

    <condition property="lib.endorsed" value="${catalina.home}/common/endorsed">
        <isset property="bld.for.tomcat"/>
    </condition>

    <condition property="lib.endorsed" value="${as.home}/lib/endorsed">
        <and>
            <not>
                <isset property="bld.for.tomcat"/>
            </not>
            <available file="${as.home}/lib/endorsed" type="dir"/>
        </and>
    </condition>

    <!-- GF V3 has no lib/endorsed directory. We are setting a dummy value -->
    <!-- to avoid a failure when using the wsit.classpath                  -->
    <condition property="lib.endorsed" value="${as.home}/modules">
        <and>
            <not>
                <isset property="bld.for.tomcat"/>
            </not>
            <available file="${as.home}/modules" type="dir"/>
        </and>
    </condition>

    <!-- If GF V3 is absent, we need to make sure this property points to an              -->
    <!-- existing directory, otherwise the build will fail when using the wsit.classpath  -->
    <condition property="lib.glassfishv3" value="${as.home}/modules" else="${basedir}">
        <and>
            <not>
                <isset property="bld.for.tomcat"/>
            </not>
            <available file="${as.home}/modules" type="dir"/>
        </and>
    </condition>

    <condition property="deploy.dir" value="${catalina.home}/webapps" else="${as.home}/domains/${domain}/autodeploy">
        <isset property="bld.for.tomcat"/>
    </condition>

    <path id="wsit.classpath">
        <pathelement location="${java.home}/../lib/tools.jar"/>
        <fileset dir="${lib.home}">
            <include name="webservices-rt.jar"/>
            <include name="webservices-tools.jar"/>
            <include name="webservices-extra.jar"/>
            <include name="webservices-extra-api.jar"/>
            <include name="javaee.jar"/>
            <include name="activation.jar"/>
        </fileset>
        <fileset dir="${lib.endorsed}">
            <include name="webservices-api.jar"/>
        </fileset>
        <fileset dir="${lib.glassfishv3}">
            <include name="jaxb.jar"/>
            <include name="webservices.jar"/>
            <include name="javax.activation*.jar"/>
        </fileset>
    </path>

    <taskdef name="apt" classname="com.sun.tools.ws.ant.Apt">
        <classpath refid="wsit.classpath"/>
    </taskdef>

    <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
        <classpath refid="wsit.classpath"/>
    </taskdef>

    <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
        <classpath refid="wsit.classpath"/>
    </taskdef>

</project>