# translation of xml.po to
# Language de-DE translations for Introduction_to_Web_Beans package.
# Automatically generated, 2009.
#
msgid ""
msgstr ""
"Project-Id-Version: xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-07-25T03:52:15\n"
"PO-Revision-Date: 2009-03-06 17:56+1100\n"
"Last-Translator: \n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, fuzzy, no-c-format
msgid "Defining beans using XML"
msgstr "Definition von Web Beans unter Verwendung von XML"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"So far, we've seen plenty of examples of beans declared using annotations. "
"However, there are a couple of occasions when we can't use annotations to "
"define the bean:"
msgstr ""
"Bis jetzt haben wir viele Beispiele von unter Verwendung von Annotationen "
"deklarierten Web Beans gesehen. Es gibt jedoch ein paar Fälle, in denen "
"keine Annotationen zur Definition des Web Beans verwendet werden können:"

#. Tag: para
#, no-c-format
msgid "when the implementation class comes from some preexisting library, or"
msgstr ""
"Wenn die Implementierungsklasse von einer bereits bestehenden Bibliothek "
"stammt oder "

#. Tag: para
#, fuzzy, no-c-format
msgid "when there should be multiple beans with the same implementation class."
msgstr ""
"wenn mehrere Web Beans mit derselben Implementierungsklasse existieren "
"sollten."

#. Tag: para
#, no-c-format
msgid ""
"One way to address these problems is to write a producer method. Weld offers "
"another option: declare the bean using XML. This feature will hopefully one "
"day be part of the CDI specification. Until then, it remains a portable "
"extension."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Many frameworks use XML to provide metadata relating to Java classes. "
"However, Weld uses a very different approach to specifying the names of Java "
"classes, fields or methods to most other frameworks. Instead of writing "
"class and member names as the string values of XML elements and attributes, "
"Weld lets you use the class or member name as the name of the XML element."
msgstr ""
"Viele Frameworks verwenden XML zur Bereitstellung von Metadaten, die sich "
"auf Java-Klassen beziehen. Web Beans jedoch verwenden eine sehr "
"unterschiedliche Herangehensweise bei der Festlegung von Namen von Java-"
"Klassen, Feldern oder Methoden als andere Frameworks. Statt dem Schreiben "
"von Klassen- und Mitglieder-Namen als String-Werte von XML-Elementen und "
"Attributen, gestatten Web Beans die Verwendung des Klassen- und Mitglieder-"
"Namens als Name des XML-Elements."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The advantage of this approach is that you can write an XML schema that "
"prevents spelling errors in your XML document. It's even possible for a tool "
"to generate the XML schema automatically from the compiled Java code. Or, an "
"integrated development environment could perform the same validation without "
"the need for the explicit intermediate generation step."
msgstr ""
"Der Vorteil bei dieser Vorgehensweise ist, dass Sie ein XML-Schema schreiben "
"können, dass Rechtschreibfehler in Ihrem XML-Dokument verhindert. Es ist "
"sogar möglich, dass ein Tool das XML-Schema automatisch aus dem kompilierten "
"Java-Code generiert. Oder eine integrierte Entwicklungsumgebung könnte "
"dieselbe Validierung durchführen, ohne dass der explizite "
"Generierungsschritt notwendig wäre."

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring beans"
msgstr "Deklaration von Web Bean Klassen"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For each Java package, Weld defines a corresponding XML namespace. The "
"namespace is formed by prepending <literal>urn:java:</literal> to the Java "
"package name. For the package <literal>com.mydomain.myapp</literal>, the XML "
"namespace is <literal>urn:java:com.mydomain.myapp</literal>."
msgstr ""
"Für jedes Java-Paket definieren Web Beans einen entsprechenden XML-"
"Namespace. Der Namespace wird durch Voranstellen von <literal>urn:java:</"
"literal> vor den Java-Paketnamen gebildet. Für das Paket <literal>com."
"mydomain.myapp</literal> ist der XML-Namespace <literal>urn:java:com."
"mydomain.myapp</literal>."

#. Tag: para
#, no-c-format
msgid ""
"Java types belonging to a package are referred to using an XML element in "
"the namespace corresponding to the package. The name of the element is the "
"name of the Java type. Fields and methods of the type are specified by child "
"elements in the same namespace. If the type is an annotation, members are "
"specified by attributes of the element."
msgstr ""
"Auf Java-Typen, die zu einem Paket gehören, wird verwiesen, indem ein XML-"
"Element in dem dem Paket entsprechenden Namespace verwendet wird. Derr Name "
"des Elements ist der Name des Java-Typs. Felder und Methoden des Typs werden "
"durch untergeordnete Elemente in demselben Namespace festgelegt. Handelt es "
"sich bei dem Typ um eine Annotation, so werden Mitglieder durch Attribute "
"des Elements festgelegt."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For example, the element <literal>&lt;util:Date/&gt;</literal> in the "
"following XML fragment refers to the class <literal>java.util.Date</literal>:"
msgstr ""
"Zum Beispiel bezieht sich das Element <literal>&lt;util:Date/&gt;</literal> "
"im folgenden XML-Fragment auf die Klasse <literal>java.util.Date</literal>:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"And this is all the code we need to declare that <literal>Date</literal> is "
"a bean! An instance of <literal>Date</literal> may now be injected by any "
"other bean:"
msgstr ""
"Und das ist alles an Code was wir benötigen, um zu deklarieren dass es sich "
"bei <literal>Date</literal> um ein einfaches Web Bean handelt! Eine Instanz "
"von <literal>Date</literal> kann jetzt in ein beliebiges anderes Web Bean "
"eingespeist werden:"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring bean metadata"
msgstr "Deklaration von Web Bean Metadaten"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"We can declare the scope, deployment type and interceptor binding types "
"using direct child elements of the bean declaration:"
msgstr ""
"Wir können Geltungsbereich, Deployment-Typ und Interzeptor Binding-Typen "
"deklarieren, indem wir direkte untergeordnete Elemente der Web Bean "
"Dellaration verwenden:"

#. Tag: para
#, fuzzy, no-c-format
msgid "We use exactly the same approach to specify names and qualifiers:"
msgstr ""
"Wir verwenden exakt dieselbe Vorgehensweise, um Namen und Binding-Typ "
"festzulegen:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Where <literal>@Login</literal> and <literal>@SystemStart</literal> are "
"qualifier annotations types."
msgstr ""
"Wobei <literal>@Login</literal> und <literal>@SystemStart</literal> Binding "
"Annotationstypen sind."

#. Tag: para
#, fuzzy, no-c-format
msgid "As usual, a bean may support multiple qualifier types:"
msgstr "Wie gewöhnlich kann ein Web Bean mehrere Binding-Typen unterstützen:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Interceptors and decorators are beans as well, so they may be declared just "
"like any other bean:"
msgstr ""
"Interzeptoren und Dekoratoren sind nur einfache Web Beans und können daher "
"wie jedes andere einfache Web Bean deklariert werden:"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring bean members"
msgstr "Deklaration von Web Bean Mitgliedern"

#. Tag: para
#, no-c-format
msgid "TODO!"
msgstr "TODO!"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring inline beans"
msgstr "Deklaration von inline Web Beans"

#. Tag: para
#, fuzzy, no-c-format
msgid "Weld lets us define a bean at an injection point. For example:"
msgstr ""
"Web Beans lassen uns ein Web Bean an einem Einspeisungspunkt definieren. Zum "
"Beispiel:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>&lt;Name&gt;</literal> element declares a bean of scope "
"<literal>@Dependent</literal> and class <literal>Name</literal>, with a set "
"of initial field values. This bean has a special, container-generated "
"qualifier and is therefore injectable only to the specific injection point "
"at which it is declared."
msgstr ""
"Das <literal>&lt;Name&gt;</literal>-Element deklariert ein einfaches Web "
"Bean von Geltungsbereich <literal>@Dependent</literal> und Klasse "
"<literal>Name</literal> mit einem Satz anfänglicher Feldwerte. Dieses Web "
"Bean besitzt ein spezielles, Container-generiertes Binding und ist daher nur "
"an dem spezifischen Einspeisungspunkt einspeisbar, an dem es deklariert wird."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This simple but powerful feature allows the Weld XML format to be used to "
"specify whole graphs of Java objects. It's not quite a full databinding "
"solution, but it's close!"
msgstr ""
"Dieses einfache aber leistungsfähige Feature gestattet die Verwendung des "
"Web Beans XML-Formats zur Festlegung ganzer Diagramme von Java-Objekten. Es "
"ist noch keine volndige datenbindende Lösung, aber ganz nah dran!"

#. Tag: title
#, no-c-format
msgid "Using a schema"
msgstr "Verwendung eines Schemas"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If we want our XML document format to be authored by people who aren't Java "
"developers, or who don't have access to our code, we need to provide a "
"schema. There's nothing specific to Weld about writing or using the schema."
msgstr ""
"Wenn Personen, die keine Java-Entwickler sind, Autoren unseres XML-"
"Dokumentformats sein sollen oder diese keinen Zugriff auf unseren Code "
"haben, so müssen wir ein Schema bereitstellen. Es gibt nichts, was "
"hinsichtlich des Schreibens oder der Verwendung des Schemas spezifisch für "
"Web Beans ist."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Writing an XML schema is quite tedious. Therefore, the Weld project will "
"provide a tool which automatically generates the XML schema from compiled "
"Java code."
msgstr ""
"Das Schreiben eines XML-Schemas ist recht mühselig. Daher liefert das Web "
"Beans RI Projekt ein Tool, das automatisch das XML-Schema aus kompiliertem "
"Java-Code generiert."

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<beans xmlns=\"urn:java:javax.beans\"\n"
#~ "   xmlns:util=\"urn:java:java.util\">\n"
#~ "   <util:Date/>\n"
#~ "</beans>]]>"
#~ msgstr ""
#~ "<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
#~ "          xmlns:util=\"urn:java:java.util\">\n"
#~ "\n"
#~ "    <util:Date/>\n"
#~ "\n"
#~ "</WebBeans>]]>"

#, fuzzy
#~ msgid "<![CDATA[private @Inject Date date;]]>"
#~ msgstr "<![CDATA[@Current Date date]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:ShoppingCart>\n"
#~ "   <SessionScoped/>\n"
#~ "   <myfwk:Transactional requiresNew=\"true\"/>\n"
#~ "   <myfwk:Secure/>\n"
#~ "</myapp:ShoppingCart>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:ShoppingCart>\n"
#~ "    <SessionScoped/>\n"
#~ "    <myfwk:Transactional requiresNew=\"true\"/>\n"
#~ "    <myfwk:Secure/>\n"
#~ "</myapp:ShoppingCart>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<util:Date>\n"
#~ "   <Named>currentTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "   <SessionScoped/>\n"
#~ "   <myapp:Login/>\n"
#~ "   <Named>loginTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "   <ApplicationScoped/>\n"
#~ "   <myapp:SystemStart/>\n"
#~ "   <Named>systemStartTime</Named>\n"
#~ "</util:Date>]]>"
#~ msgstr ""
#~ "<![CDATA[<util:Date>\n"
#~ "    <Named>currentTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "    <SessionScoped/>\n"
#~ "    <myapp:Login/>\n"
#~ "    <Named>loginTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "    <ApplicationScoped/>\n"
#~ "    <myapp:SystemStart/>\n"
#~ "    <Named>systemStartTime</Named>\n"
#~ "</util:Date>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[private @Inject Date currentTime;\n"
#~ "private @Login Date loginTime;\n"
#~ "private @SystemStart Date systemStartTime;]]>"
#~ msgstr ""
#~ "<![CDATA[@Current Date currentTime;\n"
#~ "@Login Date loginTime;\n"
#~ "@SystemStart Date systemStartTime;]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
#~ "   <myapp:PayByCheque/>\n"
#~ "   <myapp:Asynchronous/>\n"
#~ "</myapp:AsynchronousChequePaymentProcessor>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
#~ "    <myapp:PayByCheque/>\n"
#~ "    <myapp:Asynchronous/>\n"
#~ "</myapp:AsynchronousChequePaymentProcessor>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myfwk:TransactionInterceptor>\n"
#~ "   <Interceptor/>\n"
#~ "   <myfwk:Transactional/>\n"
#~ "</myfwk:TransactionInterceptor>]]>"
#~ msgstr ""
#~ "<![CDATA[<myfwk:TransactionInterceptor>\n"
#~ "    <Interceptor/>\n"
#~ "    <myfwk:Transactional/>\n"
#~ "</myfwk:TransactionInterceptor>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:System>\n"
#~ "   <ApplicationScoped/>\n"
#~ "   <myapp:admin>\n"
#~ "      <myapp:Name>\n"
#~ "         <myapp:firstname>Gavin</myapp:firstname>\n"
#~ "         <myapp:lastname>King</myapp:lastname>\n"
#~ "         <myapp:email>gavin@hibernate.org</myapp:email>\n"
#~ "      </myapp:Name>\n"
#~ "   </myapp:admin>\n"
#~ "</myapp:System>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:System>\n"
#~ "    <ApplicationScoped/>\n"
#~ "    <myapp:admin>\n"
#~ "        <myapp:Name>\n"
#~ "            <myapp:firstname>Gavin</myapp:firstname>\n"
#~ "            <myapp:lastname>King</myapp:lastname>\n"
#~ "            <myapp:email>gavin@hibernate.org</myapp:email>\n"
#~ "        </myapp:Name>\n"
#~ "    </myapp:admin>\n"
#~ "</myapp:System>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<beans xmlns=\"urn:java:javax.beans\"\n"
#~ "   xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
#~ "   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "   xsi:schemaLocation=\"urn:java:javax.beans http://java.sun.com/jee/"
#~ "beans-1.0.xsd\n"
#~ "   urn:java:com.mydomain.myapp http://mydomain.com/xsd/myapp-1.2.xsd\">\n"
#~ "\n"
#~ "   <myapp:System>\n"
#~ "      ...\n"
#~ "   </myapp:System>\n"
#~ "\n"
#~ "</beans>]]>"
#~ msgstr ""
#~ "<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
#~ "          xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
#~ "          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "          xsi:schemaLocation=\"urn:java:javax.webbeans http://java.sun."
#~ "com/jee/web-beans-1.0.xsd\n"
#~ "                              urn:java:com.mydomain.myapp http://mydomain."
#~ "com/xsd/myapp-1.2.xsd\">\n"
#~ "\n"
#~ "    <myapp:System>\n"
#~ "        ...\n"
#~ "    </myapp:System>\n"
#~ "\n"
#~ "</WebBeans>]]>"

#~ msgid "In either of these cases, Web Beans gives us two options:"
#~ msgstr "In jedem dieser Fälle bieten uns Web Beans zwei Optionen:"

#~ msgid "write a producer method, or"
#~ msgstr "das Schreiben einer Producer-Methode oder "

#~ msgid "declare the Web Bean using XML."
#~ msgstr "das Deklarieren des Web Beans mittels XML."
