//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-04/12/2007 12:08 AM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.24 at 01:25:15 PM PDT 
//


package com.sun.enterprise.config.serverbeans;

import org.jvnet.hk2.config.Configured;
import org.jvnet.hk2.config.Element;

import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


/**
 *
 */

/* @XmlType(name = "", propOrder = {
    "accessLog",
    "httpListener",
    "virtualServer",
    "requestProcessing",
    "keepAlive",
    "connectionPool",
    "httpProtocol",
    "httpFileCache",
    "property"
}) */
@Configured
public class HttpService
        implements Serializable {

	final transient private VetoableChangeSupport support = new VetoableChangeSupport(this);

    private final static long serialVersionUID = 1L;
    @Element
    protected AccessLog accessLog;
    @Element(required=true)
    protected List<HttpListener> httpListener = new ConstrainedList<HttpListener>("httpListener", support);
    @Element(required=true)
    protected List<VirtualServer> virtualServer = new ConstrainedList<VirtualServer>("virtualServer", support);
    @Element
    protected RequestProcessing requestProcessing;
    @Element
    protected KeepAlive keepAlive;
    @Element
    protected ConnectionPool connectionPool;
    @Element
    protected HttpProtocol httpProtocol;
    @Element
    protected HttpFileCache httpFileCache;

    @Element
    protected List<Property> property = new ConstrainedList<Property>("property", support);



    /**
     * Gets the value of the accessLog property.
     *
     * @return possible object is
     *         {@link AccessLog }
     */
    public AccessLog getAccessLog() {
        return accessLog;
    }

    /**
     * Sets the value of the accessLog property.
     *
     * @param value allowed object is
     *              {@link AccessLog }
     */
    public void setAccessLog(AccessLog value) {
        try {
            support.fireVetoableChange("accessLog", this.accessLog, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.accessLog = value;
    }

    /**
     * Gets the value of the httpListener property.
     * <p/>
     * <p/>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the httpListener property.
     * <p/>
     * <p/>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHttpListener().add(newItem);
     * </pre>
     * <p/>
     * <p/>
     * <p/>
     * Objects of the following type(s) are allowed in the list
     * {@link HttpListener }
     */
    public List<HttpListener> getHttpListener() {
        return this.httpListener;
    }

    /**
     * Gets the value of the virtualServer property.
     * <p/>
     * <p/>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the virtualServer property.
     * <p/>
     * <p/>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVirtualServer().add(newItem);
     * </pre>
     * <p/>
     * <p/>
     * <p/>
     * Objects of the following type(s) are allowed in the list
     * {@link VirtualServer }
     */
    public List<VirtualServer> getVirtualServer() {
        return this.virtualServer;
    }

    /**
     * Gets the value of the requestProcessing property.
     *
     * @return possible object is
     *         {@link RequestProcessing }
     */
    public RequestProcessing getRequestProcessing() {
        return requestProcessing;
    }

    /**
     * Sets the value of the requestProcessing property.
     *
     * @param value allowed object is
     *              {@link RequestProcessing }
     */
    public void setRequestProcessing(RequestProcessing value) {
        try {
            support.fireVetoableChange("requestProcessing", this.requestProcessing, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.requestProcessing = value;
    }

    /**
     * Gets the value of the keepAlive property.
     *
     * @return possible object is
     *         {@link KeepAlive }
     */
    public KeepAlive getKeepAlive() {
        return keepAlive;
    }

    /**
     * Sets the value of the keepAlive property.
     *
     * @param value allowed object is
     *              {@link KeepAlive }
     */
    public void setKeepAlive(KeepAlive value) {
        try {
            support.fireVetoableChange("keepAlive", this.keepAlive, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.keepAlive = value;
    }

    /**
     * Gets the value of the connectionPool property.
     *
     * @return possible object is
     *         {@link ConnectionPool }
     */
    public ConnectionPool getConnectionPool() {
        return connectionPool;
    }

    /**
     * Sets the value of the connectionPool property.
     *
     * @param value allowed object is
     *              {@link ConnectionPool }
     */
    public void setConnectionPool(ConnectionPool value) {
        try {
            support.fireVetoableChange("connectionPool", this.connectionPool, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.connectionPool = value;
    }

    /**
     * Gets the value of the httpProtocol property.
     *
     * @return possible object is
     *         {@link HttpProtocol }
     */
    public HttpProtocol getHttpProtocol() {
        return httpProtocol;
    }

    /**
     * Sets the value of the httpProtocol property.
     *
     * @param value allowed object is
     *              {@link HttpProtocol }
     */
    public void setHttpProtocol(HttpProtocol value) {
        try {
            support.fireVetoableChange("httpProtocol", this.httpProtocol, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.httpProtocol = value;
    }

    /**
     * Gets the value of the httpFileCache property.
     *
     * @return possible object is
     *         {@link HttpFileCache }
     */
    public HttpFileCache getHttpFileCache() {
        return httpFileCache;
    }

    /**
     * Sets the value of the httpFileCache property.
     *
     * @param value allowed object is
     *              {@link HttpFileCache }
     */
    public void setHttpFileCache(HttpFileCache value) {
        try {
            support.fireVetoableChange("httpFileCache", this.httpFileCache, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.httpFileCache = value;
    }

    /**
     * Gets the value of the property property.
     * <p/>
     * <p/>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the property property.
     * <p/>
     * <p/>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperty().add(newItem);
     * </pre>
     * <p/>
     * <p/>
     * <p/>
     * Objects of the following type(s) are allowed in the list
     * {@link Property }
     */
    public List<Property> getProperty() {
        return this.property;
    }

    public void addVetoableChangeListener(VetoableChangeListener param0) {
        support.addVetoableChangeListener(param0);
    }

    public void addVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.addVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.removeVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(VetoableChangeListener param0) {
        support.removeVetoableChangeListener(param0);
    }

}
