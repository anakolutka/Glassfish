#!/bin/sh

if [ ! -e /etc/opt/glassfishvm/cust ]; then
    mkdir -p /etc/opt/glassfishvm/cust
fi

sudo mount -t iso9660 /dev/cdrom /etc/opt/glassfishvm/cust

# get the IP address of this instance
intf=`awk < /proc/net/dev '
{   if ($1 ~ /^eth/) {
        split($1,field, ":")

        print(field[1])
    }
}'`

echo "Using $intf network interface"
numTries=0
while [ -z  $ip_address ]
do
    ip_address=`/sbin/ifconfig $intf  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`
    ifconfig $intf
    numTries=`expr $numTries + 1`
    echo "I have tried $numTries times"
    if [ $numTries -eq 5 ]; then
        exit 1
    fi
    if [ -z $ip_address ]; then
        dhclient $intf
    fi
done

GLASSFISH_HOME=${GLASSFISH_HOME:-"/opt/glassfishvm/glassfish3"}

if [ ! -e /etc/opt/glassfishvm/configured_ip ]; then

    if [ ! -e /etc/opt/glassfishvm/cust/customization ]; then
        echo "Image not configured"
        exit 1
    fi

    echo "my master is $GroupMasterMachine and the port is $GroupMasterPort, my IP is $ip_address"

    . /etc/opt/glassfishvm/cust/customization
    vmName=`echo $Group_$Machine_$MachineAlias`

    if [ -z $AuthToken ]; then
        echo "No authentication token provided in the customization file"
        exit 1
    else

        if [ -e /etc/opt/glassfishvm/cust/id_dsa.pub ]; then
            echo "Installing public key"
            if [ ! -e /home/$UserName/.ssh ]; then
                mkdir /home/$UserName/.ssh
                chown $UserId:$GroupId /home/$UserName/.ssh
            fi
            cat /etc/opt/glassfishvm/cust/id_dsa.pub >>/home/$UserName/.ssh/authorized_keys2
            chown $UserId:$GroupId /home/$UserName/.ssh/authorized_keys2
        fi
        if [ -e /etc/opt/glassfishvm/cust/id_rsa.pub ]; then
            echo "Installing public key"
            if [ ! -e /home/$UserName/.ssh ]; then
                mkdir /home/$UserName/.ssh
                chown $UserId:$GroupId /home/$UserName/.ssh
            fi
            cat /etc/opt/glassfishvm/cust/id_rsa.pub >>/home/$UserName/.ssh/authorized_keys2
            chown $UserId:$GroupId /home/$UserName/.ssh/authorized_keys2
        fi

        echo "$DASAddress   $DAS    # added by glassfish" >>/etc/hosts

        echo "$GLASSFISH_HOME/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken register-virtual-machine --group $Group --machine $Machine --address $ip_address --sshuser cloud --installdir $GLASSFISH_HOME --cluster $Cluster $MachineAlias"
        $GLASSFISH_HOME/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken register-virtual-machine --group $Group --machine $Machine --address $ip_address --sshuser cloud --installdir $GLASSFISH_HOME --cluster $Cluster $MachineAlias
        if [ $? -eq 0 ]; then
            echo $ip_address >/etc/opt/glassfishvm/configured_ip
        else
            echo "Asadmin register instance returned $?"
        fi
    fi
else
    configured_ip_address=`cat /etc/opt/glassfishvm/configured_ip`

    . /etc/opt/glassfishvm/cust/customization

    nodeName=`echo $Group"_"$Machine"_"$MachineAlias`

    echo "Comparing $ip_address and $configured_ip_address"
    if [ $ip_address != $configured_ip_address ]; then

		$GLASSFISH_HOME/glassfish/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken update-node-ssh --nodehost $ip_address $nodeName
        if [ $? -eq 0 ]; then
            echo $ip_address >/etc/opt/glassfishvm/configured_ip
            sync
        fi
    fi

    # notify the vm is up.
    echo "$GLASSFISH_HOME/glassfish/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken2 register-startup $nodeName"
    $GLASSFISH_HOME/glassfish/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken2 register-startup $nodeName
fi

# finally, start the virtual machine
sudo -u \#$UserId $GLASSFISH_HOME/glassfish/bin/asadmin --_authtoken $StartToken start-local-instance
