//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-04/12/2007 12:08 AM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.24 at 01:25:15 PM PDT 
//


package com.sun.enterprise.config.serverbeans;

import org.jvnet.hk2.config.Attribute;
import org.jvnet.hk2.config.Configured;
import org.jvnet.hk2.config.Element;

import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


/**
 *
 */

/* @XmlType(name = "", propOrder = {
    "profiler",
    "jvmOptionsOrProperty"
}) */
@Configured
public class JavaConfig
        implements Serializable {

	final transient private VetoableChangeSupport support = new VetoableChangeSupport(this);

    private final static long serialVersionUID = 1L;
    @Attribute

    protected String javaHome;
    @Attribute

    protected String debugEnabled;
    @Attribute

    protected String debugOptions;
    @Attribute

    protected String rmicOptions;
    @Attribute

    protected String javacOptions;
    @Attribute

    protected String classpathPrefix;
    @Attribute

    protected String classpathSuffix;
    @Attribute

    protected String serverClasspath;
    @Attribute

    protected String systemClasspath;
    @Attribute

    protected String nativeLibraryPathPrefix;
    @Attribute

    protected String nativeLibraryPathSuffix;
    @Attribute

    protected String bytecodePreprocessors;
    @Attribute

    protected String envClasspathIgnored;
    protected Profiler profiler;

    @Element
    List<String> jvmOptions = new ConstrainedList<String>("jvmOptions", support);

    @Element("property")
    protected List<Property> properties = new ConstrainedList<Property>("properties", support);
    



    /**
     * Gets the value of the javaHome property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getJavaHome() {
        if (javaHome == null) {
            return "${com.sun.aas.javaRoot}";
        } else {
            return javaHome;
        }
    }

    /**
     * Sets the value of the javaHome property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setJavaHome(String value) {
        try {
            support.fireVetoableChange("javaHome", this.javaHome, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.javaHome = value;
    }

    /**
     * Gets the value of the debugEnabled property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getDebugEnabled() {
        if (debugEnabled == null) {
            return "false";
        } else {
            return debugEnabled;
        }
    }

    /**
     * Sets the value of the debugEnabled property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setDebugEnabled(String value) {
        try {
            support.fireVetoableChange("debugEnabled", this.debugEnabled, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.debugEnabled = value;
    }

    /**
     * Gets the value of the debugOptions property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getDebugOptions() {
        if (debugOptions == null) {
            return "-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n";
        } else {
            return debugOptions;
        }
    }

    /**
     * Sets the value of the debugOptions property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setDebugOptions(String value) {
        try {
            support.fireVetoableChange("debugOptions", this.debugOptions, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.debugOptions = value;
    }

    /**
     * Gets the value of the rmicOptions property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getRmicOptions() {
        if (rmicOptions == null) {
            return "-iiop -poa -alwaysgenerate -keepgenerated -g";
        } else {
            return rmicOptions;
        }
    }

    /**
     * Sets the value of the rmicOptions property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setRmicOptions(String value) {
        try {
            support.fireVetoableChange("rmicOptions", this.rmicOptions, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.rmicOptions = value;
    }

    /**
     * Gets the value of the javacOptions property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getJavacOptions() {
        if (javacOptions == null) {
            return "-g";
        } else {
            return javacOptions;
        }
    }

    /**
     * Sets the value of the javacOptions property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setJavacOptions(String value) {
        try {
            support.fireVetoableChange("javacOptions", this.javacOptions, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.javacOptions = value;
    }

    /**
     * Gets the value of the classpathPrefix property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getClasspathPrefix() {
        return classpathPrefix;
    }

    /**
     * Sets the value of the classpathPrefix property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setClasspathPrefix(String value) {
        try {
            support.fireVetoableChange("classpathPrefix", this.classpathPrefix, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.classpathPrefix = value;
    }

    /**
     * Gets the value of the classpathSuffix property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getClasspathSuffix() {
        return classpathSuffix;
    }

    /**
     * Sets the value of the classpathSuffix property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setClasspathSuffix(String value) {
        try {
            support.fireVetoableChange("classpathSuffix", this.classpathSuffix, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.classpathSuffix = value;
    }

    /**
     * Gets the value of the serverClasspath property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getServerClasspath() {
        return serverClasspath;
    }

    /**
     * Sets the value of the serverClasspath property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setServerClasspath(String value) {
        try {
            support.fireVetoableChange("serverClasspath", this.serverClasspath, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.serverClasspath = value;
    }

    /**
     * Gets the value of the systemClasspath property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getSystemClasspath() {
        return systemClasspath;
    }

    /**
     * Sets the value of the systemClasspath property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setSystemClasspath(String value) {
        try {
            support.fireVetoableChange("systemClasspath", this.systemClasspath, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.systemClasspath = value;
    }

    /**
     * Gets the value of the nativeLibraryPathPrefix property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getNativeLibraryPathPrefix() {
        return nativeLibraryPathPrefix;
    }

    /**
     * Sets the value of the nativeLibraryPathPrefix property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setNativeLibraryPathPrefix(String value) {
        try {
            support.fireVetoableChange("nativeLibraryPathPrefix", this.nativeLibraryPathPrefix, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.nativeLibraryPathPrefix = value;
    }

    /**
     * Gets the value of the nativeLibraryPathSuffix property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getNativeLibraryPathSuffix() {
        return nativeLibraryPathSuffix;
    }

    /**
     * Sets the value of the nativeLibraryPathSuffix property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setNativeLibraryPathSuffix(String value) {
        try {
            support.fireVetoableChange("nativeLibraryPathSuffix", this.nativeLibraryPathSuffix, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.nativeLibraryPathSuffix = value;
    }

    /**
     * Gets the value of the bytecodePreprocessors property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getBytecodePreprocessors() {
        return bytecodePreprocessors;
    }

    /**
     * Sets the value of the bytecodePreprocessors property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setBytecodePreprocessors(String value) {
        try {
            support.fireVetoableChange("bytecodePreprocessors", this.bytecodePreprocessors, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.bytecodePreprocessors = value;
    }

    /**
     * Gets the value of the envClasspathIgnored property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getEnvClasspathIgnored() {
        if (envClasspathIgnored == null) {
            return "true";
        } else {
            return envClasspathIgnored;
        }
    }

    /**
     * Sets the value of the envClasspathIgnored property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setEnvClasspathIgnored(String value) {
        try {
            support.fireVetoableChange("envClasspathIgnored", this.envClasspathIgnored, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.envClasspathIgnored = value;
    }

    /**
     * Gets the value of the profiler property.
     *
     * @return possible object is
     *         {@link Profiler }
     */
    public Profiler getProfiler() {
        return profiler;
    }

    /**
     * Sets the value of the profiler property.
     *
     * @param value allowed object is
     *              {@link Profiler }
     */
    public void setProfiler(Profiler value) {
        try {
            support.fireVetoableChange("profiler", this.profiler, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.profiler = value;
    }


    public void addProperty(Property property) {
        properties.add(property);
    }

    public List<Property>  getProperty() {
        return properties;
    }

    public void addJvmOption(String option) {
        jvmOptions.add(option);
    }

    public List<String> getJvmOptions() {
        return jvmOptions;
    }

    /**
     * Backward compatibility API
     */
    public List<Object> getJvmOptionsOrProperty() {
        ArrayList bag = new ArrayList<Object>();
        bag.addAll(jvmOptions);
        bag.addAll(properties);
        return bag;

    }

    public void addVetoableChangeListener(VetoableChangeListener param0) {
        support.addVetoableChangeListener(param0);
    }

    public void addVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.addVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.removeVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(VetoableChangeListener param0) {
        support.removeVetoableChangeListener(param0);
    }

}
