<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->

<project name="SunOne appserver commons" default="all" basedir=".">  

<!-- ========== Initialize Properties =================================== -->

    <!--
        component.name: required property.  the value should be the
                        name of the component directory
    -->
    <property name="component.name" value="appserv-commons"/>

    <property file="../bootstrap/project.properties"/>
    <property file="./build.properties"/>

    <property name="dtds.dir" value="${basedir}/dtds"/>
    <property name="schemas.dir" value="${basedir}/schemas"/>  

    <!-- The following properties need to be defined the same in commons and core.
        Make any changes in both places.  -->
    <property name="jws.appclient.path" value="com/sun/enterprise/appclient/jws"/>
    <property name="jws.system.app.name" value="__JWSappclients"/>
    <property name="jws.system.web.app.name" value="sys"/>
    <property name="jws.appclient.keystore" value="tempKeystore.jks"/>

    <!-- all -->
    <target name="all" depends="compile,publish-dtds, assemble"
            description="Build entire component">
    </target>

    <!-- build -->
    <target name="build" depends="compile, publish-dtds, assemble"
            description="Build entire component">
    </target>

    <!-- clean -->
    <target name="clean" 
		description="Clean the build">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${component.classes.dir}"/>
        </delete>
    </target>

    <!-- init. Initialization involves creating publishing directories and
         OS specific targets. --> 
    <target name="init" description="${component.name} initialization">
        <tstamp>
            <format property="start.time" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>    
        <echo message="Building component ${component.name}"/>
        <mkdir dir="${component.classes.dir}"/>
    </target>

    <!-- compile --> 
    <target name="compile" depends="init"
            description="Compile com/sun/* com/iplanet/* sources">  
     
        <javac srcdir="${src.dir}" 
               destdir="${component.classes.dir}"
               debug="${javac.debug}" 
               optimize="${javac.optimize}"
               source="${javac.source}" 
               deprecation="${javac.deprecation}"
               failonerror="true">
            <classpath>
                <pathelement location="${javaee.jar}"/>
                <pathelement location="${webservices-rt.jar}"/>
                <pathelement location="${webservices-tools.jar}"/>
                <pathelement location="${appserv-admin.jar}"/>
                <pathelement location="${appserv-rt.jar}"/>
                <pathelement location="${glassfish.home}/lib/ant/lib/ant.jar"/>
                <pathelement location="${glassfish.home}/lib/appserv-cmp.jar"/>
            </classpath>
            <include name="com/sun/**"/>
            <include name="com/iplanet/**"/>
            <include name="org/apache/tools/**"/>
        </javac>

        <rmic base="${component.classes.dir}" iiop="yes" debug="${javac.debug}">
            <include name="com/sun/enterprise/util/UniqueValueGeneratorBackendImpl.class"/>
        </rmic>
        
        <antcall target="do.javah"/>

    </target>

    <!--  Calling javah utitility to create C header file -->
    <target name="do.javah"
            depends="tools.init.platform">
        <echo message="Generating JNI headers for NativeUtils"/>
        <exec executable="${JAVAH}">
            <arg line="-classpath ${component.classes.dir}"/>
            <arg line="-d ${component.classes.dir}"/>
            <arg line="-force"/>
            <arg line="com.sun.enterprise.util.natives.NativeUtils"/>
        </exec>
    </target>

    <!-- assemble -->
    <target name="assemble" depends="init"
            description="Create appserv-commons jar files">               

        <copy todir="${component.classes.dir}">
            <fileset dir="${src.dir}"
                     includes="**/*.properties"/>
        </copy>

        <jar jarfile="${appserv-deployment-client.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/deployment/deploy/shared/*.class"/>
                <include name="com/sun/enterprise/deployment/deploy/shared/LocalStrings.properties"/>
                <include name="com/sun/enterprise/deployment/deploy/spi/DeploymentManager.class"/>
                <include name="com/sun/enterprise/deployment/util/DeploymentProperties.class"/>
                <include name="com/sun/enterprise/deployment/util/DOLUtils.class"/>
                <include name="com/sun/enterprise/deployment/util/XModuleType.class"/>
                <include name="com/sun/enterprise/deployment/util/FileUploadUtil.class"/>
                <include name="com/sun/enterprise/util/i18n/StringManager.class"/>
                <include name="com/sun/enterprise/util/i18n/StringManagerBase.class"/>
                <include name="com/sun/enterprise/util/io/FileUtils.class"/>
                <include name="com/sun/enterprise/util/LocalStringManager.class"/>
                <include name="com/sun/enterprise/util/LocalStringManagerImpl.class"/>
                <include name="com/sun/enterprise/util/Print.class"/>
                <include name="com/sun/enterprise/util/shared/ArchivistUtils.class"/>
                <include name="com/sun/logging/LogDomains.class"/>
                <include name="com/sun/logging/enterprise/system/tools/deployment/LogStrings.properties"/>
                <include name="com/sun/logging/enterprise/system/util/LogStrings.properties"/>
            </fileset>
        </jar>

        <jar jarfile="${appserv-rt.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="**/*.class"/>
                <include name="**/*.properties"/>
                <exclude name="**/*.dtd"/>
                <include name="sun-application-client-container_1_0.dtd"/>
                <include name="sun-application-client-container_1_1.dtd"/>
                <include name="sun-application-client-container_1_2.dtd"/>
                <exclude name="org/apache/tools/**/*.class"/>
                <exclude name="org/apache/tools/**/*.properties"/>
                <!-- Exclude classes in appserv-deployment-client.jar -->
                <exclude name="com/sun/enterprise/deployment/deploy/shared/*.class"/>
                <exclude name="com/sun/enterprise/deployment/deploy/shared/LocalStrings.properties"/>
                <exclude name="com/sun/enterprise/deployment/deploy/spi/DeploymentManager.class"/>
                <exclude name="com/sun/enterprise/deployment/util/DeploymentProperties.class"/>
                <exclude name="com/sun/enterprise/deployment/util/DOLUtils.class"/>
                <exclude name="com/sun/enterprise/deployment/util/FileUploadUtil.class"/>
                <exclude name="com/sun/enterprise/deployment/util/XModuleType.class"/>
                <exclude name="com/sun/enterprise/util/i18n/StringManager.class"/>
                <exclude name="com/sun/enterprise/util/i18n/StringManagerBase.class"/>
                <exclude name="com/sun/enterprise/util/io/FileUtils.class"/>
                <exclude name="com/sun/enterprise/util/LocalStringManager.class"/>
                <exclude name="com/sun/enterprise/util/LocalStringManagerImpl.class"/>
                <exclude name="com/sun/enterprise/util/Print.class"/>
                <exclude name="com/sun/enterprise/util/shared/ArchivistUtils.class"/>
                <exclude name="com/sun/logging/LogDomains.class"/>
                <exclude name="com/sun/logging/enterprise/system/tools/deployment/LogStrings.properties"/>
                <exclude name="com/sun/logging/enterprise/system/util/LogStrings.properties"/>
            </fileset>
        </jar>

        <jar jarfile="${appserv-admin.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/util/OS.class"/>
                <include name="com/sun/enterprise/util/ASenvPropertyReader.class"/>
                <include name="com/sun/enterprise/util/StringUtils.class"/>
                <include name="com/sun/enterprise/util/io/FileUtils.class"/>
                <include name="com/sun/enterprise/util/ProcessExecutor.class"/>
                <include name="com/sun/enterprise/util/ExecException.class"/>
                <include name="com/sun/enterprise/util/FlusherThread.class"/>
                <include name="com/sun/appserv/server/util/Version.class"/>
            </fileset>
        </jar>                        
        <jar jarfile="${appserv-launch.jar}" update="yes" manifest="appserv-launch.mf">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/util/OS.class"/>
                <include name="com/sun/enterprise/security/store/IdentityManager*.class"/>
                <include name="com/sun/enterprise/util/net/NetUtils.class"/>
                <include name="com/sun/enterprise/util/ASenvPropertyReader.class"/>
                <include name="com/sun/logging/LogDomains.class"/>
            </fileset>
        </jar>                        

	<echo message="Adding antlib.xml to sun-appserv-ant.jar" />
	<echo message="antlib.xml must reside in com/sun/tools/appserver" />
        <mkdir dir="${component.classes.dir}/com/sun/tools/appserver"/>
	<copy todir="${component.classes.dir}/com/sun/tools/appserver" flatten="true">
	    <fileset dir="${src.dir}" includes ="**/antlib.xml " />
	</copy>

        <echo message="Creating sun-appserv-ant.jar"/>
	<jar jarfile="${sun-appserv-ant.jar}"
            manifest="${src.dir}/org/apache/tools/ant/sun-appserv-ant.mf">
            <fileset dir="${component.classes.dir}">
                <include name="org/apache/tools/ant/taskdefs/optional/sun/appserv/**"/>
                <include name="org/apache/tools/ant/taskdefs/defaults.properties" />
                <include name="com/sun/tools/appserver/antlib.xml"/>
            </fileset>
        </jar>

        <!-- 
             For Java Web Start support, bundle the dtds and schemas with the JWS acc jar and sign it.
             the first two filesets support commons com.sun.enterprise.deployment.node.SaxParserHandlerBundled
             which is used in parsing deployment descriptors in the downloaded app client.
             The third supports the config parsing of the sun-acc.xml file
        -->
 
        
        <jar jarfile="${appserv-jwsacc.jar}" manifest="appserv-jwsacc.mf" update="yes">
            <fileset dir="${dtds.dir}/../">
                <include name="dtds/*.dtd"/>
            </fileset>
            <fileset dir="${schemas.dir}/..">
                <include name="schemas/*.dtd"/>
                <include name="schemas/*.xsd"/>
            </fileset>
            <fileset dir="${dtds.dir}">
                <include name="sun-application-client-container*.dtd"/>
            </fileset>
        </jar>
        
         <!-- end of Java Web Start sequence -->
                
    </target>

    <!-- publish-dtds -->
    <target name="publish-dtds" depends="init"
            description="Copy the DTDs according to their EntityResolver names">

	<!-- For now, tomcat needs to DTD bundled -->
        <copy todir="${component.classes.dir}/javax/servlet/resources">
            <fileset dir="${dtds.dir}">
                <include name="web-app_*.dtd"/>
            </fileset>
        </copy>
        <copy todir="${component.classes.dir}/javax/servlet/jsp/resources">
            <fileset dir="${dtds.dir}">
                <include name="web-jsptag*.dtd"/>
            </fileset>
        </copy>

        <copy todir="${component.classes.dir}">
            <fileset dir="${dtds.dir}">
                <include name="sun-application-client-container_1_0.dtd"/>
                <include name="sun-application-client-container_1_1.dtd"/>
                <include name="sun-application-client-container_1_2.dtd"/>
            </fileset>
        </copy>

        <!-- j2ee DTD resources -->
        <copy todir="${glassfish.dtds.home}">
            <fileset dir="${dtds.dir}" excludes="README">
                <exclude name="sun_*.dtd"/>
            </fileset>
        </copy>

        <!-- j2ee XSD resources -->
        <copy todir="${glassfish.schemas.home}">
            <fileset dir="${schemas.dir}">
                <include name="*.*"/>
            </fileset>
        </copy>

        <!-- runtime DTD resources -->
        <copy todir="${glassfish.dtds.home}">
            <fileset dir="${dtds.dir}" excludes="README">
                <include name="sun_*.dtd"/>
            </fileset>
        </copy>

    </target>

<!-- 
schema2beans dependent tasks - only need to generate beans when schema2beans changes
-->

<property name="config.gen.dir" value="../admin-core/config-api/internal/config_gen"/>
<property name="formatter.class" value="s2b.FormatDtd"/>
<property name="formatter.jar" value="${config.gen.dir}/dtdformatter.jar"/>
<property name="input.dtd" value="dtds/sun-application-client-container_1_2.dtd"/>
<property name="output.dtd" value="output.dtd"/>

  <target name="cleanDtd">
    <java fork="true" classname="${formatter.class}" failonerror="true">
      <arg line="${input.dtd} ${output.dtd}"/>
        <classpath>
                <pathelement location="${formatter.jar}"/>
                <pathelement location="/schema2beans/schema2beansdev.jar"/>
                <pathelement location="/schema2beans/schema2beans.jar"/>
        </classpath>
    </java>
   </target>

<property name="generator.class" value="org.netbeans.modules.schema2beansdev.GenBeans"/>
<property name="generator.jar" value="${config.gen.dir}/s2b.jar"/>
<property name="primaryKeys" value="primaryKey.properties"/>
<property name="package" value="com.sun.enterprise.config.clientbeans"/>
<property name="extratags" value="extratags"/>

  <target name="genBeans" depends="cleanDtd" unless="genBeans.not.required">
    <java fork="true" classname="${generator.class}" failonerror="true">
      <arg line="-f ${output.dtd} -p ${package} -r ${src.dir}"/>
        <classpath>
                <pathelement location="${generator.jar}"/>
                <pathelement location="/schema2beans/schema2beansdev.jar"/>
                <pathelement location="/schema2beans/schema2beans.jar"/>
        </classpath>
      <sysproperty key="listofpks" value="${primaryKeys}"/>
      <sysproperty key="servertagname" value="ClientTags"/>
      <sysproperty key="extratags" value="${extratags}"/>
    </java>
    <delete file="${output.dtd}"/>
  </target>

  <target name="tools.init">
      <condition property="windows">
          <os family="windows" />
      </condition>
      <condition property="unix">
          <os family="unix" />
      </condition>
      <condition property="solaris">
          <os name="SunOS"/>
      </condition>
      <condition property="linux">
          <os name="Linux"/>
      </condition>
      <condition property="mac">
          <os name="Mac OS X"/>
      </condition>
</target>
  <target name="tools.init.windows" if="windows">
    <property name="JAVAH" value="${java.home}/../bin/javah.exe"/>
    <property name="MAKE" value="gmake"/>
</target>
<target name="tools.init.unix" if="unix" unless="mac">
    <property name="JAVAH" value="${java.home}/../bin/javah"/>
    <property name="MAKE" value="gmake"/>
</target>
    <target name="tools.init.mac" if="mac">
    <property name="JAVAH" value="${java.home}/bin/javah"/>
    <property name="MAKE" value="make"/>
</target>
<target name="tools.init.platform" 
    depends="tools.init, tools.init.windows, tools.init.unix, tools.init.mac">
</target>

  </project>
