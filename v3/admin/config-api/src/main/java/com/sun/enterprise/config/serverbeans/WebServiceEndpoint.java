//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-04/12/2007 12:08 AM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.24 at 01:25:15 PM PDT 
//


package com.sun.enterprise.config.serverbeans;

import org.jvnet.hk2.config.Attribute;
import org.jvnet.hk2.config.Configured;
import org.jvnet.hk2.config.Element;

import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


/**
 *
 */

/* @XmlType(name = "", propOrder = {
    "registryLocation",
    "transformationRule"
}) */
@Configured
public class WebServiceEndpoint
        implements Serializable {

	final transient private VetoableChangeSupport support = new VetoableChangeSupport(this);

    private final static long serialVersionUID = 1L;
    @Attribute(required = true)

    protected String name;
    @Attribute

    protected String monitoring;
    @Attribute

    protected String maxHistorySize;
    @Attribute

    protected String jbiEnabled;
    @Element
    protected List<RegistryLocation> registryLocation = new ConstrainedList<RegistryLocation>("registryLocation", support);
    @Element
    protected List<TransformationRule> transformationRule = new ConstrainedList<TransformationRule>("transformationRule", support);



    /**
     * Gets the value of the name property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setName(String value) {
        try {
            support.fireVetoableChange("name", this.name, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.name = value;
    }

    /**
     * Gets the value of the monitoring property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getMonitoring() {
        if (monitoring == null) {
            return "OFF";
        } else {
            return monitoring;
        }
    }

    /**
     * Sets the value of the monitoring property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setMonitoring(String value) {
        try {
            support.fireVetoableChange("monitoring", this.monitoring, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.monitoring = value;
    }

    /**
     * Gets the value of the maxHistorySize property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getMaxHistorySize() {
        if (maxHistorySize == null) {
            return "25";
        } else {
            return maxHistorySize;
        }
    }

    /**
     * Sets the value of the maxHistorySize property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setMaxHistorySize(String value) {
        try {
            support.fireVetoableChange("maxHistorySize", this.maxHistorySize, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.maxHistorySize = value;
    }

    /**
     * Gets the value of the jbiEnabled property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getJbiEnabled() {
        if (jbiEnabled == null) {
            return "false";
        } else {
            return jbiEnabled;
        }
    }

    /**
     * Sets the value of the jbiEnabled property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setJbiEnabled(String value) {
        try {
            support.fireVetoableChange("jbiEnabled", this.jbiEnabled, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.jbiEnabled = value;
    }

    /**
     * Gets the value of the registryLocation property.
     * <p/>
     * <p/>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the registryLocation property.
     * <p/>
     * <p/>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRegistryLocation().add(newItem);
     * </pre>
     * <p/>
     * <p/>
     * <p/>
     * Objects of the following type(s) are allowed in the list
     * {@link RegistryLocation }
     */
    public List<RegistryLocation> getRegistryLocation() {
        return this.registryLocation;
    }

    /**
     * Gets the value of the transformationRule property.
     * <p/>
     * <p/>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the transformationRule property.
     * <p/>
     * <p/>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTransformationRule().add(newItem);
     * </pre>
     * <p/>
     * <p/>
     * <p/>
     * Objects of the following type(s) are allowed in the list
     * {@link TransformationRule }
     */
    public List<TransformationRule> getTransformationRule() {
        return this.transformationRule;
    }

    public void addVetoableChangeListener(VetoableChangeListener param0) {
        support.addVetoableChangeListener(param0);
    }

    public void addVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.addVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.removeVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(VetoableChangeListener param0) {
        support.removeVetoableChangeListener(param0);
    }

}
