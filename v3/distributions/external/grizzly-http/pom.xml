<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/* 
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. 
* 
* Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved. 
* 
* The contents of this file are subject to the terms of either the GNU 
* General Public License Version 2 only ("GPL") or the Common Development 
* and Distribution License("CDDL") (collectively, the "License").  You 
* may not use this file except in compliance with the License. You can obtain 
* a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html 
* or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific 
* language governing permissions and limitations under the License. 
* 
* When distributing the software, include this License Header Notice in each 
* file and include the License file at glassfish/bootstrap/legal/LICENSE.txt. 
* Sun designates this particular file as subject to the "Classpath" exception 
* as provided by Sun in the GPL Version 2 section of the License file that 
* accompanied this code.  If applicable, add the following below the License 
* Header, with the fields enclosed by brackets [] replaced by your own 
* identifying information: "Portions Copyrighted [year] 
* [name of copyright owner]" 
* 
* Contributor(s): 
* 
* If you wish your version of this file to be governed by only the CDDL or 
* only the GPL Version 2, indicate your decision by adding "[Contributor] 
* elects to include this software in this distribution under the [CDDL or GPL 
* Version 2] license."  If you don't indicate a single choice of license, a 
* recipient has the option to distribute your version of this file under 
* either the CDDL, the GPL Version 2 or to extend the choice of license to 
* its licensees as provided above.  However, if you add GPL Version 2 code 
* and therefore, elected the GPL Version 2 license, then the option applies 
* only if the new code is made subject to such option by the copyright 
* holder. 
*/ 
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.glassfish.external</groupId>
        <artifactId>external</artifactId>
        <version>10.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>grizzly-module</artifactId>
    <!-- Don't change packaging to bundle as there are issues
         using both hk2 and bundle plugin -->
    <packaging>jar</packaging>
    <name>grizzly-http repackaged as HK2 and OSGi bundle</name>
    <description>Grizzly HTTP/Comet Module for GlassFish v3</description>
    <properties>
        <!-- When you change the following property, please change grizzly.package-version as well -->
        <grizzly.original-version>1.8.6</grizzly.original-version>    
        <!-- A version string like 1.8.6-RC2 is treated differently by OSGi, hence
             we map it manually -->
        <grizzly.package-version>1.8.6</grizzly.package-version>    
    </properties>      
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <!-- embed all first level dependencies with groupId=com.sun.grizzly.
                        -->
                        <Embed-Dependency>
                            *;groupId=com.sun.grizzly;inline=true
                        </Embed-Dependency>
                        <Export-Package>com.sun.grizzly.*; version=${grizzly.original-version};-split-package:=merge-first</Export-Package>
                        <!-- Import everything but this. This is a temporary
                             change needed until we separate comet stuff
                             to grizzly-optionals module. Remove this after
                             tp2 branch is merged.
                        -->
                        <Import-Package>*</Import-Package>
                        <!-- Package everything from the embedded jar in the final bundle -->
                        <_exportcontents>*</_exportcontents>
                        <!-- !* matches with nothing, so no other class will be included in this bundle,
                         other than what is specified above -->
                        <Private-Package>!*</Private-Package>
                        <!-- Make it an HK2 module, as GlassFish needs it to be HK2 module.
                         This is needed because we don't want to change the packaging type to
                         hk2-jar. -->
                        <HK2-Bundle-Name>${pom.groupId}:${pom.artifactId}</HK2-Bundle-Name>
                    </instructions>
                    <!-- Maven uses the output directory (target/classes)
                    rather than the final bundle, when compiling against
                    projects in the same reactor (ie. the same build).
                    Since this jar is assembled out of multiple jars and
                    we mark those dependencies as "optional,"
                    we need to unpack the classes.
                    -->
                    <unpackBundle>true</unpackBundle>
                </configuration>
                <!-- We don't use extensions as this interfers with
                     hk2-maven-plugin and that results in hk2 artifacts
                     being copied as .hk2-jar. Instead, we configure the
                     plugin to run as part of package phase -->
                <executions>
                    <execution>
                        <id>osgi-bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                  create source jar by repackaging individual sources jars. We really need to better automate this,
                  along with maven-bundle-plugin invocation.
                 -->
                <groupId>org.jvnet.maven-antrun-extended-plugin</groupId>
                <artifactId>maven-antrun-extended-plugin</artifactId>
                <configuration>
                    <tasks>
                        <resolveAll todir="target/source-jars" classifier="sources">
                            <fullGraph />
                            <groupId value="com.sun.grizzly" />
                        </resolveAll>
                        <zip destfile="target/${pom.artifactId}-${pom.version}-sources.jar">
                            <zipgroupfileset dir="target/source-jars" includes="*.jar" />
                        </zip>
                    </tasks>
                </configuration>
              <executions>
                  <execution>
                      <!-- executes after source:jar executes in the package phase -->
                      <phase>verify</phase>
                      <goals>
                          <goal>run</goal>
                      </goals>
                  </execution>
              </executions>
            </plugin>
        </plugins>
    </build>
    <developers>
        <developer>
            <id>jfarcand/</id>
            <name>Jean Francois Arcand</name>
            <url>http://weblogs.java.net/blog/jfarcand/</url>
            <organization>Sun Microsystems, Inc.</organization>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>oleksiys</id>
            <name>Oleksiy Stashok</name>
            <url>http://blogs.sun.com/dochez</url>
            <organization>Sun Microsystems, Inc.</organization>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <!-- author of this pom.xml to a certain extent -->
            <id>ss141213</id>
            <name>Sahoo</name>
            <organization>Sun Microsystems, Inc.</organization>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>
    <dependencies>
        <dependency>
            <groupId>com.sun.grizzly</groupId>
            <artifactId>grizzly-http</artifactId>
            <version>${grizzly.original-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.grizzly</groupId>
            <artifactId>grizzly-portunif</artifactId>
            <version>${grizzly.original-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.grizzly</groupId>
            <artifactId>grizzly-rcm</artifactId>
            <version>${grizzly.original-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.grizzly</groupId>
            <artifactId>grizzly-http-utils</artifactId>
            <version>${grizzly.original-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.grizzly</groupId>
            <artifactId>grizzly-framework</artifactId>
            <version>${grizzly.original-version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
