J2EE.cannot_load_resources=RAR5003:Error loading J2EE resource file
xaresource.recover_error=RAR5004:Error in XA recovery. See logs for more details.
RAR5004.diag.cause.1=Jdbc driver threw an exception while recovery.
RAR5004.diag.cause.2=Resource Adapter threw an exception while recovery in case of connectors.
RAR5004.diag.check.1=Check database or EIS log for details.
RAR5004.diag.check.2=Check whether the connection pool configuration is proper.
RAR5004.diag.check.3=Check whether domain.xml is accessible.
datasource.xadatasource_error=RAR5005:Error in accessing XA resource with JNDI name [{0}] for recovery
RAR5005.diag.cause.1=The XA resource has been deleted before attempting recovery
RAR5005.diag.cause.2=The XA resource is no longer referenced in the domain.xml
RAR5005.diag.cause.3=The database server that the XA resource points to is no longer running
RAR5005.diag.cause.4=The configuration information for the XA Resource has been changed before attempting recovery
RAR5005.diag.check.1=Check that the XA Resource and the pool it points to is still defined in the domain.xml
RAR5005.diag.check.2=Check that the XA Resource is present in the list of resource-refs in the domain.xml
RAR5005.diag.check.3=Check that the Database server is up and running
RAR5005.diag.check.4=Check if the config info of the XA resource and the pool it points to is sane. In particular check that the datasourceclassname in the pool is correct and the XA resource points to the correct pool
datasource.xadatasource_error_excp=RAR5042:Error in accessing XA resource for recovery
RAR5042.diag.cause.1=The XA resource has been deleted before attempting recovery
RAR5042.diag.cause.2=The XA resource is no longer referenced in the domain.xml
RAR5042.diag.cause.3=The database server that the XA resource points to is no longer running
RAR5042.diag.cause.4=The configuration information for the XA Resource has been changed before attempting recovery
RAR5042.diag.check.1=Check that the XA Resource and the pool it points to is still defined in the domain.xml
RAR5042.diag.check.2=Check that the XA Resource is present in the list of resource-refs in the domain.xml
RAR5042.diag.check.3=Check that the Database server is up and running
RAR5042.diag.check.4=Check if the config info of the XA resource and the pool it points to is sane. In particular check that the datasourceclassname in the pool is correct and the XA resource points to the correct pool
poolmgr.datasource_error=RAR5007:Error in creating data source object: [{0}]
RAR5007.diag.cause.1=Exception while creating persistent manager resource.
RAR5007.diag.check.1=Check whether the persistent manager factory class is configured properly and is available in the classpath.
RAR5007.diag.check.2=Check whether the jdbc resource name is correct and is configured properly.
poolmgr.datasource_error_excp=RAR5043:Error in creating data source object:
RAR5043.diag.cause.1=Exception while creating persistent manager resource.
RAR5043.diag.check.1=Check whether the persistent manager factory class is configured properly and is available in the classpath.
RAR5043.diag.check.2=Check whether the jdbc resource name is correct and is configured properly.
customrsrc.create_ref_error=RAR5008:Error in creating a naming Reference for custom resource [{0}]
RAR5008.diag.cause.1=Naming provider and port are not set in the initial context
RAR5008.diag.cause.2=The Naming provider is not up
RAR5008.diag.check.1=Check the jndi.properties file has the naming provider host and port specified
RAR5008.diag.check.2=Check if the naming provider is up and listening on the port specified in the domain.xml
customrsrc.create_ref_error_excp=RAR5045:Error in creating a naming Reference for custom resource
RAR5045.diag.cause.1=Naming provider and port are not set in the jndi provider's property file
RAR5045.diag.cause.2=The Naming provider is not up
RAR5045.diag.check.1=Check the jndi.properties file has the naming provider host and port specified
RAR5045.diag.check.2=Check if the naming provider is up and listening on the port specified in the domain.xml
jndi.factory_load_error=RAR5009:Cannot load external-jndi-resource factory-class '[{0}]'
RAR5009.diag.cause.1=Could not create an instance of factory-class.
RAR5009.diag.check.1=Make sure that factory-class name is configured correctly.
RAR5009.diag.check.2=Make sure that factory-class is available in the classpath of the application server
jndi.factory_class_unexpected=RAR5010:external-jndi-resource factory-class '[{0}]' must be of type javax.naming.spi.InitialContextFactory
RAR5010.diag.cause.1=External JNDI resource has a worng factory-class configuration
RAR5010.diag.check.1=Verify that factory class is an instance of javax.naming.spi.InitialContextFactory
jndi.initial_context_error=RAR5011:Exception thrown creating initial context for external JNDI factory '[{0}]'
RAR5011.diag.cause.1=Could not create Initial Context.
RAR5011.diag.check.1=Make sure that the external-jndi-resource configuration is sufficient to create an initial context.
jndi.initial_context_error_excp=RAR5047:Exception thrown creating initial context for external JNDI factory [{0}]
RAR5047.diag.cause.1=Could not create Initial Context.
RAR5047.diag.check.1=Make sure that the external-jndi-resource configuration is sufficient to create an initial context.
jndi.factory_create_error=RAR5012:Cannot create external-jndi-resource factory-class '[{0}]'
RAR5012.diag.cause.1=Could not create Initial context factory.
RAR5012.diag.check.1=Make sure that the external-jndi-resource configuration is sufficient to create an initial context factory
jndi.factory_install_error=RAR5013:Error in installing connection factories
poolmgr.load_error=RAR5014:Cannot load class [{0}].
classloader.load_class_fail=RAR5015:Unexpected exception in loading class [{0}] by classloader
RAR5015.diag.cause.1=Classpath is not propertly set in the domain.xml
RAR5015.diag.cause.2=The application server process does not have read permissions on the directory that holds the classes/jar
RAR5015.diag.check.2=You do not have read permissions on the directory that holds the classes/jar
RAR5015.diag.check.1=Check that the classpath attribure in the java-config includes a reference to the jar/package directory for the class
classloader.load_class_fail_excp=RAR5046:Unexpected exception in loading class by classloader [{0}]
RAR5046.diag.cause.1=Classpath is not propertly set in the domain.xml
RAR5046.diag.cause.2=You do not have read permissions on the directory that holds the classes/jar
RAR5046.diag.check.1=Check that the classpath attribure in the java-config includes a reference to the jar/package directory for the class
RAR5046.diag.check.2=Check that the directory where the classes/jars reside have read permission for the application server process
poolmgr.config_access_error=RAR5016:Error accessing configuration file.
jndi.connection_cannot_get=RAR5017:Cannot locate connection descriptor by name
jndi.connection_create_error=RAR5018:Cannot create connection factory
rsrc.file_create_error=RAR5019:Unexpected exception in creating new file
jndi.persistence_manager_config=RAR5020:Error in Persistence Manager Settings [{0}]
RAR5020.diag.cause.1=Could not configure persistent manager resource properly.
RAR5020.diag.check.1=Make sure that the Jdbc resource name, you have configured is correct
RAR5020.diag.check.2=Check whether the perstenst manager factory class is proper.
RAR5020.diag.check.3=Check whether the perstenst manager factory class has a setConnectionFactoryName method.
jndi.persistence_manager_config_excp=RAR5044:Error in Persistence Manager Settings
RAR5044.diag.cause.1=Could not configure persistent manager resource properly.
RAR5044.diag.check.1=Make sure that the Jdbc resource name, you have configured is correct
RAR5044.diag.check.2=Check whether the perstenst manager factory class is proper.
RAR5044.diag.check.3=Check whether the perstenst manager factory class has a setConnectionFactoryName method.
poolmgr.resource_adapter_error=RAR5021:Error in installing resource adapters
jndi.bind_error=RAR5022:Error in binding to JNDI namespace
jndi.remove_connection_factory_error=RAR5023:Error removing connection factory
J2EE.add_resource_error=RAR5024:Error adding J2EE resource
J2EE.remove_resource_error=RAR5025:Error removing J2EE resource
poolmgr.complete_transaction_error=RAR5026:Failed to complete transaction.Error Message: [{0}].
RAR5026.diag.cause.1=Internal error while completing the transaction.
poolmgr.unexpected_exception=RAR5027:Unexpected exception in resource pooling 
RAR5027.diag.cause.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
poolmgr.component_register_exception=RAR5029:Unexpected exception while registering component 
RAR5029.diag.cause.1=Internal error while registering the resource to the transaction.
poolmgr.sync_register_exception=RAR5030:Unexpected exception while registering synchronization
RAR5030.diag.cause.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
poolmgr.system_exception=RAR5031:System Exception
RAR5031.diag.cause.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
poolmgr.resource_return_error=RAR5032:Unexpected exception while returning resource to pool
poolmgr.assert_exception=RAR5033:ASSERT FAILED!!!
poolmgr.pool_resize_error=RAR5034:Failed to resize pools
poolmgr.destroy_resource_failed=RAR5035:Unexpected exception while destroying resource. To get exception stack, please change log level to FINE.
RAR5035.diag.cause.1=Error while closing the physical connection.
RAR5035.diag.cause.2=Error while destroying the connector managed connection.
RAR5035.diag.check.1=Examine the exception stack trace for details.
poolmgr.no_resource_reference=RAR5036:Resource reference is not defined for JNDI name [{0}]
poolmgr.password_info_warning=RAR5037:Username/password not specified for resource reference [{0}]. Defaulting to one in the pool.
poolmgr.create_resource_error=RAR5038:Unexpected exception while creating resource
RAR5038.diag.cause.1=Could not create a physical connection.
RAR5038.diag.check.1=Connection pool is configured incorrectly.
RAR5038.diag.check.2=Database is running properly.
RAR5038.diag.check.3=EIS (in case of connectors) is running properly.
RAR5038.diag.check.4=SJS MQ (in case of JMS) is running properly.
RAR5038.diag.check.5=Network connection to Database/EIS/MQ is proper.
jdbc.config_error=RAR5048:Error in configuring JDBC resource
RAR5048.diag.cause.1=The configuration for the JDBC resource could not be read from the domain.xml
RAR5048.diag.cause.2=This is an internal server error. Please contact Sun Microsystems with the complete error log
RAR5408.diag.check.1=Check if the JDBC resource being accessed is present in the domain.xml
RAR5408.diag.check.2=Please contact Sun Microsystems with the complete error log
jdbc.mbean_register=RAR5051:Jdbc pool monitoring bean registration failure
jdbc.name_lookup_failed=RAR5052:Failed to look up connection pool resource name
poolmgr.invalid_connection=RAR5053:underlying connection not valid
rsrc.missing_parameter_in_file=RAR5055:Missing parameter in properties file [{0}].
resource_pool.resize_pool_error=RAR5058: Error while Resizing pool {0}. Exception : {1}
RAR5058.diag.cause.1=Could not create physical connection during connection pool resizing.
RAR5058.diag.check.1=Check your database/ EIS logs for possible connection creation errors.
RAR5058.diag.check.2=Check whether your network connection to the database or EIS is proper.
jdbc.binding=RAR5059: Binding [JDBC DataSource Name: {0}, Pool Name: {1}]
jdbc.install_resources=RAR5060: Install JDBC Datasources ...
jdbc.exc_caught_ign=RAR5061 : Exception caught and ignored : {0}
jdbc.exc_get_local_tx=RAR5062 : Exception caught while getting Local Transaction
jdbc.exc_close=RAR5062 : Exception while closing connection
jdbc.exc_create_xa=RAR5063 : Exception while creating XADataSource :{0}
RAR6034.diag.cause.1=Resource Adapter Name of the admin object configuration is wrong
RAR6034.diag.check.1=Check whether the resource adapter is deployed.
RAR5063.diag.cause.1=The class specified in datasourceclassname attribute in the jdbc-connection-pool is not of type javax.sql.XADataSource. Please consult your database vendor's documentation to identify the class that implements the javax.sql.XADataSource
RAR5063.diag.check.1=Check if the datasourceclass implements the javax.sql.XADataSource interface. Try using the javap tool for this purpose
jdbc.exc_create_ds=RAR5065 : Exception while creating DataSource Object :{0}
RAR5065.diag.cause.1=The class specified in datasourceclassname attribute in the jdbc-connection-pool is not of type javax.sql.ConnectionPoolDataSource. Please consult your database vendor's documentation to identify the class that implements the javax.sql.ConnectionPoolDataSource
RAR5065.diag.check.1=Check if the datasourceclass implements the javax.sql.ConnectionPoolDataSource interface. Try using the javap tool for this purpose
jdbc.exc_create_ds_con=RAR5066 : Exception while getting pooled connection :{0}
RAR5066.diag.cause.1=The Database server is not up and running
RAR5066.diag.cause.2=The connection pool is full and cannot allocate more connections
RAR5066.diag.cause.3=The Database server threw some unexpected exception. Please study the exception message for more details
jdbc.exc_create_xa_con=RAR5067 : Exception while getting XA Connection : {0}
jdbc.exc_iter=RAR5068 : No such element in connection set
RAR5068.diag.cause.1=There are no managed connections in the connection pool at this time
RAR5068.diag.cause.2=There is an internal server error. Please contact Sun Microsystems with the complete log message
RAR5068.diag.check.1=This is an internal server error. Please contact Sun Microsystems with the complete error log
RAR5068.diag.check.2=This is an internal server error. Please contact Sun Microsystems with the complete error log
jdbc.exc_eis_prodname=RAR5069 : Exception while fetching EIS Product name :{0}
RAR5069.diag.cause.1=The Connection object is now invalid due to database restart
RAR5069.diag.cause.2=The connection object is now invalid since the database is not up and running
RAR5069.diag.cause.3=The JDBC driver cannot provide the required information due to internal error
RAR5069.diag.check.1=Switch on the connection validation property of the connection pool and try again
RAR5069.diag.check.2=If the database has restarted, restart the application server as well or set the connection validation property in the pool to avoid this in the future. If the database server is not up, please bring it up
RAR5069.diag.check.3=Check the server log and please contact Sun Microsystems with the complete error log
jdbc.exc_eis_prodvers=RAR5070 : Exception while fetching EIS Product version :{0}
RAR5070.diag.cause.1=The Connection object is now invalid due to database restart
RAR5070.diag.cause.2=The connection object is now invalid since the database is not up and running
RAR5070.diag.cause.3=The JDBC driver cannot provide the required information due to internal error
RAR5070.diag.check.1=Switch on the connection validation property of the connection pool and try again
RAR5070.diag.check.2=If the database has restarted, restart the application server as well or set the connection validation property in the pool to avoid this in the future. If the database server is not up, please bring it up
RAR5070.diag.check.3=Check the server log and please contact Sun Microsystems with the complete error log
jdbc.exc_cci_constr=RAR5071 : Exception creating CciInteraction object
jdbc.exc_clr_wrn=RAR5072 : Exception while clearing warnings from Statement object
jdbc.exc_get_wrn=RAR5073 : Exception while getting warnings from Statement object
jdbc.exc_table_validation=RAR5074 : Table based validation detected invalid connection. Querying the table {0} failed. Set resource-adapter log-level to FINE for exception stack trace. 
RAR5074.diag.cause.1=The Connection object is now invalid due to database restart
RAR5074.diag.cause.2=The connection object is now invalid since the database is not up and running
RAR5074.diag.cause.3=The JDBC driver cannot excute the statement due to internal error
RAR5074.diag.check.1=Switch on the connection validation property of the connection pool and try again
RAR5074.diag.check.2=If the database has restarted, restart the application server as well or set the connection validation property in the pool to avoid this in the future. If the database server is not up, please bring it up
RAR5074.diag.check.3=Check the server log and please contact Sun Microsystems with the complete error log
jdbc.exc_setup_stmt=RAR5075 : Exception while setting up Statement according to Spec
jdbc.exc_prepare_stmt=RAR5076 : Exception while preparing statement
jdbc.exc_close_stmt=RAR5077 : Exception while closing statement
jdbc.exc_beg_local_tx=RAR5078 : Exception while beginning local transaction
jdbc.exc_commit_local_tx=RAR5079 : Exception while commiting local transaction
jdbc.exc_commit_xa=RAR5080 : Exception while commiting xa transaction
jdbc.exc_rolbk_local_tx=RAR5081 : Exception while rolling back local transaction
jdbc.exc_cci_mc_constr=RAR5082 : Exception while creating CciManagedConnection
jdbc.exc_destroy=RAR5083 : Exception while destroying physical connection
jdbc.exc_physical_conn=RAR5084 : Exception while creating physical connection
jdbc.exc_get_xa=RAR5085 : Exception while getting XA resource
jdbc.exc_Cci_mc_md=RAR5086 : Exception creating CciManagedConnectionMetaData
jdbc.exc_eis_maxconn=RAR5087 : Exception while querying the EIS for max connections
RAR5087.diag.cause.1=The Connection object is now invalid due to database restart
RAR5087.diag.cause.2=The connection object is now invalid since the database is not up and running
RAR5087.diag.cause.3=The JDBC driver cannot provide the required information due to internal error
RAR5087.diag.check.1=Switch on the connection validation property of the connection pool and try again
RAR5087.diag.check.2=If the database has restarted, restart the application server as well or set the connection validation property in the pool to avoid this in the future. If the database server is not up, please bring it up
RAR5087.diag.check.3=Check the server log and please contact Sun Microsystems with the complete error log
jdbc.exc_del_det=RAR5088 : Exception while checking if ResultSet can detect deletes
jdbc.exc_upd_det=RAR5089 : Exception while checking if ResultSet can detect updates
jdbc.exc_other_del_det=RAR5090 : Exception while checking if ResultSet can detect other deletes
jdbc.exc_del_insert=RAR5091 : Exception while checking if ResultSet can detect inserts
jdbc.exc_other_updates=RAR5092 : Exception while checking if ResultSet can detect other updates
jdbc.exc_own_updates=RAR5093 : Exception while checking if ResultSet can detect own updates
jdbc.exc_other_ins=RAR5094 : Exception while checking if ResultSet can detect other inserts
jdbc.exc_own_ins=RAR5095 : Exception while checking if ResultSet can detect own inserts
jdbc.exc_own_deletes=RAR5096 : Exception while checking if ResultSet can detect own deletes
jdbc.exc_rs_con=RAR5097 : Exception while checking if RA supports concurrency in combo with give RS
jdbc.exc_rs_type=RAR5098 : Exception while checking if RA supports a type of RS
jdbc.exc_cnfe_ds=RAR5099 : Wrong class name or classpath for Datasource Object 
RAR5099.diag.cause.1=Classpath is not propertly set in the domain.xml
RAR5099.diag.cause.2=The application server process does not have read permissions on the directory that holds the classes/jar
RAR5099.diag.check.1=Check if the server classpath specified in the java-config element in the domain.xml has an entry for the jar containing this class
RAR5099.diag.check.2=Check that the directory where the classes/jars reside have read permission for the application server process
jdbc.exc_cnfe=RAR5100 : Wrong class name or classpath for {0} 
RAR5100.diag.cause.1=Classpath is not propertly set in the domain.xml
RAR5100.diag.cause.2=The application server process does not have read permissions on the directory that holds the classes/jar
RAR5100.diag.check.1=Check if the server classpath specified in the java-config element in the domain.xml has an entry for the jar containing this class
RAR5100.diag.check.2=Check that the directory where the classes/jars reside have read permission for the application server process
jdbc.exc_inst=RAR5101 : Exception while instantiating {0}
RAR5101.diag.cause.1=The appserver process does not have read access to the directory where this class resides
RAR5101.diag.cause.2=The application server process does not have security permissions to access this code
RAR5101.diag.check.1=Check if the application server has read permissions on the directory where this class/jar containing this class resides
RAR5101.diag.check.2=Check if your security manager policy is configured properly
jdbc.exc_acc_inst=RAR5102 : Access error while instantiating {0}
RAR5102.diag.cause.1=The application server process do not have permission to access the code base where the class resides
RAR5102.diag.cause.2=This is an internal server/JVM error. Please contact Sun Microsystems with the complete error log
RAR5102.diag.check.1=See if the application server process has permission to read the directory where the class/jar resides
RAR5102.diag.check.2=Check if all relevant JVM patches are installed on your machine. Please contact Sun Microsystems with the complete error log
jdbc.exc_jb_val=RAR5103 : Error setting java bean value : {0}
RAR5103.diag.cause.1=The pool parameters in the domain.xml are improper.
RAR5103.diag.cause.2=The application server process does not have enough permissions to access the DataSource class
RAR5103.diag.check.1=Check that the pool parameters specified in the domain.xml are correct. For example check that parameters that expect numeric values are numerals
RAR5103.diag.check.2=Check that the application server process has permissions to read the directory where the class resides
jdbc.exc_nfe=RAR5104 : Not a valid type for this method : {0}
RAR5104.diag.cause.1=The pool parameters in the domain.xml are improper.
RAR5104.diag.check.1=Check that the pool parameters specified in the domain.xml are correct. For example check that parameters that expect numeric values are numerals
jdbc.exc_re=RAR5105 : Connection Error Occured : {0}
RAR5105.diag.cause.1=The connection validation method is incorrect, it should be one of auto-commit, meta-data, table
RAR5105.diag.cause.2=The connection is no longer valid. It could have been rendered invalid due to database restart/shutdown
RAR5105.diag.check.1=Check if the connection validation is one of : auto-commit, meta-data or table. If the method is table, check that the table name is correct.
RAR5105.diag.check.2=If the database has been restarted, restart the application server as well. If the database is down, start it up
jdbc.exc_autocommit_validation=RAR5106 : AutoCommit based validation detected invalid connection. Set resource-adapter log-level to FINE for exception stack trace
RAR5106.diag.cause.1=Database server is not up thus rendering the connection invalid
RAR5106.diag.cause.2=The JDBC driver is unable to provide the autocommit status of the connection due to an internal error
RAR5106.diag.check.1=Check if the database server is up and running
RAR5106.diag.check.2=This is an internal error. Please contact Sun Microsystems with the complete error log
jdbc.exc_metadata_validation=RAR5107 : Meta-Data based validation detected invalid connection. Set resource-adapter log-level to FINE for exception stack trace 
RAR5107.diag.cause.1=The connection is invalid due to a database restart
RAR5107.diag.cause.2=The connection is invalid due to a database shutdown
RAR5107.diag.cause.3=The JDBC driver cannot provide the connection's metadata information due to an internal error
RAR5107.diag.check.1=If the database has been restarted, restart the appserver as well. To avoid this in the future set the connection validation property in the pool
RAR5107.diag.check.2=Check that the database is up and running
jdbc.exc_get_tx_iso=RAR5108 : Error while getting transaction isolation level :{0}
RAR5108.diag.cause.1=The connection is invalid due to database restart/shutdown
RAR5108.diag.cause.2=The JDBC driver cannot provide the transaction isolation level due to an internal error
RAR5108.diag.check.1=Please bring up the database if not up already. Check if the connection validation pool property is set, else set this property if the database server will be restarted in the future.
jdbc.exc_tx_iso=RAR5109 : Error while setting transaction isolation level
RAR5109.diag.cause.1=Jdbc driver has thrown an SQLException while setting the isolation level.
RAR5109.diag.check.1=Check your connection pool configuration and make sure that the isolationlevel is correct
RAR5109.diag.check.2=Check whether your driver supports the isolation level you have specified in the connection pool.
jdbc.exc_create_mc=RAR5110 : Error creating managed Connection with user and password : {0}
RAR5110.diag.cause.1=The URL specified is incorrect
RAR5110.diag.cause.2=The database server is not up and running
RAR5110.diag.check.1=Check if the URL specified in the getConnection call is correct. Consult the JDBC driver vendor's documentation for the correct URL format.
RAR5110.diag.check.2=Check that the Database server is up and running
jdbc.exc_cce=RAR5111 : Error casting to javax.sql.Datasource :{0}
RAR5111.diag.cause.1=The class specified in datasourceclassname attribute in the jdbc-connection-pool is not of type javax.sql.DataSource. Please consult your database vendor's documentation to identify the class that implements the javax.sql.DataSource
RAR5111.diag.check.1=Check if the datasourceclass implements the javax.sql.DataSource interface. Try using the javap tool for this purpose
jdbc.exc_cce_XA=RAR5112 : Error casting to javax.sql.XADatasource : {0}
RAR5112.diag.cause.1=The class specified in datasourceclassname attribute in the jdbc-connection-pool is not of type javax.sql.XADataSource. Please consult your database vendor's documentation to identify the class that implements the javax.sql.XADataSource
RAR5112.diag.check.1=Check if the datasourceclass implements the javax.sql.XADataSource interface. Try using the javap tool for this purpose
jdbc.exc_create_conn=RAR5113 : Error creating connection from supplied information: Reason - {0}
RAR5113.diag.cause.1=The Database server is not up and running
RAR5113.diag.cause.2=The connection pool is full and cannot allocate more connections
RAR5113.diag.cause.3=The Database server threw some unexpected exception. Please study the exception message for more details
RAR5113.diag.check.1=Check that the Database server is up and running
RAR5113.diag.check.2=Check if the size of your connection pool is sufficiently large for serving all requests
RAR5113.diag.check.3=Check the server log and please contact Sun Microsystems with the full error log
jdbc.exc_get_conn=RAR5114 : Error allocating connection : [{0}]
RAR5114.diag.cause.1=There was an SQLException while acquiring connection from the Database. Please see the detailed exception mesasage for more information
RAR5114.diag.cause.2=The Connection pool is full and incapable of serving more requests at this point. Please try later.
RAR5114.diag.cause.3=There is an internal server error. Please contact Sun Microsystems with the complete log message
RAR5114.diag.check.1=Check if the database server is correctly configured
RAR5114.diag.check.2=Check if your pool size is sufficient to server all simultaneous connection requests
RAR5114.diag.check.3=Check the server log and contact Sun Microsystems with the complete error message
jdbc.exc_cleanup=RAR5115 : Error cleaning up handles associated with this ManagedConnection
jdbc.exc_create_xa_conn=RAR5116 : The XA connection could not be allocated: {0}
RAR5116.diag.cause.1=The Database server is not up and running
RAR5116.diag.cause.2=The connection pool is full and cannot allocate more connections
RAR5116.diag.cause.3=The Database server threw some unexpected exception. Please study the exception message for more details
RAR5116.diag.check.1=Check that the Database server is up and running
RAR5116.diag.check.2=Check if the size of your connection pool is sufficiently large for serving all requests
RAR5116.diag.check.3=Check the server log and please contact Sun Microsystems with the full error log
poolmgr.get_connection_failure=RAR5117 : Failed to obtain/create connection from connection pool [ {0} ]. Reason : {1}
RAR5117.diag.cause.1=Error while obtaining a connection from the pool.
RAR5117.diag.check.1=Check your connection pool configuration.
rardeployment.invalid_connector_desc=RAR6000 : Invalid  deployment descriptor - ra.xml. RarName is {0}
RAR6000.diag.cause.1=Illegal access Error while instantiating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean classes.
RAR6000.diag.check.1=Check whether the resource adapter have any specific security requirements..
rardeployment.class_not_found=RAR6001 : Class Not found : {0}
RAR6001.diag.cause.1=Error while locating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean classes.
RAR6001.diag.check.1=Resource adapter is bundled properly.
RAR6001.diag.check.2=Resource adapter jar file deployment descriptor specifies correct class names.
rardeployment.class_instantiation_error=RAR6002 : Could not instantiatiate class : {0}
RAR6002.diag.cause.1=Error while instantiating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean.
RAR6002.diag.check.1=Resource adapter is bundled properly with all the classes.
rardeployment.illegalaccess_error=RAR6003 : Could not access class : {0}
rardeployment.privilegedaction_error=RAR6004 : Privilaged action error : {0}
RAR6004.diag.cause.1=Illegal access Error while instantiating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean classes.
RAR6004.diag.check.1=Check whether the resource adapter have any specific security requirements..
rardeployment.mcfcreation_error=RAR6005 : Could not create mcf : {0}
RAR6005.diag.cause.1=Error while creating ManagedConnectionFactory.
RAR6005.diag.check.1=Resource adapter is bundled properly.
RAR6005.diag.check.2=Check whether connection pool configuration has correct properties for MCF.
RAR6005.diag.check.3=Check resource adapter documentation for configuring correct properties of MCF.
rardeployment.resourcesutil_get_failure=RAR6006 : Failed to get ResourcesUtil object : {0}
RAR6006.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
rardeployment.resources_list_error=RAR6007 : Failed to get Resources list from domain.xml 
RAR6007.diag.cause.1=Runtime could not obtain list of resources of this resource adapter.
RAR6007.diag.check.1=Check whether the resource adapter configuration is proper.
rardeployment.ra_removal_registry_failure=RAR6008 : Failed to remove Active Resource Adapter from registry {0}
RAR6008.diag.cause.1=Resource Adapter threw an exception during ResourceAdapter.stop() method.
RAR6008.diag.check.1=Check your resource adapter documentation about ResourceAdapter.stop() method.
rardeployment.pools_and_resources_exist=RAR6009 : Connector Connection Pools/resources still exist. Remove all the connector connection pools and resources before undeploying rar  : {0}
RAR6009.diag.cause.1=A resource (connection pool, connector resource or admin object) pertaining to the resource adapter is existing.
RAR6009.diag.check.1=Check whether the cascade option of undeploy is false. 
rardeployment.resourceadapter.already.started=RAR6010 : Resource Adapter is already started/deployed  : {0}
RAR6010.diag.cause.1=Resource Adapter is already active in the connector runtime.
RAR6010.diag.check.1=Check whether a previous resource adapter deployment is still available.
rardeployment.failed_toget_classloader=RAR6011 : Failed to obtain the  classloader  : {0}
RAR6011.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
rardeployment.nullPointerException=RAR6012 : Null pointer Exception : {0}
RAR6012.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
RAR6012.diag.check.2=Check whether resource adapter threw a null pointer exception.
rardeployment.jndi_publish_failure=RAR6013 : Couldnot publish connector descriptor in JNDI : {0}
RAR6013.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
rardeployment.connector_descriptor_notfound=RAR6014 : Couldnot find the connector descriptor in the rar : {0}
RAR6014.diag.cause.1=Incomplete or erroneous resource adapter deployment.
RAR6014.diag.check.1=Check whether the RA deployment is proper and complete.
rardeployment.connectionpool_object_null=RAR6015 : Obtained Null connection pool object from jndi : {0}
RAR6015.diag.cause.1=Connection pool is not created properly.
RAR6015.diag.check.1=Check your resource configuration, whether you are using correct connection pool name.
rardeployment.resourceadapter_not_initialized=RAR6016 : Active resource adapter not initialized.Rar Name : {0}
RAR6016.diag.cause.1=Resource Adapter is not yet initialized in the connector runtime.
RAR6016.diag.check.1=Check whether the deployment of the resource adapter is complete.
rardeployment.jndi_lookup_failed=RAR6017 : Failed to get connection pool object via JNDI lookup : {0}
RAR6017.diag.cause.1=Incomplete or erroneous connection pool creation.
RAR6017.diag.check.1=Check whether connection pool is created and is proper.
rardeployment.mcf_add_toregistry_failed=RAR6018 : Failed to add MCF to connector registry  : {0}
rardeployment.connector_descriptor_notfound_registry=RAR6019 : Failed to get connector descriptor from registry. RarName :  : {0}
RAR6019.diag.cause.1=Incomplete or erroneous resource adapter deployment.
RAR6019.diag.check.1=Check whether the RA deployment is proper and complete.
rardeployment.pool_jndi_bind_failure=RAR6020 : Failed to publish connection pool object in JNDI : {0}
RAR6020.diag.check.1=Check whether the connection pool is existing.
rardeployment.mcf_creation_failure=RAR6021 :Failed to create MCF : {0}
RAR6021.diag.cause.1=Error while creating ManagedConnectionFactory.
RAR6021.diag.check.1=Resource adapter is bundled properly.
RAR6021.diag.check.2=Check whether connection pool configuration has correct properties for MCF.
RAR6021.diag.check.3=Check whether the resource adapter require security permissions to load the classes. Some adapters require getClassLoader() permission.
rardeployment.mcf_registration_failure=RAR6022 : Failed to register MCF in connector registry : {0}
RAR6022.diag.cause.1=NullPointerException while creating ManagedConnectionFactory.
RAR6022.diag.check.1=Check whether resource adapter throws null pointer exception.
rardeployment.null_mcf_in_registry=RAR6023 : Null connector descriptor in registry. Module Name is : {0}
RAR6023.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
rardeployment.connector_resource_bind_failure=RAR6024 : Failed to bind connector resource in JNDI: {0}
rardeployment.connector_descriptor_read_error=RAR6025 : Failed to read the connector deployment descriptors : {0}
RAR6025.diag.cause.1=Could not read the deployment descriptor of the resource adapter.
RAR6025.diag.check.1=Check whether the resource adapter is packaged correctly.
RAR6025.diag.check.2=Check the correctness of deployment descriptor.
rardeployment.connector_descriptor_parse_error=RAR6026 : Failed to parse the connector deployment descriptors : {0}
RAR6026.diag.cause.1=Could not parse the deployment descriptor of the resource adapter.
RAR6026.diag.check.1=Check whether the resource adapter is packaged correctly.
RAR6026.diag.check.2=Check the correctness of deployment descriptor.
rardeployment.malfarmed_url_for_classloader=RAR6027 : Malformed URL to add to path of classloader : {0}
RAR6027.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
rardeployment.non_1.5_compliant_rar=RAR6028 : This adapter is not 1.5 compliant : {0}
RAR6028.diag.cause.1=Resource Adapter doesnt contain resource adapter java bean.
RAR6028.diag.check.1=Make sure that the resource adapter is 1.5 compliant.
rardeployment.admin_object_delete_failure=RAR6029 : Failed to delete admin object from jndi : {0}
rardeployment.mcf_removal_failure=RAR6030 : Failed to remove the MCF : {0}
RAR6030.diag.cause.1=MCF cleanup in connector runtime failed.
RAR6030.diag.check.1=Check whether connection pool has already been deleted.
RAR6030.diag.check.2=There is an internal server error. Please contact Sun Microsystems with the complete log message
rardeployment.connectionpool_removal_from_jndi_error=RAR6031 : Failed to unbind connectionPool from jndi : {0}
RAR6031.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
loading.wrong_resources_entry=RAR6032 : Wrong connector resource entry in the domain.xml. No corresponding connection pool created. Pool Name: 
RAR6032.diag.cause.1=Connection Pool Name of the Resource configuration is wrong.
RAR6032.diag.check.1=Check whether the connection pool is created.
loading.wrong_connectorpool_entry=RAR6033 : Wrong connector connection pool  entry in the domain.xml. No corresponding resource adapter deployed. Resource Adapter Name : 
loading.wrong_adminobject_entry=RAR6034 : Wrong admin object entry in the domain.xml. No corresponding resource adapter deployed. Resource Adapter Name : 
rardeployment.start_failed=RAR6035 : Resource adapter start failed : {0}
RAR6035.diag.cause.1=Could not start the resource adapter instance.
RAR6035.diag.cause.2=ResourceAdpater threw an exception during ResourceAdapter.start()
RAR6035.diag.check.1=Check whether the domain.xml is accessible.
RAR6035.diag.check.2=Check your resource adapter documentation for possible causes of failure during ResourceAdapter.start()
rardeployment.assoc_failed=RAR6036 : Resource adapter association failed : {0}
RAR6036.diag.cause.1=Resource Adapter throws exception during ManagedConnectionFactory.setResourceAdapter()
RAR6036.diag.check.1=If you are using third party resource adapter, contact resource adapter vendor.
RAR6036.diag.check.2=If you are a resource adapter developer, please check the resource adapter code.
rardeployment.stop_warning=RAR6037 : Resource adapter threw an exception while stopping 
RAR6037.diag.cause.1=Resource Adapter threw an exception during ResourceAdapter.stop() method.
RAR6037.diag.check.1=Check your resource adapter documentation about ResourceAdapter.stop() method.

jmsra.upgrade_check_failed=RAR7000 : Check for a new version of MQ installation failed : {0}
RAR7000.diag.cause.1=MQ resource adapter in the upgraded MQ is not accessible.
RAR7000.diag.cause.2=Could not read the manifest of New MQ resource adapter file.
jmsra.upgrade_failed=RAR7001 : Upgrading a MQ resource adapter failed : {0}
RAR7001.diag.cause.1=Could not unzip the MQ resource adapter archive from upgraded MQ.
RAR7001.diag.check.1=Check whether new MQ resource adapter archive in imq_home/lib is accessible.
jmsra.upgrade_started=RAR7002 : MQ Resource adapter upgradation started.
jmsra.upgrade_completed=RAR7003 : MQ Resource adapter upgradation completed.
endpointfactory.unavailable=RAR7004 : MDB deployment is still happening. Cannot create end point now.
RAR7004.diag.cause.1=Resource Adapter is requesting endpoints to the MDB, before MDB deployment is complete.
endpointfactory.loader_not_found=RAR7005 : Class loader not found : [{0}]
RAR7005.diag.cause.1=Could not access the class loader specific to the MDB. 
endpointfactory.as_validate_Failed=RAR7006 : ActivationSpec validation failed : [{0}]
RAR7006.diag.cause.1=ActivationSpec validation failed.
RAR7006.diag.check.1=Check your JMS related configuration in MDB deployment descriptor.
RAR7006.diag.check.2=Check your activation configuration in the MDB deployment descriptor.
endpointfactory.method_not_defined=RAR7007 : The method is not defined : [{0}]
RAR7007.diag.cause.1=Resource Adapter is trying to invoke an unknown method during message delivery.
RAR7007.diag.check.1=Check your resource adapter documentation for possible issues during message delivery.
no.such.method=RAR8000 : The method {0} is not present in the class : {1}
RAR8000.diag.check.1=Check the error message to see which class doesnt have the method. 
RAR8000.diag.check.2=Check the connection pool configuration property names.
RAR8000.diag.check.3=Check the jms resource configuration property names.
RAR8000.diag.check.4=Check the admin object resource configuration property names.
RAR8000.diag.check.5=Check the resource adapter configuration property names.
error.execute.method=RAR8001 : Error in executing the method : {0}
RAR8001.diag.check.1=Check the error message to see which class has failed to execute the method.
RAR8001.diag.check.2=Check the connection pool configuration property names and values.
RAR8001.diag.check.3=Check the jms resource configuration property names. and values
RAR8001.diag.check.4=Check the admin object resource configuration property names and values.
RAR8001.diag.check.5=Check the resource adapter configuration property names and values.
poolmon.cnfe=RAR7004 : Class Not Found : {0}
RAR7004.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
poolmon.cannot_reg=RAR7005 : Cannot register pool from monitoring registry: {0} 
RAR7005.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
poolmon.cannot_unreg=RAR7099 : Cannot unregister pool from monitoring registry: {0} 
RAR7099.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
reconfig.cannot_get_mcf=RAR7006: Cannot get MCF for pool : {0}
poolmon.error_registering_listener=RAR8007 : Error registering MonitoringLevelListener in monitoring registry. The Exception is: {0}
RAR8007.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
poolmon.init_monitoring_registry=RAR7008 : Initialized monitoring registry and listeners
RAR7008.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
jdbc.cannot_set_autocommit=RAR7009: Cannot set autocommit mode for physical connection
jdbc.pool_not_reachable=RAR7010: Pool not reachable. 
RAR7010.diag.cause.1=Could not find the connection pool specified.
RAR7010.diag.check.1=Check whether the connection pool creation was successful.
RAR7010.diag.check.2=Check whether the pool name used is correct.
isReferenced.unexpectedException=RAR7011: Unexpected exception determining whether resource is referenced.
RAR7011.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message
resource_adapter_stop_status=RAR7012: J2EE Connector 1.5 specification compliant Resource Adapter stop() status
rar_stop_call_successful=RAR7013: Resource Adapter stop() call successful
error_reading_connectorservice_elt=RAR 7014: Error reading Connector Service Element from domain.xml while trying to get shutdown-timeout-in-seconds value. Continuing wih the default shutdown timeout value
RAR7014.diag.cause.1=Could not read shutdown-timeout-in-seconds from the domain.xml properly.
RAR7014.diag.check.1=Make sure that domain.xml is configured correctly.
rardeployment.incorrect_tx_support=RAR7092 : Incorrect transaction support level. This RAR has a lower tx support level in its ra.xml transaction-support attribute : {0}
RAR7092.diag.cause.1=The ra.xml specifies LocalTransaction as the transaction-support and connection-pool is configured with XATransaction support.
RAR7092.diag.cause.2=The ra.xml specifies NoTransaction as the transaction-support and connection-pool is configured with XATransaction or LocalTransaction support.
managed_con.cleanup-failed=RAR7093 : Error while cleaning up ManagedConnection
RAR7093.diag.check.1=There is an internal server error. Please contact Sun Microsystems with the complete log message 
ra.stop-successful=RAR7094: {0} shutdown successful.
ra.stop-unsuccessful=RAR7095: {0} shutdown unsuccessful. Please refer the server and/or resource adapter logs for more information.
RAR7095.diag.cause.1=The resource adapter failed to shutdown within the specified shutdown timeout.
RAR7095.diag.check.1=Check the resource adapter and server logs for any exceptions during resource adapter stop.
RAR7095.diag.check.2=Increase the shutdown-timeout-in-seconds attribute of connector-service if the resource adapter requires a longer time to shutdown.
rardeployment.exception_on_invoke_setter=RAR7096: Exception {2} while trying to set the value {1} on property {0} 
RAR7096.diag.cause.1=Error while trying to invoke the setter method for the specified property.
RAR7096.diag.check.1=Check if the value and the property name specified are valid.
rardeployment.no_setter_method=RAR7097: No setter method present for the property {0} in the class {1}
RAR7097.diag.cause.1=Error in finding a mutator method for the specified property
RAR7097.diag.check.1=Check if the property has been specified correctly and an appropriate public setter method [method] is available in the class.
conmgr.mcf_not_equal=RAR7099: The mcf being used to allocate the connection and the MCF in the pool are not equal.
RAR7099.diag.cause.1=The configuration parameters like username/password for the Pool being accessed are changed and the application has not been redeployed
RAR7099.diag.cause.2=The MCF equals method is improperly implemented
RAR7099.diag.check.2=Ensure that your resource adapter properly implements the equals method
jmservice.destination.autocreated=RAR7100: Physical destination {0} is autocreated by application server.
jmservice.destination.autocreatefailed= RAR7101: Autocreation of physical destination {0} failed.
RAR7101.diag.cause.1=Creation of physical destination in SJS MQ failed. Please look at SJS MQ log for more details.
RAR7101.diag.cause.2=You havent configured jms-service properly. Make sure that default-jms-host of jms-service points to a valid SJS MQ
location.
jmsservice.defaulthost.notconfigured=RAR7102: Default-jms-host of jms-service is not configured properly. Using the first jms-host as the
 default-jms-host.
RAR7102.diag.cause.1=You havent configured default-jms-host in the jms-service.
RAR7102.diag.cause.2=The jms-host configured as default-jms-host is not not available.
jmservice.destination.already.autocreated=RAR7103: The physical destination {0} is already created.
Derby.Shutdown.Exception=RAR7104: Exception while stopping Derby :
RAR7104.diag.cause.1=Embedded Derby will always throw this exception when the database is shutdown
Derby.Driver.Not.Found=RAR7105: Derby Embedded Driver not found :
RAR7105.diag.cause.1=Derby embedded driver class is not found in classpath
conn_pool_obj_utils.lazy_enlist-lazy_assoc-invalid-combination=RAR7106: LazyConnectionEnlistment need to be true for LazyConnectionAssociation to work, for pool: {0}
RAR7106.diag.cause.1=Connection Pool properties, LazyConnectionAssociation is true and LazyConnectionEnlistment is false which is not allowed.
jdbc.duplicateTxCompleted=IGNORE:In transaction completed.Probably transaction completed called again
CCP.ValidateAtmostEveryIdleSecs.Set=ValidateAtmostEveryIdleSecs  property set for pool : {0}
unable_to_get_password_from_alias=RAR7107: Unable to retrieve password from alias
RAR7107.diag.cause.1=Alias may not exist. Ensure that alias exists.
error.loading.jms.resources.during.recovery=RAR7108: Error while loading jms resources during recovery : {0}
RAR7108.diag.cause.1=Error getting jms resource configs.
RAR7108.diag.cause.2=Lookup failed for the jms resource. Not found in jndi.
RAR7108.diag.check.1=See server log for more information
error.loading.jdbc.resources.during.recovery=RAR7109: Error while loading jdbc resources during recovery : {0}
RAR7109.diag.cause.1=Error getting jdbc resource configs.
RAR7109.diag.cause.2=Lookup failed for the jdbc resource. Not found in jndi.
RAR7109.diag.check.1=See server log for more information
error.loading.connector.resources.during.recovery=RAR7110: Error while loading connector resources during recovery : {0}
RAR7110.diag.cause.1=Error getting connector resource configs.
RAR7110.diag.cause.2=Lookup failed for the connector resource. Not found in jndi.
RAR7110.diag.cause.3=Error loading the embedded RAR.
RAR7110.diag.check.1=See server log for more information
resource_pool.failed_creating_resource=Unable to create a new resource : {0}
jdbc.markedForRemoval_conClosed=RAR7111: destroying connection during connectionClosed since this connection is marked for removal
jdbc.markedForRemoval_txCompleted=RAR7112: destroying connection during txCompleted since this connection is marked for removal
resource_pool.remove_max_used_conn=RAR7113: destroying connection since it has reached the maximum usage of : {0}
jdbc.unable_to_get_client_info=RAR7114: Unable to get ClientInfo for connection 
jdbc.unable_to_set_client_info=RAR7115: Unable to set ClientInfo for connection
jdbc.exc_unwrap=RAR7116: Unable to unwrap 
jdbc.exc_is_wrapper=RAR7117: Exception during isWrapper 
jdbc.jdbc_factory_class_load_exception=RAR7118: Unable to load jdbc objects factory 
jdbc.exc_get_XA=RAR7119: Unable to get XADataSource
jdbc.exc_cce_CP=RAR7120: Unable to get ConnectionPoolDataSource 
connection_sharing_start=ConnectorXAResource.start() - associating connection : {0}
connection_sharing_end=ConnectorXAResource.end() called
connection_sharing_reset_association=ConnectorXAResource.resetAssociation() - dissociating connection : {0}
jdbc.duplicate_close_connection=duplicate close() called on connection : {0}
jdbc.invalid_connection=Invalid connection found;
jdbc.exc_md=RAR7121: Exception while retrieving meta-data of connection
jdbc.unexpected_exception_on_detecting_jdbc_version=RAR7122: Unexpected Exception while detecting JDBC version
jdbc.unable_to_lookup_resource=lookup of DataSource [ {0} ] failed, trying to provide wrapper datasource
pool.datastructure.init.failure=Unable to initalize custom pool data-structure : {0}
pool.datastructure.init.failure.exception=RAR7123: Unable to initalize custom pool data-structure. Exception occurred :
pool.waitqueue.init.failure=Unable to initalize custom connection pool wait-queue : {0}
pool.waitqueue.init.failure.exception=RAR7124: Unable to initalize connection pool wait-queue. Exception occurred : 
pool.resource.gateway.init.failure=Unable to initalize custom connection pool resource-gateway : {0}
pool.resource.gateway.init.failure.exception=RAR7125: Unable to initalize connection pool resource-gateway. Exception occurred :
poolmgr.err_enlisting_res_in_getconn=Unable to enlist the resource in transaction
rardeployment.connectorresource_removal_from_jndi_error=Unable to remove resource [ {0} ] from jndi
rardeployment.no_module_deployed=RAR [ {0} ] is not deployed
rardeployment.connector_descriptor_jndi_removal_failure=Unable to remove connector-descritor of resource-adatper [{0}] from jndi
method.name.nogetterforproperty=No getter for property [ {0} ] of class [ {1} ]
rardeployment.defaultpoolresourcecreation.failed=Unable to create default resource for the resource-adapter
rar.undeployment.default_pool_delete_fail=Unable to undeploy the default pool [ {0} ]
rar.undeployment.default_resource_delete_fail=Unable to undeploy the default resource [ {0} ]
rardeployment.logwriter_error=Unable to set log-writer for resource-adapter [ {0} ] : {1}
rar.undeployment.sun_ra_pool_delete_fail=Unable to undeploy the sun-ra pool [ {0} ]
enterprise_util.connector_malformed_url=Connector classloader unable to add files to classpath
no_resource=could not find a resource by name : {0}
core.resource_disabled=Resource [ {0} ] of type [ {1} ] is not enabled
workmanager.instantiation_error=Unable to obtain work manager :
tx.sync.registry.lookup.failed=Unable to obtain transaction synchronization registry :
   