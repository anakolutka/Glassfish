<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Weld / JBoss AS run of CDI TCK">
    <groups>
      <group name="manager">
        <method signature="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest.testInjectingManager()" name="testInjectingManager" class="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest"/>
      </group>
      <group name="events">
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testEventObjectContainsTypeVariablesWhenResolvingFails()" name="testEventObjectContainsTypeVariablesWhenResolvingFails" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testGetTransactionPhaseOnObserverMethod()" name="testGetTransactionPhaseOnObserverMethod" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testInstanceOfBeanForEveryEnabledObserverMethod()" name="testInstanceOfBeanForEveryEnabledObserverMethod" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testNonStaticObserverMethodIndirectlyInherited()" name="testNonStaticObserverMethodIndirectlyInherited" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testNonStaticObserverMethodInherited()" name="testNonStaticObserverMethodInherited" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testObserverCalledOnMostSpecializedInstance()" name="testObserverCalledOnMostSpecializedInstance" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testObserverMethodNotifiedWhenBindingsMatch()" name="testObserverMethodNotifiedWhenBindingsMatch" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testObserverMethodReceivesInjectionsOnNonObservesParameters()" name="testObserverMethodReceivesInjectionsOnNonObservesParameters" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testStaticObserverMethodInvoked()" name="testStaticObserverMethodInvoked" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testEventAlwaysHasAnyBinding()" name="testEventAlwaysHasAnyBinding" class="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testEventBindingTypeTargetsFieldParameterElementTypes()" name="testEventBindingTypeTargetsFieldParameterElementTypes" class="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testEventBindingTypeTargetsMethodFieldParameterElementTypes()" name="testEventBindingTypeTargetsMethodFieldParameterElementTypes" class="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testFireEventWithNonBindingAnnotationsFails()" name="testFireEventWithNonBindingAnnotationsFails" class="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testFireEventWithNonRuntimeBindingTypeFails()" name="testFireEventWithNonRuntimeBindingTypeFails" class="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testNonRuntimeBindingTypeIsNotAnEventBindingType()" name="testNonRuntimeBindingTypeIsNotAnEventBindingType" class="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.inject.withoutType.EventInjectionWithoutTypeTest.testAnyAnnotationOnEventInjectionPointWithoutTypeParameterFails()" name="testAnyAnnotationOnEventInjectionPointWithoutTypeParameterFails" class="org.jboss.jsr299.tck.tests.event.broken.inject.withoutType.EventInjectionWithoutTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.beanNotManaged.ObserverMethodOnIncorrectBeanTest.testObserverMethodNotOnManagedOrSessionBeanFails()" name="testObserverMethodNotOnManagedOrSessionBeanFails" class="org.jboss.jsr299.tck.tests.event.broken.observer.beanNotManaged.ObserverMethodOnIncorrectBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.dependentIsConditionalObserver.DependentIsConditionalObserverTest.testDependentBeanWithConditionalObserverMethodIsDefinitionError()" name="testDependentBeanWithConditionalObserverMethodIsDefinitionError" class="org.jboss.jsr299.tck.tests.event.broken.observer.dependentIsConditionalObserver.DependentIsConditionalObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.isDisposer.ObserverMethodAnnotatedDisposesTest.testObserverMethodWithDisposesParamFails()" name="testObserverMethodWithDisposesParamFails" class="org.jboss.jsr299.tck.tests.event.broken.observer.isDisposer.ObserverMethodAnnotatedDisposesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.isInitializer.ObserverMethodAnnotatedInitialzerTest.testObserverMethodAnnotatedInitializerFails()" name="testObserverMethodAnnotatedInitializerFails" class="org.jboss.jsr299.tck.tests.event.broken.observer.isInitializer.ObserverMethodAnnotatedInitialzerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.isProducer.ObserverMethodAnnotatedProducesTest.testObserverMethodAnnotatedProducesFails()" name="testObserverMethodAnnotatedProducesFails" class="org.jboss.jsr299.tck.tests.event.broken.observer.isProducer.ObserverMethodAnnotatedProducesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.notBusinessMethod.EJBObserverMethodNotBusinessMethodTest.testObserverMethodOnEnterpriseBeanNotBusinessMethodOrStaticFails()" name="testObserverMethodOnEnterpriseBeanNotBusinessMethodOrStaticFails" class="org.jboss.jsr299.tck.tests.event.broken.observer.notBusinessMethod.EJBObserverMethodNotBusinessMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.broken.observer.tooManyParameters.ObserverMethodWithTwoEventParametersTest.testObserverMethodMustHaveOnlyOneEventParameter()" name="testObserverMethodMustHaveOnlyOneEventParameter" class="org.jboss.jsr299.tck.tests.event.broken.observer.tooManyParameters.ObserverMethodWithTwoEventParametersTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.eventTypes.EventTypesTest.testEventTypeIncludesAllSuperclassesAndInterfacesOfEventObject()" name="testEventTypeIncludesAllSuperclassesAndInterfacesOfEventObject" class="org.jboss.jsr299.tck.tests.event.eventTypes.EventTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testBeanManagerFireEvent()" name="testBeanManagerFireEvent" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testBeanManagerInterfaceForFireEventMethod()" name="testBeanManagerInterfaceForFireEventMethod" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testDuplicateBindingsToFireEventFails()" name="testDuplicateBindingsToFireEventFails" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testEventFireThrowsExceptionIfEventObjectContainsTypeVariable()" name="testEventFireThrowsExceptionIfEventObjectContainsTypeVariable" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testEventProvidesMethodForFiringEventsWithCombinationOfTypeAndBindings()" name="testEventProvidesMethodForFiringEventsWithCombinationOfTypeAndBindings" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testEventSelectedFiresAndObserversNotified()" name="testEventSelectedFiresAndObserversNotified" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testInjectedAnyEventCanFireEvent()" name="testInjectedAnyEventCanFireEvent" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testInjectedEventAcceptsEventObject()" name="testInjectedEventAcceptsEventObject" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testInjectedEventCanHaveBindings()" name="testInjectedEventCanHaveBindings" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testInjectedEventCanSpecifyBindingsDynamically()" name="testInjectedEventCanSpecifyBindingsDynamically" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testTypeVariableEventTypeFails()" name="testTypeVariableEventTypeFails" class="org.jboss.jsr299.tck.tests.event.fires.FireEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.fires.nonbinding.NonBindingTypePassedToFireTest.testExceptionThrownIfNonBindingTypePassedToFire()" name="testExceptionThrownIfNonBindingTypePassedToFire" class="org.jboss.jsr299.tck.tests.event.fires.nonbinding.NonBindingTypePassedToFireTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest.testImplicitEventExistsForEachEventType()" name="testImplicitEventExistsForEachEventType" class="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest.testImplicitEventHasAllExplicitBindingTypes()" name="testImplicitEventHasAllExplicitBindingTypes" class="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest.testImplicitEventHasDependentScope()" name="testImplicitEventHasDependentScope" class="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest.testImplicitEventHasImplementation()" name="testImplicitEventHasImplementation" class="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest.testImplicitEventHasNoName()" name="testImplicitEventHasNoName" class="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest.testImplicitEventIsPassivationCapable()" name="testImplicitEventIsPassivationCapable" class="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.ObserverTest.testGetBeanOnObserverMethod()" name="testGetBeanOnObserverMethod" class="org.jboss.jsr299.tck.tests.event.observer.ObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.ObserverTest.testGetNotifyOnObserverMethod()" name="testGetNotifyOnObserverMethod" class="org.jboss.jsr299.tck.tests.event.observer.ObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.ObserverTest.testGetObservedBindingsOnObserverMethod()" name="testGetObservedBindingsOnObserverMethod" class="org.jboss.jsr299.tck.tests.event.observer.ObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.ObserverTest.testGetObservedTypeOnObserverMethod()" name="testGetObservedTypeOnObserverMethod" class="org.jboss.jsr299.tck.tests.event.observer.ObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.ObserverTest.testObserverNotifiedWhenEventTypeAndAllBindingsMatch()" name="testObserverNotifiedWhenEventTypeAndAllBindingsMatch" class="org.jboss.jsr299.tck.tests.event.observer.ObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.abortProcessing.ObserverExceptionAbortsProcessingTest.testObserverThrowsExceptionAbortsNotifications()" name="testObserverThrowsExceptionAbortsNotifications" class="org.jboss.jsr299.tck.tests.event.observer.abortProcessing.ObserverExceptionAbortsProcessingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.checkedException.CheckedExceptionWrappedTest.testNonTransactionalObserverThrowsCheckedExceptionIsWrappedAndRethrown()" name="testNonTransactionalObserverThrowsCheckedExceptionIsWrappedAndRethrown" class="org.jboss.jsr299.tck.tests.event.observer.checkedException.CheckedExceptionWrappedTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.conditional.ConditionalObserverTest.testConditionalObserver()" name="testConditionalObserver" class="org.jboss.jsr299.tck.tests.event.observer.conditional.ConditionalObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.conditional.ConditionalObserverTest.testObserverMethodInvokedOnReturnedInstanceFromContext()" name="testObserverMethodInvokedOnReturnedInstanceFromContext" class="org.jboss.jsr299.tck.tests.event.observer.conditional.ConditionalObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testBeanManagerResolveObserversSignature()" name="testBeanManagerResolveObserversSignature" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testMethodWithParameterAnnotatedWithObservesRegistersObserverMethod()" name="testMethodWithParameterAnnotatedWithObservesRegistersObserverMethod" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testMultipleObserverMethodsForSameEventPermissible()" name="testMultipleObserverMethodsForSameEventPermissible" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testMultipleObserverMethodsOnBeanPermissible()" name="testMultipleObserverMethodsOnBeanPermissible" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testObserverMethodAutomaticallyRegistered()" name="testObserverMethodAutomaticallyRegistered" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testObserverMethodMayHaveMultipleBindingTypes()" name="testObserverMethodMayHaveMultipleBindingTypes" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testObserverMethodNotAutomaticallyRegisteredForDisabledBeans()" name="testObserverMethodNotAutomaticallyRegisteredForDisabledBeans" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testObserverMethodRegistration()" name="testObserverMethodRegistration" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest.testObserverMethodWithoutBindingTypesObservesEventsWithoutBindingTypes()" name="testObserverMethodWithoutBindingTypesObservesEventsWithoutBindingTypes" class="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.enterprise.ResolveEnterpriseEventObserverTest.testObserverMethodOnEnterpriseBeanIsBusinessMethodOrStatic()" name="testObserverMethodOnEnterpriseBeanIsBusinessMethodOrStatic" class="org.jboss.jsr299.tck.tests.event.observer.resolve.enterprise.ResolveEnterpriseEventObserverTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.runtimeException.ObserverExceptionRethrownTest.testNonTransactionalObserverThrowsNonCheckedExceptionIsRethrown()" name="testNonTransactionalObserverThrowsNonCheckedExceptionIsRethrown" class="org.jboss.jsr299.tck.tests.event.observer.runtimeException.ObserverExceptionRethrownTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.wildcardAndTypeVariable.ObserverMethodWithParametertizedTypeTest.testObserverMethodCanObserveTypeVariable()" name="testObserverMethodCanObserveTypeVariable" class="org.jboss.jsr299.tck.tests.event.observer.wildcardAndTypeVariable.ObserverMethodWithParametertizedTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.observer.wildcardAndTypeVariable.ObserverMethodWithParametertizedTypeTest.testObserverMethodCanObserveWildcardType()" name="testObserverMethodCanObserveWildcardType" class="org.jboss.jsr299.tck.tests.event.observer.wildcardAndTypeVariable.ObserverMethodWithParametertizedTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.resolve.binding.DuplicateBindingTypesWhenResolvingTest.testDuplicateBindingTypesWhenResolvingFails()" name="testDuplicateBindingTypesWhenResolvingFails" class="org.jboss.jsr299.tck.tests.event.resolve.binding.DuplicateBindingTypesWhenResolvingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.resolve.binding.ResolvingChecksBindingTypeMembersTest.testResolvingChecksBindingTypeMembers()" name="testResolvingChecksBindingTypeMembers" class="org.jboss.jsr299.tck.tests.event.resolve.binding.ResolvingChecksBindingTypeMembersTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.resolve.nonbinding.NonBindingTypesWhenResolvingTest.testNonBindingTypeAnnotationWhenResolvingFails()" name="testNonBindingTypeAnnotationWhenResolvingFails" class="org.jboss.jsr299.tck.tests.event.resolve.nonbinding.NonBindingTypesWhenResolvingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.CheckTypeParametersWhenResolvingObserversTest.testResolvingChecksTypeParameters()" name="testResolvingChecksTypeParameters" class="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.CheckTypeParametersWhenResolvingObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.CheckTypeParametersWhenResolvingObserversTest.testResolvingChecksTypeParametersOnObservesMethod()" name="testResolvingChecksTypeParametersOnObservesMethod" class="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.CheckTypeParametersWhenResolvingObserversTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.ChecksEventTypeWhenResolvingTest.testResolvingChecksEventType()" name="testResolvingChecksEventType" class="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.ChecksEventTypeWhenResolvingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectReturnsEventOfSameType()" name="testEventSelectReturnsEventOfSameType" class="org.jboss.jsr299.tck.tests.event.select.SelectEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectThrowsExceptionForDuplicateBindingType()" name="testEventSelectThrowsExceptionForDuplicateBindingType" class="org.jboss.jsr299.tck.tests.event.select.SelectEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectThrowsExceptionIfAnnotationIsNotBindingType()" name="testEventSelectThrowsExceptionIfAnnotationIsNotBindingType" class="org.jboss.jsr299.tck.tests.event.select.SelectEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectThrowsExceptionIfEventTypeHasTypeVariable()" name="testEventSelectThrowsExceptionIfEventTypeHasTypeVariable" class="org.jboss.jsr299.tck.tests.event.select.SelectEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectWithSubtypeThrowsExceptionForDuplicateBindingType()" name="testEventSelectWithSubtypeThrowsExceptionForDuplicateBindingType" class="org.jboss.jsr299.tck.tests.event.select.SelectEventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectWithSubtypeThrowsExceptionIfAnnotationIsNotBindingType()" name="testEventSelectWithSubtypeThrowsExceptionIfAnnotationIsNotBindingType" class="org.jboss.jsr299.tck.tests.event.select.SelectEventTest"/>
      </group>
      <group name="resolution">
        <method signature="org.jboss.jsr299.tck.tests.lookup.byname.ResolutionByNameTest.testAmbiguousELNamesResolved()" name="testAmbiguousELNamesResolved" class="org.jboss.jsr299.tck.tests.lookup.byname.ResolutionByNameTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.byname.duplicateNameResolution.DuplicateNameResolutionTest.testDuplicateNamedBeans()" name="testDuplicateNamedBeans" class="org.jboss.jsr299.tck.tests.lookup.byname.duplicateNameResolution.DuplicateNameResolutionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.byname.duplicatePrefixResolution.DuplicateNamePrefixResolutionTest.testDuplicateBeanNamePrefix()" name="testDuplicateBeanNamePrefix" class="org.jboss.jsr299.tck.tests.lookup.byname.duplicatePrefixResolution.DuplicateNamePrefixResolutionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testDefaultBindingTypeAssumed()" name="testDefaultBindingTypeAssumed" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testResolveByType()" name="testResolveByType" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testResolveByTypeWithArray()" name="testResolveByTypeWithArray" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testResolveByTypeWithNonBindingMembers()" name="testResolveByTypeWithNonBindingMembers" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testResolveByTypeWithPrimitives()" name="testResolveByTypeWithPrimitives" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testResolveByTypeWithTypeParameter()" name="testResolveByTypeWithTypeParameter" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.primitive.PrimitiveInjectionPointTest.testPrimitiveInjectionPointResolvedToNonPrimitiveProducerMethod()" name="testPrimitiveInjectionPointResolvedToNonPrimitiveProducerMethod" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.primitive.PrimitiveInjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.type.variable.TypeVariableInjectionPointTest.testTypeVariableInjectionPoint()" name="testTypeVariableInjectionPoint" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.type.variable.TypeVariableInjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.interceptor.InterceptorNotResolvedTest.testInterceptorNotResolved()" name="testInterceptorNotResolved" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.interceptor.InterceptorNotResolvedTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithActualTypes()" name="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithActualTypes" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcards()" name="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcards" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcardsAtInjectionPoint()" name="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcardsAtInjectionPoint" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeTypeVariable()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeTypeVariable" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithActualTypes()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithActualTypes" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards2()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards2" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest.testAssignabilityToRawType()" name="testAssignabilityToRawType" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest"/>
      </group>
      <group name="innerClass">
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.definition.SimpleBeanDefinitionTest.testStaticInnerClassDeclaredInJavaAllowed()" name="testStaticInnerClassDeclaredInJavaAllowed" class="org.jboss.jsr299.tck.tests.implementation.simple.definition.SimpleBeanDefinitionTest"/>
      </group>
      <group name="rewrite">
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableImplementationClassOK()" name="testManagedBeanWithSerializableImplementationClassOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest.testQualifierDeclaresBindingAnnotation()" name="testQualifierDeclaresBindingAnnotation" class="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.deployment.lifecycle.broken.failsDuringValidation.AfterBeanDiscoveryFailureTest.testDeploymentFailsDuringValidation()" name="testDeploymentFailsDuringValidation" class="org.jboss.jsr299.tck.tests.deployment.lifecycle.broken.failsDuringValidation.AfterBeanDiscoveryFailureTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testDetermineBindingType()" name="testDetermineBindingType" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testDetermineInterceptorBindingType()" name="testDetermineInterceptorBindingType" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testDetermineScopeType()" name="testDetermineScopeType" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testDetermineStereotype()" name="testDetermineStereotype" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testGetMetaAnnotationsForInterceptorBindingType()" name="testGetMetaAnnotationsForInterceptorBindingType" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testGetMetaAnnotationsForStereotype()" name="testGetMetaAnnotationsForStereotype" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testgetScope()" name="testgetScope" class="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.interceptors.definition.InterceptorDefinitionTest.testInterceptionType()" name="testInterceptionType" class="org.jboss.jsr299.tck.tests.interceptors.definition.InterceptorDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testPolicyNotAvailableInNonDeploymentArchive()" name="testPolicyNotAvailableInNonDeploymentArchive" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.interceptor.InterceptorNotResolvedTest.testInterceptorNotResolved()" name="testInterceptorNotResolved" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.interceptor.InterceptorNotResolvedTest"/>
      </group>
      <group name="ejb">
        <method signature="org.jboss.jsr299.tck.tests.event.observer.resolve.enterprise.ResolveEnterpriseEventObserverTest.testObserverMethodOnEnterpriseBeanIsBusinessMethodOrStatic()" name="testObserverMethodOnEnterpriseBeanIsBusinessMethodOrStatic" class="org.jboss.jsr299.tck.tests.event.observer.resolve.enterprise.ResolveEnterpriseEventObserverTest"/>
      </group>
      <group name="producerField">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenInvokingProducerField()" name="testContextIsActiveWhenInvokingProducerField" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenProducerFieldCompletes()" name="testDependentsDestroyedWhenProducerFieldCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testApiTypeForArrayTypeReturn()" name="testApiTypeForArrayTypeReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testApiTypeForClassReturn()" name="testApiTypeForClassReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testApiTypeForInterfaceReturn()" name="testApiTypeForInterfaceReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testApiTypeForPrimitiveReturn()" name="testApiTypeForPrimitiveReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testBeanDeclaresMultipleProducerFields()" name="testBeanDeclaresMultipleProducerFields" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testBindingType()" name="testBindingType" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testDefaultBindingType()" name="testDefaultBindingType" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testDefaultNamedField()" name="testDefaultNamedField" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testNamedField()" name="testNamedField" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testNonStaticProducerFieldNotIndirectlyInherited()" name="testNonStaticProducerFieldNotIndirectlyInherited" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testNonStaticProducerFieldNotInherited()" name="testNonStaticProducerFieldNotInherited" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testParameterizedReturnType()" name="testParameterizedReturnType" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testScopeType()" name="testScopeType" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testStereotype()" name="testStereotype" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.broken.parameterizedReturnTypeWithWildcard.ParameterizedReturnTypeWithWildcardTest.testParameterizedReturnTypeWithWildcard()" name="testParameterizedReturnTypeWithWildcard" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.broken.parameterizedReturnTypeWithWildcard.ParameterizedReturnTypeWithWildcardTest"/>
      </group>
      <group name="integration">
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest.testEnterpriseBeanWithNonPassivatingDecoratorFails()" name="testEnterpriseBeanWithNonPassivatingDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest.testManagedBeanWithNonPassivatingDecoratorFails()" name="testManagedBeanWithNonPassivatingDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest"/>
      </group>
      <group name="event">
        <method signature="org.jboss.jsr299.tck.tests.event.eventTypes.EventTypesTest.testEventTypeIsConcreteTypeWithNoTypeVariables()" name="testEventTypeIsConcreteTypeWithNoTypeVariables" class="org.jboss.jsr299.tck.tests.event.eventTypes.EventTypesTest"/>
      </group>
      <group name="beanConstruction">
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testInjectionOfParametersIntoBeanConstructor()" name="testInjectionOfParametersIntoBeanConstructor" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
      </group>
      <group name="contexts">
        <method signature="org.jboss.jsr299.tck.tests.context.GetFromContextualTest.testGetMayNotCreateNewInstanceUnlessCreationalContextGiven()" name="testGetMayNotCreateNewInstanceUnlessCreationalContextGiven" class="org.jboss.jsr299.tck.tests.context.GetFromContextualTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.GetOnInactiveContextTest.testInvokingGetOnInactiveContextFails()" name="testInvokingGetOnInactiveContextFails" class="org.jboss.jsr299.tck.tests.context.GetOnInactiveContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.GetWithNoCreationalContextTest.testGetWithoutCreationalContextReturnsNull()" name="testGetWithoutCreationalContextReturnsNull" class="org.jboss.jsr299.tck.tests.context.GetWithNoCreationalContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testCallingCreationalContextReleaseDestroysDependents()" name="testCallingCreationalContextReleaseDestroysDependents" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextGetWithCreateFalseReturnsNull()" name="testContextGetWithCreateFalseReturnsNull" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextGetWithCreationalContextReturnsNewInstance()" name="testContextGetWithCreationalContextReturnsNewInstance" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActive()" name="testContextIsActive" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveDuringBeanCreation()" name="testContextIsActiveDuringBeanCreation" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveDuringInjection()" name="testContextIsActiveDuringInjection" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenCreatingObserverMethodInstance()" name="testContextIsActiveWhenCreatingObserverMethodInstance" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenEvaluatingElExpression()" name="testContextIsActiveWhenEvaluatingElExpression" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenInvokingDisposalMethod()" name="testContextIsActiveWhenInvokingDisposalMethod" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenInvokingProducerField()" name="testContextIsActiveWhenInvokingProducerField" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenInvokingProducerMethod()" name="testContextIsActiveWhenInvokingProducerMethod" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextScopeType()" name="testContextScopeType" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentBeanIsDependentObjectOfBeanInjectedInto()" name="testDependentBeanIsDependentObjectOfBeanInjectedInto" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentScopedDecoratorsAreDependentObjectsOfBean()" name="testDependentScopedDecoratorsAreDependentObjectsOfBean" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenDisposerMethodCompletes()" name="testDependentsDestroyedWhenDisposerMethodCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenElEvaluationCompletes()" name="testDependentsDestroyedWhenElEvaluationCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenObserverMethodEvaluationCompletes()" name="testDependentsDestroyedWhenObserverMethodEvaluationCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenProducerFieldCompletes()" name="testDependentsDestroyedWhenProducerFieldCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenProducerMethodCompletes()" name="testDependentsDestroyedWhenProducerMethodCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDestroyingManagedParentDestroysDependentsOfSameBean()" name="testDestroyingManagedParentDestroysDependentsOfSameBean" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDestroyingSimpleParentDestroysDependents()" name="testDestroyingSimpleParentDestroysDependents" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceNotSharedBetweenInjectionPoints()" name="testInstanceNotSharedBetweenInjectionPoints" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForDisposalMethodNotShared()" name="testInstanceUsedForDisposalMethodNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForElEvaluationNotShared()" name="testInstanceUsedForElEvaluationNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForObserverMethodNotShared()" name="testInstanceUsedForObserverMethodNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForProducerFieldNotShared()" name="testInstanceUsedForProducerFieldNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForProducerMethodNotShared()" name="testInstanceUsedForProducerMethodNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testBeanWithNonSerializableImplementationInjectedIntoTransientFieldOK()" name="testBeanWithNonSerializableImplementationInjectedIntoTransientFieldOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableDecoratorOK()" name="testManagedBeanWithSerializableDecoratorOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableImplementationClassOK()" name="testManagedBeanWithSerializableImplementationClassOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableInterceptorClassOK()" name="testManagedBeanWithSerializableInterceptorClassOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivationCapableProducerFieldIsOK()" name="testPassivationCapableProducerFieldIsOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivationCapableProducerMethodIsOK()" name="testPassivationCapableProducerMethodIsOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivationOccurs()" name="testPassivationOccurs" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingBeanConstructor.DecoratorWithNonPassivatingBeanConstructorTest.testPassivationCapableBeanWithNonPassivatingDecoratorBeanConstructorFails()" name="testPassivationCapableBeanWithNonPassivatingDecoratorBeanConstructorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingBeanConstructor.DecoratorWithNonPassivatingBeanConstructorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInitializerMethod.DecoratorWithNonPassivatingInitializerMethodTest.testPassivationCapableBeanWithNonPassivatingInitializerInDecoratorFails()" name="testPassivationCapableBeanWithNonPassivatingInitializerInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInitializerMethod.DecoratorWithNonPassivatingInitializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInjectedField.DecoratorWithNonPassivatingInjectedFieldTest.testPassivationCapableBeanWithNonPassivatingDecoratorInjectedFieldFails()" name="testPassivationCapableBeanWithNonPassivatingDecoratorInjectedFieldFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInjectedField.DecoratorWithNonPassivatingInjectedFieldTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptor.EnterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptorTest.testSessionBeanWithNonPassivatingBeanConstructorParamInInterceptorFails()" name="testSessionBeanWithNonPassivatingBeanConstructorParamInInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptor.EnterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingConstructorFieldInDecorator.EnterpriseBeanWithNonPassivatingFieldInDecoratorTest.testSessionBeanWithNonPassivatingConstructorFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingConstructorFieldInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingConstructorFieldInDecorator.EnterpriseBeanWithNonPassivatingFieldInDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest.testEnterpriseBeanWithNonPassivatingDecoratorFails()" name="testEnterpriseBeanWithNonPassivatingDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerInDecorator.EnterpriseBeanWithNonPassivatingInitializerInDecoratorTest.testSessionBeanWithNonPassivatingInitializerFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingInitializerFieldInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerInDecorator.EnterpriseBeanWithNonPassivatingInitializerInDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerParameterInInterceptor.EnterpriseBeanWithNonPassivatingInitializerParameterInInterceptorTest.testSessionBeanWithNonPassivatingInitializerParamInInterceptorFails()" name="testSessionBeanWithNonPassivatingInitializerParamInInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerParameterInInterceptor.EnterpriseBeanWithNonPassivatingInitializerParameterInInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInDecorator.EnterpriseBeanWithNonPassivatingInjectedFieldInDecoratorTest.testSessionBeanWithNonPassivatingInjectedFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingInjectedFieldInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInDecorator.EnterpriseBeanWithNonPassivatingInjectedFieldInDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInInterceptor.EnterpriseBeanWithNonPassivatingInjectedFieldInInterceptorTest.testSessionBeanWithNonPassivatingInjectedFieldInInterceptorFails()" name="testSessionBeanWithNonPassivatingInjectedFieldInInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInInterceptor.EnterpriseBeanWithNonPassivatingInjectedFieldInInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonSerializableIntializerMethod.EnterpriseBeanWithNonSerializableIntializerMethodTest.testDependentBeanWithNonSerializableImplementationInStatefulSessionBeanInitializerFails()" name="testDependentBeanWithNonSerializableImplementationInStatefulSessionBeanInitializerFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonSerializableIntializerMethod.EnterpriseBeanWithNonSerializableIntializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingBeanConstructorParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest.testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingBeanConstructorParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInitializerMethodParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest.testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInitializerMethodParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInjectedField.PassivationCapableBeanWithNonPassivatingInterceptorTest.testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInjectedField.PassivationCapableBeanWithNonPassivatingInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest.testManagedBeanWithNonPassivatingDecoratorFails()" name="testManagedBeanWithNonPassivatingDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonSerializableInterceptorClass.ManagedBeanWithNonSerializableInterceptorClassTest.testManagedBeanWithNonSerializableInterceptorClassNotOK()" name="testManagedBeanWithNonSerializableInterceptorClassNotOK" class="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonSerializableInterceptorClass.ManagedBeanWithNonSerializableInterceptorClassTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableManagedBeanHasPassivatingScope.NonPassivationManagedBeanHasPassivatingScopeTest.testSimpleWebBeanWithNonSerializableImplementationClassFails()" name="testSimpleWebBeanWithNonSerializableImplementationClassFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableManagedBeanHasPassivatingScope.NonPassivationManagedBeanHasPassivatingScopeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingBeanConstructor.PassivatingManagedBeanWithNonPassivatingBeanConstructorTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoConstructorParameterOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoConstructorParameterOfWebBeanWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingBeanConstructor.PassivatingManagedBeanWithNonPassivatingBeanConstructorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInitializerMethod.PassivatingManagedBeanWithNonPassivatingInitializerMethodTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoInitializerParameterOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoInitializerParameterOfWebBeanWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInitializerMethod.PassivatingManagedBeanWithNonPassivatingInitializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInjcetedField.PassivatingManagedBeanWithNonPassivatingInjcetedFieldTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoNonTransientFieldOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoNonTransientFieldOfWebBeanWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInjcetedField.PassivatingManagedBeanWithNonPassivatingInjcetedFieldTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingProducerMethodWithNonPassivatingParameter.PassivatingProducerMethodWithNonPassivatingParameterTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingProducerMethodWithNonPassivatingParameter.PassivatingProducerMethodWithNonPassivatingParameterTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.unserializableSimpleInjectedIntoPassivatingEnterpriseBean.UnserializableSimpleInjectedIntoPassivatingEnterpriseBeanTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoStatefulSessionBeanFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoStatefulSessionBeanFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.unserializableSimpleInjectedIntoPassivatingEnterpriseBean.UnserializableSimpleInjectedIntoPassivatingEnterpriseBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.unproxyable.UnproxyableManagedBeanTest.testNormalScopedUnproxyableBeanThrowsException()" name="testNormalScopedUnproxyableBeanThrowsException" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.unproxyable.UnproxyableManagedBeanTest"/>
      </group>
      <group name="deployment">
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest.testBeanDeclaresMultipleProducerFields()" name="testBeanDeclaresMultipleProducerFields" class="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest.testInjectingManager()" name="testInjectingManager" class="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest"/>
      </group>
      <group name="beanLifecycle">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveDuringBeanCreation()" name="testContextIsActiveDuringBeanCreation" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testBeanCreateInjectsDependenciesAndInvokesInitializerToInstantiateInstance()" name="testBeanCreateInjectsDependenciesAndInvokesInitializerToInstantiateInstance" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testContextCreatesNewInstanceForInjection()" name="testContextCreatesNewInstanceForInjection" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testContextualDestroyCatchesException()" name="testContextualDestroyCatchesException" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testContextualDestroyDisposesWhenNecessary()" name="testContextualDestroyDisposesWhenNecessary" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testCreateReturnsSameBeanPushed()" name="testCreateReturnsSameBeanPushed" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testDependentsDestroyedAfterPreDestroy()" name="testDependentsDestroyedAfterPreDestroy" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testManagedBean()" name="testManagedBean" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testPostConstructPreDestroy()" name="testPostConstructPreDestroy" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest.testContextCreatesNewInstanceForInjection()" name="testContextCreatesNewInstanceForInjection" class="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest"/>
      </group>
      <group name="beanDestruction">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testCallingCreationalContextReleaseDestroysDependents()" name="testCallingCreationalContextReleaseDestroysDependents" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDestroyingManagedParentDestroysDependentsOfSameBean()" name="testDestroyingManagedParentDestroysDependentsOfSameBean" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDestroyingSimpleParentDestroysDependents()" name="testDestroyingSimpleParentDestroysDependents" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
      </group>
      <group name="initializerMethod">
        <method signature="org.jboss.jsr299.tck.tests.implementation.initializer.InitializerMethodTest.testBindingTypeOnInitializerParameter()" name="testBindingTypeOnInitializerParameter" class="org.jboss.jsr299.tck.tests.implementation.initializer.InitializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.initializer.InitializerMethodTest.testMultipleInitializerMethodsAreCalled()" name="testMultipleInitializerMethodsAreCalled" class="org.jboss.jsr299.tck.tests.implementation.initializer.InitializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.initializer.broken.methodAnnotatedProduces.InitializerMethodAnnotatedProducesTest.testInitializerMethodAnnotatedProduces()" name="testInitializerMethodAnnotatedProduces" class="org.jboss.jsr299.tck.tests.implementation.initializer.broken.methodAnnotatedProduces.InitializerMethodAnnotatedProducesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.initializer.broken.parameterAnnotatedDisposes.ParameterAnnotatedDisposesTest.testInitializerMethodHasParameterAnnotatedDisposes()" name="testInitializerMethodHasParameterAnnotatedDisposes" class="org.jboss.jsr299.tck.tests.implementation.initializer.broken.parameterAnnotatedDisposes.ParameterAnnotatedDisposesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.initializer.broken.parameterAnnotatedObserves.ParameterAnnotatedObservesTest.testInitializerMethodHasParameterAnnotatedObserves()" name="testInitializerMethodHasParameterAnnotatedObserves" class="org.jboss.jsr299.tck.tests.implementation.initializer.broken.parameterAnnotatedObserves.ParameterAnnotatedObservesTest"/>
      </group>
      <group name="specialization">
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testSpecializedBeanExtendsManagedBean()" name="testSpecializedBeanExtendsManagedBean" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.directlyExtendsNothing.DirectlyExtendsNothingTest.testSpecializingClassDirectlyExtendsNothing()" name="testSpecializingClassDirectlyExtendsNothing" class="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.directlyExtendsNothing.DirectlyExtendsNothingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.directlyExtendsSimpleBean.DirectlyExtendsSimpleBeanTest.testSpecializingClassDirectlyExtendsSimpleBean()" name="testSpecializingClassDirectlyExtendsSimpleBean" class="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.directlyExtendsSimpleBean.DirectlyExtendsSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.implementInterfaceAndExtendsNothing.ImplementsInterfaceAndExtendsNothingTest.testSpecializingClassImplementsInterfaceAndExtendsNothing()" name="testSpecializingClassImplementsInterfaceAndExtendsNothing" class="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.implementInterfaceAndExtendsNothing.ImplementsInterfaceAndExtendsNothingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.extendejb.SpecializingBeanExtendsEnterpriseBeanTest.testSpecializingClassDirectlyExtendsEnterpriseBean()" name="testSpecializingClassDirectlyExtendsEnterpriseBean" class="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.extendejb.SpecializingBeanExtendsEnterpriseBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend1.SpecializingBeanImplementsInterfaceOnly.testSpecializingClassImplementsInterfaceAndExtendsNothing()" name="testSpecializingClassImplementsInterfaceAndExtendsNothing" class="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend1.SpecializingBeanImplementsInterfaceOnly"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend2.SpecializingBeanExtendsNothingTest.testSpecializingClassDirectlyExtendsNothing()" name="testSpecializingClassDirectlyExtendsNothing" class="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend2.SpecializingBeanExtendsNothingTest"/>
        <method signature="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend3.SpecializingClassExtendsNonSimpleBeanTest.testSpecializingClassExtendsNonSimpleBean()" name="testSpecializingClassExtendsNonSimpleBean" class="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend3.SpecializingClassExtendsNonSimpleBeanTest"/>
      </group>
      <group name="enterpriseBeans">
        <method signature="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.singletonWithConversationScope.SingletonWithConversationScopeTest.testSingletonWithConversationScopeFails()" name="testSingletonWithConversationScopeFails" class="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.singletonWithConversationScope.SingletonWithConversationScopeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithApplicationScope.StatelessWithApplicationScopeTest.testStatelessWithSessionScopeFails()" name="testStatelessWithSessionScopeFails" class="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithApplicationScope.StatelessWithApplicationScopeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithConversationScope.StatelessWithConversationScopeTest.testStatelessWithConversationScopeFails()" name="testStatelessWithConversationScopeFails" class="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithConversationScope.StatelessWithConversationScopeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithRequestScope.StatelessWithRequestScopeTest.testStatelessWithRequestScopeFails()" name="testStatelessWithRequestScopeFails" class="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithRequestScope.StatelessWithRequestScopeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithSessionScope.StatelessWithSessionScopeTest.testStatelessWithSessionScopeFails()" name="testStatelessWithSessionScopeFails" class="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithSessionScope.StatelessWithSessionScopeTest"/>
      </group>
      <group name="passivation">
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testBeanWithNonSerializableImplementationInjectedIntoTransientFieldOK()" name="testBeanWithNonSerializableImplementationInjectedIntoTransientFieldOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableDecoratorOK()" name="testManagedBeanWithSerializableDecoratorOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableImplementationClassOK()" name="testManagedBeanWithSerializableImplementationClassOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testManagedBeanWithSerializableInterceptorClassOK()" name="testManagedBeanWithSerializableInterceptorClassOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivationCapableProducerFieldIsOK()" name="testPassivationCapableProducerFieldIsOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivationCapableProducerMethodIsOK()" name="testPassivationCapableProducerMethodIsOK" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivationOccurs()" name="testPassivationOccurs" class="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingBeanConstructor.DecoratorWithNonPassivatingBeanConstructorTest.testPassivationCapableBeanWithNonPassivatingDecoratorBeanConstructorFails()" name="testPassivationCapableBeanWithNonPassivatingDecoratorBeanConstructorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingBeanConstructor.DecoratorWithNonPassivatingBeanConstructorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInitializerMethod.DecoratorWithNonPassivatingInitializerMethodTest.testPassivationCapableBeanWithNonPassivatingInitializerInDecoratorFails()" name="testPassivationCapableBeanWithNonPassivatingInitializerInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInitializerMethod.DecoratorWithNonPassivatingInitializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInjectedField.DecoratorWithNonPassivatingInjectedFieldTest.testPassivationCapableBeanWithNonPassivatingDecoratorInjectedFieldFails()" name="testPassivationCapableBeanWithNonPassivatingDecoratorInjectedFieldFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInjectedField.DecoratorWithNonPassivatingInjectedFieldTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptor.EnterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptorTest.testSessionBeanWithNonPassivatingBeanConstructorParamInInterceptorFails()" name="testSessionBeanWithNonPassivatingBeanConstructorParamInInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptor.EnterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingConstructorFieldInDecorator.EnterpriseBeanWithNonPassivatingFieldInDecoratorTest.testSessionBeanWithNonPassivatingConstructorFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingConstructorFieldInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingConstructorFieldInDecorator.EnterpriseBeanWithNonPassivatingFieldInDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest.testEnterpriseBeanWithNonPassivatingDecoratorFails()" name="testEnterpriseBeanWithNonPassivatingDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerInDecorator.EnterpriseBeanWithNonPassivatingInitializerInDecoratorTest.testSessionBeanWithNonPassivatingInitializerFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingInitializerFieldInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerInDecorator.EnterpriseBeanWithNonPassivatingInitializerInDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerParameterInInterceptor.EnterpriseBeanWithNonPassivatingInitializerParameterInInterceptorTest.testSessionBeanWithNonPassivatingInitializerParamInInterceptorFails()" name="testSessionBeanWithNonPassivatingInitializerParamInInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerParameterInInterceptor.EnterpriseBeanWithNonPassivatingInitializerParameterInInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInDecorator.EnterpriseBeanWithNonPassivatingInjectedFieldInDecoratorTest.testSessionBeanWithNonPassivatingInjectedFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingInjectedFieldInDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInDecorator.EnterpriseBeanWithNonPassivatingInjectedFieldInDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInInterceptor.EnterpriseBeanWithNonPassivatingInjectedFieldInInterceptorTest.testSessionBeanWithNonPassivatingInjectedFieldInInterceptorFails()" name="testSessionBeanWithNonPassivatingInjectedFieldInInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInInterceptor.EnterpriseBeanWithNonPassivatingInjectedFieldInInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonSerializableIntializerMethod.EnterpriseBeanWithNonSerializableIntializerMethodTest.testDependentBeanWithNonSerializableImplementationInStatefulSessionBeanInitializerFails()" name="testDependentBeanWithNonSerializableImplementationInStatefulSessionBeanInitializerFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonSerializableIntializerMethod.EnterpriseBeanWithNonSerializableIntializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.finalProducerFieldNotPassivationCapable.NonPassivationCapableProducerFieldTest.testNonPassivationCapableProducerFieldNotOk()" name="testNonPassivationCapableProducerFieldNotOk" class="org.jboss.jsr299.tck.tests.context.passivating.broken.finalProducerFieldNotPassivationCapable.NonPassivationCapableProducerFieldTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingBeanConstructorParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest.testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingBeanConstructorParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInitializerMethodParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest.testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInitializerMethodParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInjectedField.PassivationCapableBeanWithNonPassivatingInterceptorTest.testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInjectedField.PassivationCapableBeanWithNonPassivatingInterceptorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest.testManagedBeanWithNonPassivatingDecoratorFails()" name="testManagedBeanWithNonPassivatingDecoratorFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonSerializableInterceptorClass.ManagedBeanWithNonSerializableInterceptorClassTest.testManagedBeanWithNonSerializableInterceptorClassNotOK()" name="testManagedBeanWithNonSerializableInterceptorClassNotOK" class="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonSerializableInterceptorClass.ManagedBeanWithNonSerializableInterceptorClassTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableManagedBeanHasPassivatingScope.NonPassivationManagedBeanHasPassivatingScopeTest.testSimpleWebBeanWithNonSerializableImplementationClassFails()" name="testSimpleWebBeanWithNonSerializableImplementationClassFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableManagedBeanHasPassivatingScope.NonPassivationManagedBeanHasPassivatingScopeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableProducerField.NonPassivationCapableProducerFieldTest.testNonPassivationCapableProducerFieldNotOk()" name="testNonPassivationCapableProducerFieldNotOk" class="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableProducerField.NonPassivationCapableProducerFieldTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableProducerMethod.NonPassivationCapableProducerMethodTest.testNonPassivationCapableProducerMethodNotOk()" name="testNonPassivationCapableProducerMethodNotOk" class="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableProducerMethod.NonPassivationCapableProducerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingBeanConstructor.PassivatingManagedBeanWithNonPassivatingBeanConstructorTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoConstructorParameterOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoConstructorParameterOfWebBeanWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingBeanConstructor.PassivatingManagedBeanWithNonPassivatingBeanConstructorTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInitializerMethod.PassivatingManagedBeanWithNonPassivatingInitializerMethodTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoInitializerParameterOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoInitializerParameterOfWebBeanWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInitializerMethod.PassivatingManagedBeanWithNonPassivatingInitializerMethodTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInjcetedField.PassivatingManagedBeanWithNonPassivatingInjcetedFieldTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoNonTransientFieldOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoNonTransientFieldOfWebBeanWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInjcetedField.PassivatingManagedBeanWithNonPassivatingInjcetedFieldTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingProducerMethodWithNonPassivatingParameter.PassivatingProducerMethodWithNonPassivatingParameterTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingProducerMethodWithNonPassivatingParameter.PassivatingProducerMethodWithNonPassivatingParameterTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.passivating.broken.unserializableSimpleInjectedIntoPassivatingEnterpriseBean.UnserializableSimpleInjectedIntoPassivatingEnterpriseBeanTest.testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoStatefulSessionBeanFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoStatefulSessionBeanFails" class="org.jboss.jsr299.tck.tests.context.passivating.broken.unserializableSimpleInjectedIntoPassivatingEnterpriseBean.UnserializableSimpleInjectedIntoPassivatingEnterpriseBeanTest"/>
      </group>
      <group name="injectionPoint">
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testApiTypeInjectionPoint()" name="testApiTypeInjectionPoint" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testCurrentBinding()" name="testCurrentBinding" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testDependentScope()" name="testDependentScope" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetAnnotatedField()" name="testGetAnnotatedField" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetAnnotatedParameter()" name="testGetAnnotatedParameter" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetBean()" name="testGetBean" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetBindingTypes()" name="testGetBindingTypes" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetMemberConstructor()" name="testGetMemberConstructor" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetMemberField()" name="testGetMemberField" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetMemberMethod()" name="testGetMemberMethod" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testGetType()" name="testGetType" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testIsTransient()" name="testIsTransient" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest.testPassivationCapability()" name="testPassivationCapability" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.normal.scope.NormalScopedBeanWithInjectionPoint.testSessionScopedBeanWithInjectionPoint()" name="testSessionScopedBeanWithInjectionPoint" class="org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.normal.scope.NormalScopedBeanWithInjectionPoint"/>
      </group>
      <group name="injection">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveDuringInjection()" name="testContextIsActiveDuringInjection" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentBeanIsDependentObjectOfBeanInjectedInto()" name="testDependentBeanIsDependentObjectOfBeanInjectedInto" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceNotSharedBetweenInjectionPoints()" name="testInstanceNotSharedBetweenInjectionPoints" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest.testFieldInjectedFromProducerMethod()" name="testFieldInjectedFromProducerMethod" class="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testCreateInjectsFieldsDeclaredInJava()" name="testCreateInjectsFieldsDeclaredInJava" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injection.InjectionTest.testInjectionPerformsBoxingIfNecessary()" name="testInjectionPerformsBoxingIfNecessary" class="org.jboss.jsr299.tck.tests.lookup.injection.InjectionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injection.nullableBean.NullableBeanTest.testPrimitiveInjectionPointResolvesToNullableWebBean()" name="testPrimitiveInjectionPointResolvesToNullableWebBean" class="org.jboss.jsr299.tck.tests.lookup.injection.nullableBean.NullableBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest.testInjectingManager()" name="testInjectingManager" class="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testAllQualifiersSpecifiedForResolutionMustAppearOnBean()" name="testAllQualifiersSpecifiedForResolutionMustAppearOnBean" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.decorator.DecoratorNotInjectedTest.testDecoratorNotResolved()" name="testDecoratorNotResolved" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.decorator.DecoratorNotInjectedTest"/>
      </group>
      <group name="inheritance">
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testNonStaticObserverMethodIndirectlyInherited()" name="testNonStaticObserverMethodIndirectlyInherited" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
        <method signature="org.jboss.jsr299.tck.tests.event.EventTest.testNonStaticObserverMethodInherited()" name="testNonStaticObserverMethodInherited" class="org.jboss.jsr299.tck.tests.event.EventTest"/>
      </group>
      <group name="lifecycleCallbacks">
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testContextualDestroyDisposesWhenNecessary()" name="testContextualDestroyDisposesWhenNecessary" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testPostConstructPreDestroy()" name="testPostConstructPreDestroy" class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest"/>
      </group>
      <group name="new">
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasNoDisposerMethods()" name="testNewBeanHasNoDisposerMethods" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasNoObservers()" name="testNewBeanHasNoObservers" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasNoProducerFields()" name="testNewBeanHasNoProducerFields" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasNoProducerMethods()" name="testNewBeanHasNoProducerMethods" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasNoStereotypes()" name="testNewBeanHasNoStereotypes" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasSameConstructor()" name="testNewBeanHasSameConstructor" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasSameInitializers()" name="testNewBeanHasSameInitializers" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanHasSameInjectedFields()" name="testNewBeanHasSameInjectedFields" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest.testNewBeanIsDependentScoped()" name="testNewBeanIsDependentScoped" class="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest"/>
      </group>
      <group name="annotationDefinition">
        <method signature="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest.testQualifierDeclaresBindingAnnotation()" name="testQualifierDeclaresBindingAnnotation" class="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.definition.scope.ScopeDefinitionTest.testScopeTypeDeclaresScopeTypeAnnotation()" name="testScopeTypeDeclaresScopeTypeAnnotation" class="org.jboss.jsr299.tck.tests.definition.scope.ScopeDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.definition.scope.ScopeDefinitionTest.testScopeTypeHasCorrectTarget()" name="testScopeTypeHasCorrectTarget" class="org.jboss.jsr299.tck.tests.definition.scope.ScopeDefinitionTest"/>
      </group>
      <group name="el">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenEvaluatingElExpression()" name="testContextIsActiveWhenEvaluatingElExpression" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenElEvaluationCompletes()" name="testDependentsDestroyedWhenElEvaluationCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForElEvaluationNotShared()" name="testInstanceUsedForElEvaluationNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.byname.duplicateNameResolution.DuplicateNameResolutionTest.testDuplicateNamedBeans()" name="testDuplicateNamedBeans" class="org.jboss.jsr299.tck.tests.lookup.byname.duplicateNameResolution.DuplicateNameResolutionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.byname.duplicatePrefixResolution.DuplicateNamePrefixResolutionTest.testDuplicateBeanNamePrefix()" name="testDuplicateBeanNamePrefix" class="org.jboss.jsr299.tck.tests.lookup.byname.duplicatePrefixResolution.DuplicateNamePrefixResolutionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest.testELResolverReturnsContextualInstance()" name="testELResolverReturnsContextualInstance" class="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest.testUnresolvedNameReturnsNull()" name="testUnresolvedNameReturnsNull" class="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest"/>
      </group>
      <group name="producerMethod">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenInvokingProducerMethod()" name="testContextIsActiveWhenInvokingProducerMethod" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenProducerMethodCompletes()" name="testDependentsDestroyedWhenProducerMethodCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForProducerFieldNotShared()" name="testInstanceUsedForProducerFieldNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForProducerMethodNotShared()" name="testInstanceUsedForProducerMethodNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.definition.bean.BeanDefinitionTest.testIsNullable()" name="testIsNullable" class="org.jboss.jsr299.tck.tests.definition.bean.BeanDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest.testFieldInjectedFromProducerMethod()" name="testFieldInjectedFromProducerMethod" class="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterAnnotatedDisposes.ParameterAnnotatedDisposesTest.testProducerMethodWithParameterAnnotatedDisposes()" name="testProducerMethodWithParameterAnnotatedDisposes" class="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterAnnotatedDisposes.ParameterAnnotatedDisposesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterAnnotatedObserves.ParameterAnnotatedObservesTest.testProducerMethodWithParameterAnnotatedObserves()" name="testProducerMethodWithParameterAnnotatedObserves" class="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterAnnotatedObserves.ParameterAnnotatedObservesTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterizedTypeWithWildcard.ParameterizedTypeWithWildcardTest.testParameterizedReturnTypeWithWildcard()" name="testParameterizedReturnTypeWithWildcard" class="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterizedTypeWithWildcard.ParameterizedTypeWithWildcardTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testApiTypeForArrayTypeReturn()" name="testApiTypeForArrayTypeReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testApiTypeForClassReturn()" name="testApiTypeForClassReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testApiTypeForInterfaceReturn()" name="testApiTypeForInterfaceReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testApiTypeForPrimitiveReturn()" name="testApiTypeForPrimitiveReturn" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testBindingType()" name="testBindingType" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testDefaultBindingType()" name="testDefaultBindingType" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testDefaultNamedMethod()" name="testDefaultNamedMethod" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testNamedMethod()" name="testNamedMethod" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testParameterizedReturnType()" name="testParameterizedReturnType" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testProducerOnNonBean()" name="testProducerOnNonBean" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testScopeType()" name="testScopeType" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testStaticDisposerMethod()" name="testStaticDisposerMethod" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testStaticMethod()" name="testStaticMethod" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testStereotypeSpecifiesScope()" name="testStereotypeSpecifiesScope" class="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateFailsIfProducerReturnsNullAndNotDependent()" name="testCreateFailsIfProducerReturnsNullAndNotDependent" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateRethrowsUncheckedException()" name="testCreateRethrowsUncheckedException" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateReturnsNullIfProducerDoesAndDependent()" name="testCreateReturnsNullIfProducerDoesAndDependent" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateWrapsCheckedExceptionAndRethrows()" name="testCreateWrapsCheckedExceptionAndRethrows" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testProducerMethodBeanCreate()" name="testProducerMethodBeanCreate" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testProducerMethodBeanDestroy()" name="testProducerMethodBeanDestroy" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testProducerMethodFromMostSpecializedBeanUsed()" name="testProducerMethodFromMostSpecializedBeanUsed" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testProducerMethodInvokedOnCreate()" name="testProducerMethodInvokedOnCreate" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testWhenApplicationInvokesProducerMethodParametersAreNotInjected()" name="testWhenApplicationInvokesProducerMethodParametersAreNotInjected" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injection.InjectionTest.testInjectionPerformsBoxingIfNecessary()" name="testInjectionPerformsBoxingIfNecessary" class="org.jboss.jsr299.tck.tests.lookup.injection.InjectionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.injection.nullableBean.NullableBeanTest.testPrimitiveInjectionPointResolvesToNullableWebBean()" name="testPrimitiveInjectionPointResolvesToNullableWebBean" class="org.jboss.jsr299.tck.tests.lookup.injection.nullableBean.NullableBeanTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testResolveByTypeWithArray()" name="testResolveByTypeWithArray" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.primitive.PrimitiveInjectionPointTest.testPrimitiveInjectionPointResolvedToNonPrimitiveProducerMethod()" name="testPrimitiveInjectionPointResolvedToNonPrimitiveProducerMethod" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.primitive.PrimitiveInjectionPointTest"/>
      </group>
      <group name="observerMethod">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenCreatingObserverMethodInstance()" name="testContextIsActiveWhenCreatingObserverMethodInstance" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenObserverMethodEvaluationCompletes()" name="testDependentsDestroyedWhenObserverMethodEvaluationCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForObserverMethodNotShared()" name="testInstanceUsedForObserverMethodNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.definition.constructorHasObservesParameter.ConstructorHasObservesParameterTest.testConstructorHasObservesParameter()" name="testConstructorHasObservesParameter" class="org.jboss.jsr299.tck.tests.implementation.simple.definition.constructorHasObservesParameter.ConstructorHasObservesParameterTest"/>
      </group>
      <group name="policy">
        <method signature="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest.testPolicyNotAvailableInNonDeploymentArchive()" name="testPolicyNotAvailableInNonDeploymentArchive" class="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.PolicyAvailabilityTest.testAnyEnabledPolicyStereotypeMakesPolicyEnabled()" name="testAnyEnabledPolicyStereotypeMakesPolicyEnabled" class="org.jboss.jsr299.tck.tests.policy.PolicyAvailabilityTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.PolicyAvailabilityTest.testPolicyAvailability()" name="testPolicyAvailability" class="org.jboss.jsr299.tck.tests.policy.PolicyAvailabilityTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.broken.incorrect.name.NoClassWithSpecifiedNameTest.test()" name="test" class="org.jboss.jsr299.tck.tests.policy.broken.incorrect.name.NoClassWithSpecifiedNameTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.broken.incorrect.name.stereotype.NoAnnotationWithSpecifiedNameTest.test()" name="test" class="org.jboss.jsr299.tck.tests.policy.broken.incorrect.name.stereotype.NoAnnotationWithSpecifiedNameTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.broken.not.policy.ClassIsNotPolicyTest.test()" name="test" class="org.jboss.jsr299.tck.tests.policy.broken.not.policy.ClassIsNotPolicyTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.broken.not.policy.stereotype.ClassIsNotPolicyTest.test()" name="test" class="org.jboss.jsr299.tck.tests.policy.broken.not.policy.stereotype.ClassIsNotPolicyTest"/>
        <method signature="org.jboss.jsr299.tck.tests.policy.broken.same.type.twice.SameTypeListedTwiceTest.test()" name="test" class="org.jboss.jsr299.tck.tests.policy.broken.same.type.twice.SameTypeListedTwiceTest"/>
      </group>
      <group name="disposalMethod">
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testContextIsActiveWhenInvokingDisposalMethod()" name="testContextIsActiveWhenInvokingDisposalMethod" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testDependentsDestroyedWhenDisposerMethodCompletes()" name="testDependentsDestroyedWhenDisposerMethodCompletes" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest.testInstanceUsedForDisposalMethodNotShared()" name="testInstanceUsedForDisposalMethodNotShared" class="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.DisposalMethodDefinitionTest.testDisposalMethodParametersGetInjected()" name="testDisposalMethodParametersGetInjected" class="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.DisposalMethodDefinitionTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testProducerMethodBeanDestroy()" name="testProducerMethodBeanDestroy" class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest"/>
        <method signature="org.jboss.jsr299.tck.tests.implementation.simple.definition.constructorHasDisposesParameter.ConstructorHasDisposesParameterTest.testConstructorHasDisposesParameter()" name="testConstructorHasDisposesParameter" class="org.jboss.jsr299.tck.tests.implementation.simple.definition.constructorHasDisposesParameter.ConstructorHasDisposesParameterTest"/>
      </group>
    </groups>
    <test name="CDI TCK">
      <class name="org.jboss.jsr299.tck.tests.deployment.lifecycle.broken.failsDuringBeanDiscovery.DeploymentFailureTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDeploymentFailsBeforeNotifyingObserversAfterBeanDiscovery()" name="testDeploymentFailsBeforeNotifyingObserversAfterBeanDiscovery" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend3.SpecializingClassExtendsNonSimpleBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassExtendsNonSimpleBean()" name="testSpecializingClassExtendsNonSimpleBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.names.SpecializingAndSpecializedBeanHasNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingAndSpecializedBeanHasName()" name="testSpecializingAndSpecializedBeanHasName" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.unproxyable.UnproxyableManagedBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNormalScopedUnproxyableBeanThrowsException()" name="testNormalScopedUnproxyableBeanThrowsException" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInInterceptor.EnterpriseBeanWithNonPassivatingInjectedFieldInInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="64" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testSessionBeanWithNonPassivatingInjectedFieldInInterceptorFails()" name="testSessionBeanWithNonPassivatingInjectedFieldInInterceptorFails" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="46" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testBeanCreateInjectsDependenciesAndInvokesInitializerToInstantiateInstance()" name="testBeanCreateInjectsDependenciesAndInvokesInitializerToInstantiateInstance" duration-ms="5" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testContextCreatesNewInstanceForInjection()" name="testContextCreatesNewInstanceForInjection" duration-ms="3" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testContextualDestroyCatchesException()" name="testContextualDestroyCatchesException" duration-ms="3" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testContextualDestroyDisposesWhenNecessary()" name="testContextualDestroyDisposesWhenNecessary" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testCreationExceptionWrapsCheckedExceptionThrownFromCreate()" name="testCreationExceptionWrapsCheckedExceptionThrownFromCreate" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
          <exception class="javax.enterprise.inject.CreationException">
            <full-stacktrace>
              <![CDATA[javax.enterprise.inject.CreationException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.jboss.weld.util.reflection.SecureReflections$16.work(SecureReflections.java:344)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInstantiation(SecureReflectionAccess.java:173)
	at org.jboss.weld.util.reflection.SecureReflections.newInstance(SecureReflections.java:341)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:33)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:45)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:85)
	at org.jboss.weld.injection.ConstructorInjectionPoint.newInstance(ConstructorInjectionPoint.java:125)
	at org.jboss.weld.bean.ManagedBean.createInstance(ManagedBean.java:336)
	at org.jboss.weld.bean.ManagedBean$ManagedBeanInjectionTarget.produce(ManagedBean.java:200)
	at org.jboss.weld.bean.ManagedBean.create(ManagedBean.java:292)
	at org.jboss.weld.context.unbound.DependentContextImpl.get(DependentContextImpl.java:68)
	at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:599)
	at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:626)
	at org.jboss.jsr299.tck.impl.OldSPIBridge.getInstanceByType(OldSPIBridge.java:42)
	at org.jboss.jsr299.tck.AbstractJSR299Test.getInstanceByType(AbstractJSR299Test.java:153)
	at org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testCreationExceptionWrapsCheckedExceptionThrownFromCreate(SimpleBeanLifecycleTest.java:345)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: java.lang.Exception
	at org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.Lorry_Broken.<init>(Lorry_Broken.java:24)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.jboss.weld.introspector.jlr.WeldConstructorImpl.newInstance(WeldConstructorImpl.java:206)
	at org.jboss.weld.injection.ConstructorInjectionPoint.newInstance(ConstructorInjectionPoint.java:117)
	... 44 more
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testCreateReturnsSameBeanPushed()" name="testCreateReturnsSameBeanPushed" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testCreateInjectsFieldsDeclaredInJava()" name="testCreateInjectsFieldsDeclaredInJava" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testIndirectSubClassInheritsPostConstructOnSuperclass()" name="testIndirectSubClassInheritsPostConstructOnSuperclass" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testIndirectSubClassInheritsPreDestroyOnSuperclass()" name="testIndirectSubClassInheritsPreDestroyOnSuperclass" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testDependentsDestroyedAfterPreDestroy()" name="testDependentsDestroyedAfterPreDestroy" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionOfParametersIntoBeanConstructor()" name="testInjectionOfParametersIntoBeanConstructor" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testManagedBean()" name="testManagedBean" duration-ms="2" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testPostConstructPreDestroy()" name="testPostConstructPreDestroy" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierTypeAnnotatedConstructor()" name="testQualifierTypeAnnotatedConstructor" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSerializeRequestScoped()" name="testSerializeRequestScoped" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSerializeSessionScoped()" name="testSerializeSessionScoped" duration-ms="3" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializedBeanExtendsManagedBean()" name="testSpecializedBeanExtendsManagedBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSubClassDoesNotInheritPostConstructOnSuperclassBlockedByIntermediateClass()" name="testSubClassDoesNotInheritPostConstructOnSuperclassBlockedByIntermediateClass" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSubClassInheritsPreDestroyOnSuperclass()" name="testSubClassInheritsPreDestroyOnSuperclass" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSubClassInheritsPostConstructOnSuperclass()" name="testSubClassInheritsPostConstructOnSuperclass" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSubClassDoesNotInheritPreDestroyConstructOnSuperclassBlockedByIntermediateClass()" name="testSubClassDoesNotInheritPreDestroyConstructOnSuperclassBlockedByIntermediateClass" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testUncheckedExceptionThrownFromCreateNotWrapped()" name="testUncheckedExceptionThrownFromCreateNotWrapped" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
          <exception class="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.FooException">
            <full-stacktrace>
              <![CDATA[org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.FooException
	at org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.Van_Broken.<init>(Van_Broken.java:24)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.jboss.weld.introspector.jlr.WeldConstructorImpl.newInstance(WeldConstructorImpl.java:206)
	at org.jboss.weld.injection.ConstructorInjectionPoint.newInstance(ConstructorInjectionPoint.java:117)
	at org.jboss.weld.bean.ManagedBean.createInstance(ManagedBean.java:336)
	at org.jboss.weld.bean.ManagedBean$ManagedBeanInjectionTarget.produce(ManagedBean.java:200)
	at org.jboss.weld.bean.ManagedBean.create(ManagedBean.java:292)
	at org.jboss.weld.context.unbound.DependentContextImpl.get(DependentContextImpl.java:68)
	at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:599)
	at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:626)
	at org.jboss.jsr299.tck.impl.OldSPIBridge.getInstanceByType(OldSPIBridge.java:42)
	at org.jboss.jsr299.tck.AbstractJSR299Test.getInstanceByType(AbstractJSR299Test.java:153)
	at org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest.testUncheckedExceptionThrownFromCreateNotWrapped(SimpleBeanLifecycleTest.java:353)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.policy.PolicyAvailabilityTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAnyEnabledPolicyStereotypeMakesPolicyEnabled()" name="testAnyEnabledPolicyStereotypeMakesPolicyEnabled" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testIsAlternative()" name="testIsAlternative" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testProducerPoliciesOnMethodAndField()" name="testProducerPoliciesOnMethodAndField" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testPolicyAvailability()" name="testPolicyAvailability" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testProducerPoliciesOnClass()" name="testProducerPoliciesOnClass" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.implicit.ImplicitEventTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="38" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testImplicitEventExistsForEachEventType()" name="testImplicitEventExistsForEachEventType" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testImplicitEventHasDependentScope()" name="testImplicitEventHasDependentScope" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testImplicitEventHasAllExplicitBindingTypes()" name="testImplicitEventHasAllExplicitBindingTypes" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testImplicitEventHasImplementation()" name="testImplicitEventHasImplementation" duration-ms="4" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testImplicitEventIsPassivationCapable()" name="testImplicitEventIsPassivationCapable" duration-ms="13" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testImplicitEventHasNoName()" name="testImplicitEventHasNoName" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.byname.duplicatePrefixResolution.DuplicateNamePrefixResolutionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testDuplicateBeanNamePrefix()" name="testDuplicateBeanNamePrefix" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.enterprise.nonbusiness.ProducerMethodNotBusinessMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="30" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodOnSessionBeanMustBeBusinessMethod()" name="testProducerMethodOnSessionBeanMustBeBusinessMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.interceptor.InterceptorNotResolvedTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorNotResolved()" name="testInterceptorNotResolved" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerParameterInInterceptor.EnterpriseBeanWithNonPassivatingInitializerParameterInInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="73" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testSessionBeanWithNonPassivatingInitializerParamInInterceptorFails()" name="testSessionBeanWithNonPassivatingInitializerParamInInterceptorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.isDisposer.ObserverMethodAnnotatedDisposesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodWithDisposesParamFails()" name="testObserverMethodWithDisposesParamFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.notAllDecoratedTypesImplemented.NotAllDecoratedTypesImplementedTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="31" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNotAllDecoratedTypesImplemented()" name="testNotAllDecoratedTypesImplemented" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.member.InterceptorBindingTypeWithMemberTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorBindingTypeWithMember()" name="testInterceptorBindingTypeWithMember" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorBindingTypeWithNonBindingMember()" name="testInterceptorBindingTypeWithNonBindingMember" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.unproxyable.finalMethod.FinalMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testClassWithFinalMethodCannotBeProxied()" name="testClassWithFinalMethodCannotBeProxied" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.enabledDecoratorIsNotDecorator.EnabledDecoratorNotADecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testEnabledDecoratorNotADecoratorTest()" name="testEnabledDecoratorNotADecoratorTest" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.qualifier.QualifierDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="31" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testFieldInjectedFromProducerMethod()" name="testFieldInjectedFromProducerMethod" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultQualifierForInjectionPoint()" name="testDefaultQualifierForInjectionPoint" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultQualifierDeclaredInJava()" name="testDefaultQualifierDeclaredInJava" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierDeclaredInheritedIsBlockedByIntermediateClass()" name="testQualifierDeclaredInheritedIsBlockedByIntermediateClass" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleQualifiers()" name="testMultipleQualifiers" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierDeclaredInheritedIsIndirectlyInherited()" name="testQualifierDeclaredInheritedIsIndirectlyInherited" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierDeclaresBindingAnnotation()" name="testQualifierDeclaresBindingAnnotation" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierDeclaredInheritedIsInherited()" name="testQualifierDeclaredInheritedIsInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierNotDeclaredInheritedIsNotInherited()" name="testQualifierNotDeclaredInheritedIsNotInherited" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifierNotDeclaredInheritedIsNotIndirectlyInherited()" name="testQualifierNotDeclaredInheritedIsNotIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifiersDeclaredInJava()" name="testQualifiersDeclaredInJava" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.producer.method.broken.specializesStaticMethod.SpecializesStaticMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializedStaticMethod()" name="testSpecializedStaticMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.finalBeanMethod.FinalBeanMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="38" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testAppliesToFinalMethodOnManagedBeanClass()" name="testAppliesToFinalMethodOnManagedBeanClass" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.policy.broken.same.type.twice.SameTypeListedTwiceTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="14" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="test()" name="test" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.nonDecoratorWithDecorates.NonDecoratorWithDecoratesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="23" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNonDecoratorWithDecoratesAnnotationNotOK()" name="testNonDecoratorWithDecoratesAnnotationNotOK" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.unresolved.UnsatisfiedInjectableReferenceTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testUnsatisfiedReference()" name="testUnsatisfiedReference" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.UnsatisfiedResolutionException">
            <message>
              <![CDATA[WELD-001308 Unable to resolve any beans for Types: [class org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.unresolved.InjectedBean]; Bindings: [QualifierInstance{annotationClass=interface javax.enterprise.inject.Any, values={}, hashCode=-1070748488}, QualifierInstance{annotationClass=interface javax.enterprise.inject.Default, values={}, hashCode=-1524153647}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.UnsatisfiedResolutionException: WELD-001308 Unable to resolve any beans for Types: [class org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.unresolved.InjectedBean]; Bindings: [QualifierInstance{annotationClass=interface javax.enterprise.inject.Any, values={}, hashCode=-1070748488}, QualifierInstance{annotationClass=interface javax.enterprise.inject.Default, values={}, hashCode=-1524153647}]
	at org.jboss.weld.manager.BeanManagerImpl.getBean(BeanManagerImpl.java:690)
	at org.jboss.weld.manager.BeanManagerImpl.getInjectableReference(BeanManagerImpl.java:679)
	at org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.unresolved.UnsatisfiedInjectableReferenceTest.testUnsatisfiedReference(UnsatisfiedInjectableReferenceTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.dependency.resolution.broken.ambiguous.AmbiguousDependencyTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testAmbiguousDependency()" name="testAmbiguousDependency" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInitializerInDecorator.EnterpriseBeanWithNonPassivatingInitializerInDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="69" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testSessionBeanWithNonPassivatingInitializerFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingInitializerFieldInDecoratorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.manager.ManagerTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testContainerProvidesManagerBean()" name="testContainerProvidesManagerBean" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInjectingManager()" name="testInjectingManager" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testManagerBeanIsDependentScoped()" name="testManagerBeanIsDependentScoped" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testManagerBeanIsPassivationCapable()" name="testManagerBeanIsPassivationCapable" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testManagerBeanHasCurrentBinding()" name="testManagerBeanHasCurrentBinding" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetReferenceReturnsContextualInstance()" name="testGetReferenceReturnsContextualInstance" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingBeanConstructor.PassivatingManagedBeanWithNonPassivatingBeanConstructorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="44" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoConstructorParameterOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoConstructorParameterOfWebBeanWithPassivatingScopeFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.aroundInvoke.AroundInvokeInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="537" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="testPackagePrivateAroundInvokeInterceptor()" name="testPackagePrivateAroundInvokeInterceptor" duration-ms="10" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="testPrivateAroundInvokeInterceptor()" name="testPrivateAroundInvokeInterceptor" duration-ms="1" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="testProtectedAroundInvokeInterceptor()" name="testProtectedAroundInvokeInterceptor" duration-ms="1" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterizedTypeWithTypeParameter2.ParameterizedTypeWithTypeParameterTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testParameterizedType()" name="testParameterizedType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.conditional.ConditionalObserverTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="30" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testConditionalObserver()" name="testConditionalObserver" duration-ms="2" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testNotifyEnumerationContainsNotifyValues()" name="testNotifyEnumerationContainsNotifyValues" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodInvokedOnReturnedInstanceFromContext()" name="testObserverMethodInvokedOnReturnedInstanceFromContext" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.checkedException.CheckedExceptionWrappedTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testNonTransactionalObserverThrowsCheckedExceptionIsWrappedAndRethrown()" name="testNonTransactionalObserverThrowsCheckedExceptionIsWrappedAndRethrown" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="javax.enterprise.event.ObserverException">
            <full-stacktrace>
              <![CDATA[javax.enterprise.event.ObserverException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.jboss.weld.util.reflection.SecureReflections$16.work(SecureReflections.java:344)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInstantiation(SecureReflectionAccess.java:173)
	at org.jboss.weld.util.reflection.SecureReflections.newInstance(SecureReflections.java:341)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:33)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:73)
	at org.jboss.weld.injection.MethodInjectionPoint.invokeOnInstanceWithSpecialValue(MethodInjectionPoint.java:162)
	at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:245)
	at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:233)
	at org.jboss.weld.event.ObserverMethodImpl.notify(ObserverMethodImpl.java:213)
	at org.jboss.weld.event.ObserverNotifier.notifyObserver(ObserverNotifier.java:117)
	at org.jboss.weld.event.TransactionalObserverNotifier.notifyObserver(TransactionalObserverNotifier.java:44)
	at org.jboss.weld.event.ObserverNotifier.notifyObservers(ObserverNotifier.java:85)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:75)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:70)
	at org.jboss.weld.manager.BeanManagerImpl.fireEvent(BeanManagerImpl.java:553)
	at org.jboss.jsr299.tck.tests.event.observer.checkedException.CheckedExceptionWrappedTest.testNonTransactionalObserverThrowsCheckedExceptionIsWrappedAndRethrown(CheckedExceptionWrappedTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: org.jboss.jsr299.tck.tests.event.observer.checkedException.TeaCupPomeranian$TooSmallException
	at org.jboss.jsr299.tck.tests.event.observer.checkedException.TeaCupPomeranian.observeAnotherSimpleEvent(TeaCupPomeranian.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:267)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137)
	at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:263)
	at org.jboss.weld.introspector.jlr.WeldMethodImpl.invokeOnInstance(WeldMethodImpl.java:170)
	at org.jboss.weld.introspector.ForwardingWeldMethod.invokeOnInstance(ForwardingWeldMethod.java:51)
	at org.jboss.weld.injection.MethodInjectionPoint.invokeOnInstanceWithSpecialValue(MethodInjectionPoint.java:154)
	... 45 more
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.policy.broken.not.policy.ClassIsNotPolicyTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="test()" name="test" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.broken.initializerUnallowed.InitializerUnallowedDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerUnallowed()" name="testInitializerUnallowed" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.order.InvocationOrderTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="63" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testInvocationOrder()" name="testInvocationOrder" duration-ms="2" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injection.nullableBean.NullableBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testPrimitiveInjectionPointResolvesToNullableWebBean()" name="testPrimitiveInjectionPointResolvesToNullableWebBean" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.sameName.SameNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingAndSpecializedBeanHasName()" name="testSpecializingAndSpecializedBeanHasName" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.unproxyable.privateConstructor.PrivateConstructorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testClassWithPrivateConstructor()" name="testClassWithPrivateConstructor" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.inject.broken.delegateProducerMethod.DelegateInjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="38" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorDelegateInjectionPoints()" name="testDecoratorDelegateInjectionPoints" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithSessionScope.StatelessWithSessionScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="37" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testStatelessWithSessionScopeFails()" name="testStatelessWithSessionScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInitializerMethodParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="35" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.broken.unresolvedMethod.UnresolvedDisposalMethodDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testUnresolvedDisposalMethod()" name="testUnresolvedDisposalMethod" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.broken.producesUnallowed.ProducesUnallowedDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testProducesUnallowed()" name="testProducesUnallowed" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.notBusinessMethod.EJBObserverMethodNotBusinessMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodOnEnterpriseBeanNotBusinessMethodOrStaticFails()" name="testObserverMethodOnEnterpriseBeanNotBusinessMethodOrStaticFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableManagedBeanHasPassivatingScope.NonPassivationManagedBeanHasPassivatingScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="41" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleWebBeanWithNonSerializableImplementationClassFails()" name="testSimpleWebBeanWithNonSerializableImplementationClassFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeInjectionPoint()" name="testApiTypeInjectionPoint" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testCurrentBinding()" name="testCurrentBinding" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testDependentScope()" name="testDependentScope" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetAnnotatedField()" name="testGetAnnotatedField" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetMemberConstructor()" name="testGetMemberConstructor" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetBean()" name="testGetBean" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetBindingTypes()" name="testGetBindingTypes" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetAnnotatedParameter()" name="testGetAnnotatedParameter" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetMemberMethod()" name="testGetMemberMethod" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetMemberField()" name="testGetMemberField" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetType()" name="testGetType" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testIsTransient()" name="testIsTransient" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapability()" name="testPassivationCapability" duration-ms="3" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.dynamic.builtin.BuiltinInstanceTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceIsPassivationCapable()" name="testInstanceIsPassivationCapable" duration-ms="7" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceProvidedForEveryLegalBeanType()" name="testInstanceProvidedForEveryLegalBeanType" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testScopeOfBuiltinInstance()" name="testScopeOfBuiltinInstance" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNameOfBuiltinInstance()" name="testNameOfBuiltinInstance" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.resolve.binding.ResolvingChecksBindingTypeMembersTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testResolvingChecksBindingTypeMembers()" name="testResolvingChecksBindingTypeMembers" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.EventTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="34" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testGetTransactionPhaseOnObserverMethod()" name="testGetTransactionPhaseOnObserverMethod" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventObjectContainsTypeVariablesWhenResolvingFails()" name="testEventObjectContainsTypeVariablesWhenResolvingFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000819 Cannot provide an event type parameterized with a type parameter class java.util.ArrayList<E>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000819 Cannot provide an event type parameterized with a type parameter class java.util.ArrayList<E>
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:56)
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:62)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:65)
	at org.jboss.weld.manager.BeanManagerImpl.resolveObserverMethods(BeanManagerImpl.java:422)
	at org.jboss.jsr299.tck.tests.event.EventTest.eventObjectContainsTypeVariables(EventTest.java:103)
	at org.jboss.jsr299.tck.tests.event.EventTest.testEventObjectContainsTypeVariablesWhenResolvingFails(EventTest.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testNonStaticObserverMethodIndirectlyInherited()" name="testNonStaticObserverMethodIndirectlyInherited" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceOfBeanForEveryEnabledObserverMethod()" name="testInstanceOfBeanForEveryEnabledObserverMethod" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverCalledOnMostSpecializedInstance()" name="testObserverCalledOnMostSpecializedInstance" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testNonStaticObserverMethodInherited()" name="testNonStaticObserverMethodInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodNotifiedWhenBindingsMatch()" name="testObserverMethodNotifiedWhenBindingsMatch" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStaticObserverMethodInvoked()" name="testStaticObserverMethodInvoked" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodReceivesInjectionsOnNonObservesParameters()" name="testObserverMethodReceivesInjectionsOnNonObservesParameters" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.fires.nonbinding.NonBindingTypePassedToFireTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="23" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testExceptionThrownIfNonBindingTypePassedToFire()" name="testExceptionThrownIfNonBindingTypePassedToFire" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000814 Annotation @org.jboss.jsr299.tck.tests.event.fires.nonbinding.AnimalStereotype() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000814 Annotation @org.jboss.jsr299.tck.tests.event.fires.nonbinding.AnimalStereotype() is not a qualifier
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:737)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.event.EventImpl.selectEvent(EventImpl.java:86)
	at org.jboss.weld.event.EventImpl.select(EventImpl.java:73)
	at org.jboss.jsr299.tck.tests.event.fires.nonbinding.OwlFinch_Broken.methodThatFiresEvent(OwlFinch_Broken.java:31)
	at org.jboss.jsr299.tck.tests.event.fires.nonbinding.NonBindingTypePassedToFireTest.testExceptionThrownIfNonBindingTypePassedToFire(NonBindingTypePassedToFireTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.extendejb.SpecializingBeanExtendsEnterpriseBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassDirectlyExtendsEnterpriseBean()" name="testSpecializingClassDirectlyExtendsEnterpriseBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.interceptorNotListedInBeansXml.InterceptorNotListedInBeansXmlNotEnabledTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="34" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorNotListedInBeansXmlNotInvoked()" name="testInterceptorNotListedInBeansXmlNotInvoked" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.policy.broken.incorrect.name.stereotype.NoAnnotationWithSpecifiedNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="14" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="test()" name="test" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testContextCreatesNewInstanceForInjection()" name="testContextCreatesNewInstanceForInjection" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testELResolverReturnsContextualInstance()" name="testELResolverReturnsContextualInstance" duration-ms="5" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testQualifiedNameLookup()" name="testQualifiedNameLookup" duration-ms="4" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testUnresolvedNameReturnsNull()" name="testUnresolvedNameReturnsNull" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.unproxyable.finalClass.FinalClassTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionPointWithUnproxyableTypeWhichResolvesToNormalScopedBean()" name="testInjectionPointWithUnproxyableTypeWhichResolvesToNormalScopedBean" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.policy.broken.incorrect.name.NoClassWithSpecifiedNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="16" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="test()" name="test" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.initializer.InitializerMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="45" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testBindingTypeOnInitializerParameter()" name="testBindingTypeOnInitializerParameter" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleInitializerMethodsAreCalled()" name="testMultipleInitializerMethodsAreCalled" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.finalBeanClass.FinalBeanClassTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="28" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testAppliesToFinalManagedBeanClass()" name="testAppliesToFinalManagedBeanClass" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithApplicationScope.StatelessWithApplicationScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testStatelessWithSessionScopeFails()" name="testStatelessWithSessionScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.DestroyForSameCreationalContext2Test">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="92" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testDestroyForSameCreationalContextOnly()" name="testDestroyForSameCreationalContextOnly" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.method.MethodLevelInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="71" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testExcludeClassInterceptors()" name="testExcludeClassInterceptors" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorCanBeAppliedToMoreThanOneMethod()" name="testInterceptorCanBeAppliedToMoreThanOneMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonSerializableInterceptorClass.ManagedBeanWithNonSerializableInterceptorClassTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="42" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testManagedBeanWithNonSerializableInterceptorClassNotOK()" name="testManagedBeanWithNonSerializableInterceptorClassNotOK" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.ResolutionByTypeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="30" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAllQualifiersSpecifiedForResolutionMustAppearOnBean()" name="testAllQualifiersSpecifiedForResolutionMustAppearOnBean" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testBeanTypesOnManagedBean()" name="testBeanTypesOnManagedBean" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testBeanTypesOnProducerMethod()" name="testBeanTypesOnProducerMethod" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testBeanTypesOnProducerField()" name="testBeanTypesOnProducerField" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testGenericBeanTypesOnManagedBean()" name="testGenericBeanTypesOnManagedBean" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testGenericBeanTypesOnProducerField()" name="testGenericBeanTypesOnProducerField" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultBindingTypeAssumed()" name="testDefaultBindingTypeAssumed" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testResolveByType()" name="testResolveByType" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testResolveByTypeWithArray()" name="testResolveByTypeWithArray" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testGenericBeanTypesOnProducerMethod()" name="testGenericBeanTypesOnProducerMethod" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testPolicyNotAvailableInNonDeploymentArchive()" name="testPolicyNotAvailableInNonDeploymentArchive" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testResolveByTypeWithPrimitives()" name="testResolveByTypeWithPrimitives" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testResolveByTypeWithNonBindingMembers()" name="testResolveByTypeWithNonBindingMembers" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testResolveByTypeWithTypeParameter()" name="testResolveByTypeWithTypeParameter" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.interceptorOrder.InterceptorOrderTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorsCalledInOrderDefinedByBeansXml()" name="testInterceptorsCalledInOrderDefinedByBeansXml" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorsDeclaredUsingInterceptorsCalledBeforeInterceptorBinding()" name="testInterceptorsDeclaredUsingInterceptorsCalledBeforeInterceptorBinding" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.CheckTypeParametersWhenResolvingObserversTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testResolvingChecksTypeParameters()" name="testResolvingChecksTypeParameters" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testResolvingChecksTypeParametersOnObservesMethod()" name="testResolvingChecksTypeParametersOnObservesMethod" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.aroundInvoke.order.InvocationOrderTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="84" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="testInvocationOrder()" name="testInvocationOrder" duration-ms="2" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithConversationScope.StatelessWithConversationScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testStatelessWithConversationScopeFails()" name="testStatelessWithConversationScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInitializerMethod.PassivatingManagedBeanWithNonPassivatingInitializerMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="28" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoInitializerParameterOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoInitializerParameterOfWebBeanWithPassivatingScopeFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.dependentIsConditionalObserver.DependentIsConditionalObserverTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDependentBeanWithConditionalObserverMethodIsDefinitionError()" name="testDependentBeanWithConditionalObserverMethodIsDefinitionError" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.directlyExtendsNothing.DirectlyExtendsNothingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassDirectlyExtendsNothing()" name="testSpecializingClassDirectlyExtendsNothing" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.managedBeanWithNonPassivatingDecorator.ManagedBeanWithNonPassivatingDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="48" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testManagedBeanWithNonPassivatingDecoratorFails()" name="testManagedBeanWithNonPassivatingDecoratorFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.resolve.typeWithParameters.ChecksEventTypeWhenResolvingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testResolvingChecksEventType()" name="testResolvingChecksEventType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.extensions.bean.bytype.BeanByTypeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testNoBindingImpliesCurrent()" name="testNoBindingImpliesCurrent" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetBeans()" name="testGetBeans" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testSameBindingTwice()" name="testSameBindingTwice" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.extensions.bean.bytype.Tame()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.extensions.bean.bytype.Tame()]
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:194)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.manager.BeanManagerImpl.getBeans(BeanManagerImpl.java:445)
	at org.jboss.jsr299.tck.tests.extensions.bean.bytype.BeanByTypeTest.testSameBindingTwice(BeanByTypeTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testNonBindingType()" name="testNonBindingType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001301 Annotation @org.jboss.jsr299.tck.tests.extensions.bean.bytype.NonBindingType() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001301 Annotation @org.jboss.jsr299.tck.tests.extensions.bean.bytype.NonBindingType() is not a qualifier
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:191)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.manager.BeanManagerImpl.getBeans(BeanManagerImpl.java:445)
	at org.jboss.jsr299.tck.tests.extensions.bean.bytype.BeanByTypeTest.testNonBindingType(BeanByTypeTest.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testTypeVariable()" name="testTypeVariable" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001201 Cannot extract rawType from org.jboss.jsr299.tck.tests.extensions.bean.bytype.BeanByTypeTest$1@5213da08]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001201 Cannot extract rawType from org.jboss.jsr299.tck.tests.extensions.bean.bytype.BeanByTypeTest$1@5213da08
	at org.jboss.weld.resolution.ResolvableBuilder.<init>(ResolvableBuilder.java:76)
	at org.jboss.weld.manager.BeanManagerImpl.getBeans(BeanManagerImpl.java:445)
	at org.jboss.jsr299.tck.tests.extensions.bean.bytype.BeanByTypeTest.testTypeVariable(BeanByTypeTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.fires.FireEventTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="45" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testBeanManagerFireEvent()" name="testBeanManagerFireEvent" duration-ms="6" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventFireThrowsExceptionIfEventObjectContainsTypeVariable()" name="testEventFireThrowsExceptionIfEventObjectContainsTypeVariable" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000819 Cannot provide an event type parameterized with a type parameter class org.jboss.jsr299.tck.tests.event.fires.Item_Illegal<T>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000819 Cannot provide an event type parameterized with a type parameter class org.jboss.jsr299.tck.tests.event.fires.Item_Illegal<T>
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:56)
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:62)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:79)
	at org.jboss.weld.event.EventImpl.fire(EventImpl.java:69)
	at org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testEventFireThrowsExceptionIfEventObjectContainsTypeVariable(FireEventTest.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testDuplicateBindingsToFireEventFails()" name="testDuplicateBindingsToFireEventFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.event.fires.Lifted()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.event.fires.Lifted()]
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:194)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:91)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:75)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:70)
	at org.jboss.weld.manager.BeanManagerImpl.fireEvent(BeanManagerImpl.java:553)
	at org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testDuplicateBindingsToFireEventFails(FireEventTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testBeanManagerInterfaceForFireEventMethod()" name="testBeanManagerInterfaceForFireEventMethod" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventProvidesMethodForFiringEventsWithCombinationOfTypeAndBindings()" name="testEventProvidesMethodForFiringEventsWithCombinationOfTypeAndBindings" duration-ms="3" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventSelectedFiresAndObserversNotified()" name="testEventSelectedFiresAndObserversNotified" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInjectedAnyEventCanFireEvent()" name="testInjectedAnyEventCanFireEvent" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInjectedEventAcceptsEventObject()" name="testInjectedEventAcceptsEventObject" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInjectedEventCanHaveBindings()" name="testInjectedEventCanHaveBindings" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInjectedEventCanSpecifyBindingsDynamically()" name="testInjectedEventCanSpecifyBindingsDynamically" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testTypeVariableEventTypeFails()" name="testTypeVariableEventTypeFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000819 Cannot provide an event type parameterized with a type parameter class org.jboss.jsr299.tck.tests.event.fires.Foo<T>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000819 Cannot provide an event type parameterized with a type parameter class org.jboss.jsr299.tck.tests.event.fires.Foo<T>
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:56)
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:62)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:74)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:70)
	at org.jboss.weld.manager.BeanManagerImpl.fireEvent(BeanManagerImpl.java:553)
	at org.jboss.jsr299.tck.tests.event.fires.FireEventTest.testTypeVariableEventTypeFails(FireEventTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.broken.multiParams.MultipleDisposeParametersDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleDisposeParameters()" name="testMultipleDisposeParameters" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="82" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testBeanWithNonSerializableImplementationInjectedIntoTransientFieldOK()" name="testBeanWithNonSerializableImplementationInjectedIntoTransientFieldOK" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionOfDependentPrimitiveProductIntoNormalBean()" name="testInjectionOfDependentPrimitiveProductIntoNormalBean" duration-ms="3" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionOfDependentSerializableProductIntoNormalBean()" name="testInjectionOfDependentSerializableProductIntoNormalBean" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testManagedBeanWithSerializableDecoratorOK()" name="testManagedBeanWithSerializableDecoratorOK" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testNonSerializableProducerFieldDeclaredPassivatingThrowsIllegalProductException()" name="testNonSerializableProducerFieldDeclaredPassivatingThrowsIllegalProductException" duration-ms="3" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
          <exception class="org.jboss.weld.exceptions.IllegalProductException">
            <message>
              <![CDATA[WELD-000053 Producers cannot declare passivating scope and return a non-serializable class:  [field] @SessionScoped @Produces public org.jboss.jsr299.tck.tests.context.passivating.CityProducer.helsinki]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalProductException: WELD-000053 Producers cannot declare passivating scope and return a non-serializable class:  [field] @SessionScoped @Produces public org.jboss.jsr299.tck.tests.context.passivating.CityProducer.helsinki
	at org.jboss.weld.bean.AbstractProducerBean.checkReturnValue(AbstractProducerBean.java:231)
	at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:308)
	at org.jboss.weld.context.AbstractContext.get(AbstractContext.java:103)
	at org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:90)
	at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:79)
	at org.jboss.jsr299.tck.tests.context.passivating.HelsinkiNonSerializable$Proxy$_$$_WeldClientProxy.ping(HelsinkiNonSerializable$Proxy$_$$_WeldClientProxy.java)
	at org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testNonSerializableProducerFieldDeclaredPassivatingThrowsIllegalProductException(PassivatingContextTest.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testManagedBeanWithSerializableImplementationClassOK()" name="testManagedBeanWithSerializableImplementationClassOK" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testManagedBeanWithSerializableInterceptorClassOK()" name="testManagedBeanWithSerializableInterceptorClassOK" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testPassivatingScopeProducerMethodReturnsUnserializableObjectNotOk()" name="testPassivatingScopeProducerMethodReturnsUnserializableObjectNotOk" duration-ms="3" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
          <exception class="org.jboss.weld.exceptions.IllegalProductException">
            <message>
              <![CDATA[WELD-000053 Producers cannot declare passivating scope and return a non-serializable class:  [method] @Produces @SessionScoped org.jboss.jsr299.tck.tests.context.passivating.TelevisionProducer.getTelevision()]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalProductException: WELD-000053 Producers cannot declare passivating scope and return a non-serializable class:  [method] @Produces @SessionScoped org.jboss.jsr299.tck.tests.context.passivating.TelevisionProducer.getTelevision()
	at org.jboss.weld.bean.AbstractProducerBean.checkReturnValue(AbstractProducerBean.java:231)
	at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:308)
	at org.jboss.weld.context.AbstractContext.get(AbstractContext.java:103)
	at org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:90)
	at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:79)
	at org.jboss.jsr299.tck.tests.context.passivating.Television$Proxy$_$$_WeldClientProxy.turnOn(Television$Proxy$_$$_WeldClientProxy.java)
	at org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest.testPassivatingScopeProducerMethodReturnsUnserializableObjectNotOk(PassivatingContextTest.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableProducerMethodIsOK()" name="testPassivationCapableProducerMethodIsOK" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableProducerFieldIsOK()" name="testPassivationCapableProducerFieldIsOK" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationOccurs()" name="testPassivationOccurs" duration-ms="3" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.LifecycleCallbackInterceptorExceptionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="47" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testLifecycleCallbackInterceptorCanCatchException()" name="testLifecycleCallbackInterceptorCanCatchException" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testPostConstructCanThrowRuntimeException()" name="testPostConstructCanThrowRuntimeException" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
          <exception class="org.jboss.weld.exceptions.WeldException">
            <message>
              <![CDATA[WELD-000049 Unable to invoke [method] @PostConstruct public org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.Sheep.postConstruct() on org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.Sheep@e3f6d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.WeldException: WELD-000049 Unable to invoke [method] @PostConstruct public org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.Sheep.postConstruct() on org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.Sheep@e3f6d
	at org.jboss.weld.bean.AbstractClassBean.defaultPostConstruct(AbstractClassBean.java:400)
	at org.jboss.weld.bean.ManagedBean$ManagedBeanInjectionTarget.postConstruct(ManagedBean.java:174)
	at org.jboss.weld.bean.ManagedBean.create(ManagedBean.java:294)
	at org.jboss.weld.context.unbound.DependentContextImpl.get(DependentContextImpl.java:68)
	at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:599)
	at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:626)
	at org.jboss.jsr299.tck.impl.OldSPIBridge.getInstanceByType(OldSPIBridge.java:42)
	at org.jboss.jsr299.tck.AbstractJSR299Test.getInstanceByType(AbstractJSR299Test.java:153)
	at org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.LifecycleCallbackInterceptorExceptionTest.testPostConstructCanThrowRuntimeException(LifecycleCallbackInterceptorExceptionTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:267)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137)
	at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:263)
	at org.jboss.weld.introspector.jlr.WeldMethodImpl.invoke(WeldMethodImpl.java:174)
	at org.jboss.weld.bean.AbstractClassBean.defaultPostConstruct(AbstractClassBean.java:398)
	... 43 more
Caused by: java.lang.RuntimeException
	at org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.exceptions.Sheep.postConstruct(Sheep.java:26)
	... 53 more
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.initializer.broken.methodAnnotatedProduces.InitializerMethodAnnotatedProducesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="29" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerMethodAnnotatedProduces()" name="testInitializerMethodAnnotatedProduces" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.decoratorListedTwiceInBeansXml.DecoratorListedTwiceInBeansXmlTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="15" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorListedTwiceInBeansXmlNotOK()" name="testDecoratorListedTwiceInBeansXmlNotOK" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.parameterized.AssignabilityOfRawAndParameterizedTypesTest">
        <test-method status="PASS" signature="beforeSuite(org.testng.ITestContext)" name="beforeSuite" is-config="true" duration-ms="4" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@435792a0]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithActualTypes()" name="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithActualTypes" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcards()" name="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcards" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcardsAtInjectionPoint()" name="testAssignabilityOfParameterizedTypeWithActualTypesToParameterizedTypeWithWildcardsAtInjectionPoint" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithActualTypes()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithActualTypes" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityToRawType()" name="testAssignabilityToRawType" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeTypeVariable()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeTypeVariable" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards2()" name="testAssignabilityOfParameterizedTypeWithTypeVariablesToParameterizedTypeWithWildcards2" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterSuite()" name="afterSuite" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingBeanConstructor.DecoratorWithNonPassivatingBeanConstructorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="49" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableBeanWithNonPassivatingDecoratorBeanConstructorFails()" name="testPassivationCapableBeanWithNonPassivatingDecoratorBeanConstructorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.isProducer.ObserverMethodAnnotatedProducesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodAnnotatedProducesFails()" name="testObserverMethodAnnotatedProducesFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.wildcardAndTypeVariable.ObserverMethodWithParametertizedTypeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodCanObserveTypeVariable()" name="testObserverMethodCanObserveTypeVariable" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodCanObserveWildcardType()" name="testObserverMethodCanObserveWildcardType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.inject.delegateConstructor.DelegateInjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="49" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorDelegateInjectionPoints()" name="testDecoratorDelegateInjectionPoints" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.broken.nonExistantClassInBeansXml.NonExistantClassInBeansXmlTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNonExistantClassInBeansXmlNotOk()" name="testNonExistantClassInBeansXmlNotOk" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.inject.withoutType.EventInjectionWithoutTypeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testAnyAnnotationOnEventInjectionPointWithoutTypeParameterFails()" name="testAnyAnnotationOnEventInjectionPointWithoutTypeParameterFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.scope.ScopeDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="29" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultScope()" name="testDefaultScope" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeSpecifiedAndStereotyped()" name="testScopeSpecifiedAndStereotyped" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeDeclaredInJava()" name="testScopeDeclaredInJava" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleIncompatibleScopeStereotypesWithScopeSpecified()" name="testMultipleIncompatibleScopeStereotypesWithScopeSpecified" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleCompatibleScopeStereotypes()" name="testMultipleCompatibleScopeStereotypes" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaredInheritedIsIndirectlyInherited()" name="testScopeTypeDeclaredInheritedIsIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaredInheritedIsBlockedByIntermediateScopeTypeMarkedInherited()" name="testScopeTypeDeclaredInheritedIsBlockedByIntermediateScopeTypeMarkedInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaredInheritedIsBlockedByIntermediateScopeTypeNotMarkedInherited()" name="testScopeTypeDeclaredInheritedIsBlockedByIntermediateScopeTypeNotMarkedInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaresScopeTypeAnnotation()" name="testScopeTypeDeclaresScopeTypeAnnotation" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaredInheritedIsInherited()" name="testScopeTypeDeclaredInheritedIsInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeHasCorrectTarget()" name="testScopeTypeHasCorrectTarget" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeNotDeclaredInheritedIsNotInherited()" name="testScopeTypeNotDeclaredInheritedIsNotInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testWebBeanScopeTypeOverridesStereotype()" name="testWebBeanScopeTypeOverridesStereotype" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypesAreExtensible()" name="testScopeTypesAreExtensible" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeNotDeclaredInheritedIsNotIndirectlyInherited()" name="testScopeTypeNotDeclaredInheritedIsNotIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.finalProducerFieldNotPassivationCapable.NonPassivationCapableProducerFieldTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="45" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testNonPassivationCapableProducerFieldNotOk()" name="testNonPassivationCapableProducerFieldNotOk" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.runtimeException.ObserverExceptionRethrownTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testNonTransactionalObserverThrowsNonCheckedExceptionIsRethrown()" name="testNonTransactionalObserverThrowsNonCheckedExceptionIsRethrown" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.jsr299.tck.tests.event.observer.runtimeException.TeaCupPomeranian$OversizedException">
            <full-stacktrace>
              <![CDATA[org.jboss.jsr299.tck.tests.event.observer.runtimeException.TeaCupPomeranian$OversizedException
	at org.jboss.jsr299.tck.tests.event.observer.runtimeException.TeaCupPomeranian.observeSimpleEvent(TeaCupPomeranian.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:267)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137)
	at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:263)
	at org.jboss.weld.introspector.jlr.WeldMethodImpl.invokeOnInstance(WeldMethodImpl.java:170)
	at org.jboss.weld.introspector.ForwardingWeldMethod.invokeOnInstance(ForwardingWeldMethod.java:51)
	at org.jboss.weld.injection.MethodInjectionPoint.invokeOnInstanceWithSpecialValue(MethodInjectionPoint.java:154)
	at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:245)
	at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:233)
	at org.jboss.weld.event.ObserverMethodImpl.notify(ObserverMethodImpl.java:213)
	at org.jboss.weld.event.ObserverNotifier.notifyObserver(ObserverNotifier.java:117)
	at org.jboss.weld.event.TransactionalObserverNotifier.notifyObserver(TransactionalObserverNotifier.java:44)
	at org.jboss.weld.event.ObserverNotifier.notifyObservers(ObserverNotifier.java:85)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:75)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:70)
	at org.jboss.weld.manager.BeanManagerImpl.fireEvent(BeanManagerImpl.java:553)
	at org.jboss.jsr299.tck.tests.event.observer.runtimeException.ObserverExceptionRethrownTest.testNonTransactionalObserverThrowsNonCheckedExceptionIsRethrown(ObserverExceptionRethrownTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingManagedBeanWithNonPassivatingInjcetedField.PassivatingManagedBeanWithNonPassivatingInjcetedFieldTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="28" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoNonTransientFieldOfWebBeanWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoNonTransientFieldOfWebBeanWithPassivatingScopeFails" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventAlwaysHasAnyBinding()" name="testEventAlwaysHasAnyBinding" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventBindingTypeTargetsFieldParameterElementTypes()" name="testEventBindingTypeTargetsFieldParameterElementTypes" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testFireEventWithNonBindingAnnotationsFails()" name="testFireEventWithNonBindingAnnotationsFails" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001301 Annotation @org.jboss.jsr299.tck.tests.event.bindingTypes.NonBindingType() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001301 Annotation @org.jboss.jsr299.tck.tests.event.bindingTypes.NonBindingType() is not a qualifier
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:191)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:91)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:75)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:70)
	at org.jboss.weld.manager.BeanManagerImpl.fireEvent(BeanManagerImpl.java:553)
	at org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testFireEventWithNonBindingAnnotationsFails(EventBindingTypesTest.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testEventBindingTypeTargetsMethodFieldParameterElementTypes()" name="testEventBindingTypeTargetsMethodFieldParameterElementTypes" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testFireEventWithNonRuntimeBindingTypeFails()" name="testFireEventWithNonRuntimeBindingTypeFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001301 Annotation @org.jboss.jsr299.tck.tests.event.bindingTypes.NonRuntimeBindingType() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001301 Annotation @org.jboss.jsr299.tck.tests.event.bindingTypes.NonRuntimeBindingType() is not a qualifier
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:191)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:91)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:75)
	at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:70)
	at org.jboss.weld.manager.BeanManagerImpl.fireEvent(BeanManagerImpl.java:553)
	at org.jboss.jsr299.tck.tests.event.bindingTypes.EventBindingTypesTest.testFireEventWithNonRuntimeBindingTypeFails(EventBindingTypesTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testNonRuntimeBindingTypeIsNotAnEventBindingType()" name="testNonRuntimeBindingTypeIsNotAnEventBindingType" duration-ms="3" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.producer.method.ProducerMethodSpecializationTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="38" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingBeanHasBindingsOfSpecializedAndSpecializingBean()" name="testSpecializingBeanHasBindingsOfSpecializedAndSpecializingBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.circular.CircularDependencyTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="23" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testCircularInjectionOnOneNormalAndOneDependentBean()" name="testCircularInjectionOnOneNormalAndOneDependentBean" duration-ms="3" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testCircularInjectionOnTwoNormalBeans()" name="testCircularInjectionOnTwoNormalBeans" duration-ms="3" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testDependentProducerMethodDeclaredOnNormalBeanWhichInjectsProducedBean()" name="testDependentProducerMethodDeclaredOnNormalBeanWhichInjectsProducedBean" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNormalAndDependentCircularConstructors()" name="testNormalAndDependentCircularConstructors" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNormalCircularConstructors()" name="testNormalCircularConstructors" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNormalProducerMethodDeclaredOnDependentBeanWhichInjectsProducedBean()" name="testNormalProducerMethodDeclaredOnDependentBeanWhichInjectsProducedBean" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNormalProducerMethodDeclaredOnNormalBeanWhichInjectsProducedBean()" name="testNormalProducerMethodDeclaredOnNormalBeanWhichInjectsProducedBean" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testSelfConsumingConstructorsOnNormalBean()" name="testSelfConsumingConstructorsOnNormalBean" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNormalSelfConsumingProducer()" name="testNormalSelfConsumingProducer" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.DecoratorDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="47" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratedTypes()" name="testDecoratedTypes" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDuplicateBindingsOnResolveDecoratorsFails()" name="testDuplicateBindingsOnResolveDecoratorsFails" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.decorators.definition.Meta()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.decorators.definition.Meta()]
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:194)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.manager.BeanManagerImpl.resolveDecorators(BeanManagerImpl.java:707)
	at org.jboss.jsr299.tck.tests.decorators.definition.DecoratorDefinitionTest.testDuplicateBindingsOnResolveDecoratorsFails(DecoratorDefinitionTest.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testDelegateInjectionPoint()" name="testDelegateInjectionPoint" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorDoesNotImplementDelegateType()" name="testDecoratorDoesNotImplementDelegateType" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorIsManagedBean()" name="testDecoratorIsManagedBean" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorOrdering()" name="testDecoratorOrdering" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testEmptyTypeSetOnResolveDecoratorsFails()" name="testEmptyTypeSetOnResolveDecoratorsFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001310 No decorator types were specified in the set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001310 No decorator types were specified in the set
	at org.jboss.weld.manager.BeanManagerImpl.checkResolveDecoratorsArguments(BeanManagerImpl.java:719)
	at org.jboss.weld.manager.BeanManagerImpl.resolveDecorators(BeanManagerImpl.java:705)
	at org.jboss.jsr299.tck.tests.decorators.definition.DecoratorDefinitionTest.testEmptyTypeSetOnResolveDecoratorsFails(DecoratorDefinitionTest.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testInstanceOfDecoratorForEachEnabled()" name="testInstanceOfDecoratorForEachEnabled" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNonBindingsOnResolveDecoratorsFails()" name="testNonBindingsOnResolveDecoratorsFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001301 Annotation @org.jboss.jsr299.tck.tests.decorators.definition.NonMeta() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001301 Annotation @org.jboss.jsr299.tck.tests.decorators.definition.NonMeta() is not a qualifier
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:191)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.manager.BeanManagerImpl.resolveDecorators(BeanManagerImpl.java:707)
	at org.jboss.jsr299.tck.tests.decorators.definition.DecoratorDefinitionTest.testNonBindingsOnResolveDecoratorsFails(DecoratorDefinitionTest.java:168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNonEnabledDecoratorNotResolved()" name="testNonEnabledDecoratorNotResolved" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.binding.members.array.BindingAnnotationWithMemberTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testArrayMemberWithoutNonBinding()" name="testArrayMemberWithoutNonBinding" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.decorator.DecoratorNotInjectedTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="39" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorNotResolved()" name="testDecoratorNotResolved" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injectionpoint.InjectableReferenceTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="29" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetInjectableReferenceOnBeanManager()" name="testGetInjectableReferenceOnBeanManager" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testGetInjectableReferenceReturnsDelegateForDelegateInjectionPoint()" name="testGetInjectableReferenceReturnsDelegateForDelegateInjectionPoint" duration-ms="5" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.definition.constructorHasDisposesParameter.ConstructorHasDisposesParameterTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="18" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testConstructorHasDisposesParameter()" name="testConstructorHasDisposesParameter" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.inject.delegateField.DelegateFieldInjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="40" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorDelegateInjectionPoints()" name="testDecoratorDelegateInjectionPoints" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingInjectedFieldInDecorator.EnterpriseBeanWithNonPassivatingInjectedFieldInDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="73" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testSessionBeanWithNonPassivatingInjectedFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingInjectedFieldInDecoratorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.normal.scope.NormalScopedBeanWithInjectionPoint">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testSessionScopedBeanWithInjectionPoint()" name="testSessionScopedBeanWithInjectionPoint" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableProducerMethod.NonPassivationCapableProducerMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="44" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNonPassivationCapableProducerMethodNotOk()" name="testNonPassivationCapableProducerMethodNotOk" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.extensions.annotated.AlternativeMetaDataTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testIsAnnotationPresent()" name="testIsAnnotationPresent" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testBaseType()" name="testBaseType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testTypeClosure()" name="testTypeClosure" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetAnnotations()" name="testGetAnnotations" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetAnnotation()" name="testGetAnnotation" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.inconsistent.InconsistentSpecializationTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="23" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testInconsistentSpecialization()" name="testInconsistentSpecialization" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.ProducerFieldDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="61" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForClassReturn()" name="testApiTypeForClassReturn" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForArrayTypeReturn()" name="testApiTypeForArrayTypeReturn" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForInterfaceReturn()" name="testApiTypeForInterfaceReturn" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForPrimitiveReturn()" name="testApiTypeForPrimitiveReturn" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testBeanDeclaresMultipleProducerFields()" name="testBeanDeclaresMultipleProducerFields" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultBindingType()" name="testDefaultBindingType" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testBindingType()" name="testBindingType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultNamedField()" name="testDefaultNamedField" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNamedField()" name="testNamedField" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNonStaticProducerFieldNotInherited()" name="testNonStaticProducerFieldNotInherited" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNonStaticProducerFieldNotIndirectlyInherited()" name="testNonStaticProducerFieldNotIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testParameterizedReturnType()" name="testParameterizedReturnType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testStereotype()" name="testStereotype" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testScopeType()" name="testScopeType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterAnnotatedDisposes.ParameterAnnotatedDisposesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="18" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodWithParameterAnnotatedDisposes()" name="testProducerMethodWithParameterAnnotatedDisposes" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.EnterpriseResolutionByTypeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="32" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testBeanTypesOnSessionBean()" name="testBeanTypesOnSessionBean" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.singletonWithConversationScope.SingletonWithConversationScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testSingletonWithConversationScopeFails()" name="testSingletonWithConversationScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.resolve.nonbinding.NonBindingTypesWhenResolvingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testNonBindingTypeAnnotationWhenResolvingFails()" name="testNonBindingTypeAnnotationWhenResolvingFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001301 Annotation @org.jboss.jsr299.tck.tests.event.resolve.nonbinding.AnimalStereotype() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001301 Annotation @org.jboss.jsr299.tck.tests.event.resolve.nonbinding.AnimalStereotype() is not a qualifier
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:191)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:91)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:66)
	at org.jboss.weld.manager.BeanManagerImpl.resolveObserverMethods(BeanManagerImpl.java:422)
	at org.jboss.jsr299.tck.tests.event.resolve.nonbinding.NonBindingTypesWhenResolvingTest.testNonBindingTypeAnnotationWhenResolvingFails(NonBindingTypesWhenResolvingTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.resolve.binding.DuplicateBindingTypesWhenResolvingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testDuplicateBindingTypesWhenResolvingFails()" name="testDuplicateBindingTypesWhenResolvingFails" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.event.resolve.binding.BindingTypeA()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001302 Duplicate qualifiers:  [@org.jboss.jsr299.tck.tests.event.resolve.binding.BindingTypeA()]
	at org.jboss.weld.resolution.ResolvableBuilder.checkQualifier(ResolvableBuilder.java:194)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifier(ResolvableBuilder.java:161)
	at org.jboss.weld.resolution.ResolvableBuilder.addQualifiers(ResolvableBuilder.java:177)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:91)
	at org.jboss.weld.event.ObserverNotifier.resolveObserverMethods(ObserverNotifier.java:66)
	at org.jboss.weld.manager.BeanManagerImpl.resolveObserverMethods(BeanManagerImpl.java:422)
	at org.jboss.jsr299.tck.tests.event.resolve.binding.DuplicateBindingTypesWhenResolvingTest.testDuplicateBindingTypesWhenResolvingFails(DuplicateBindingTypesWhenResolvingTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.nonPassivationCapableProducerField.NonPassivationCapableProducerFieldTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="44" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNonPassivationCapableProducerFieldNotOk()" name="testNonPassivationCapableProducerFieldNotOk" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.abortProcessing.ObserverExceptionAbortsProcessingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverThrowsExceptionAbortsNotifications()" name="testObserverThrowsExceptionAbortsNotifications" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend2.SpecializingBeanExtendsNothingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassDirectlyExtendsNothing()" name="testSpecializingClassDirectlyExtendsNothing" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInitializerMethod.DecoratorWithNonPassivatingInitializerMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="47" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableBeanWithNonPassivatingInitializerInDecoratorFails()" name="testPassivationCapableBeanWithNonPassivatingInitializerInDecoratorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.invocation.observer.DecoratorInvocationTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="32" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorInvocation()" name="testDecoratorInvocation" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.singletonWithSessionScope.SingletonWithSessionScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testSingletonWithSessionScopeFails()" name="testSingletonWithSessionScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.invocationContext.InvocationContextTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="89" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testBusinessMethodNotCalledWithoutProceedInvocation()" name="testBusinessMethodNotCalledWithoutProceedInvocation" duration-ms="3" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testContextData()" name="testContextData" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testGetMethodForAroundInvokeInterceptorMethod()" name="testGetMethodForAroundInvokeInterceptorMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testGetMethodForLifecycleCallbackInterceptorMethod()" name="testGetMethodForLifecycleCallbackInterceptorMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testGetTargetMethod()" name="testGetTargetMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testGetTimerMethod()" name="testGetTimerMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testIllegalNumberOfParameters()" name="testIllegalNumberOfParameters" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Wrong number of parameters: method has 2, attempting to set 3]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Wrong number of parameters: method has 2, attempting to set 3
	at org.jboss.weld.interceptor.proxy.InterceptorInvocationContext.setParameters(InterceptorInvocationContext.java:168)
	at org.jboss.jsr299.tck.interceptors.tests.invocationContext.Interceptor5.intercept(Interceptor5.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.interceptor.proxy.SimpleMethodInvocation.invoke(SimpleMethodInvocation.java:30)
	at org.jboss.weld.interceptor.proxy.SimpleInterceptionChain.invokeNextInterceptor(SimpleInterceptionChain.java:68)
	at org.jboss.weld.interceptor.proxy.InterceptorMethodHandler.executeInterception(InterceptorMethodHandler.java:112)
	at org.jboss.weld.interceptor.proxy.InterceptorMethodHandler.invoke(InterceptorMethodHandler.java:88)
	at org.jboss.weld.bean.proxy.CombinedInterceptorAndDecoratorStackMethodHandler.invoke(CombinedInterceptorAndDecoratorStackMethodHandler.java:53)
	at org.jboss.jsr299.tck.interceptors.tests.invocationContext.SimpleBean$Proxy$_$$_WeldSubclass.add2(SimpleBean$Proxy$_$$_WeldSubclass.java)
	at org.jboss.jsr299.tck.interceptors.tests.invocationContext.InvocationContextTest.testIllegalNumberOfParameters(InvocationContextTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testIllegalTypeOfParameters()" name="testIllegalTypeOfParameters" duration-ms="2" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Incompatible parameter type on position: 0 :class java.lang.String (expected type was int)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Incompatible parameter type on position: 0 :class java.lang.String (expected type was int)
	at org.jboss.weld.interceptor.proxy.InterceptorInvocationContext.setParameters(InterceptorInvocationContext.java:200)
	at org.jboss.jsr299.tck.interceptors.tests.invocationContext.Interceptor6.intercept(Interceptor6.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.interceptor.proxy.SimpleMethodInvocation.invoke(SimpleMethodInvocation.java:30)
	at org.jboss.weld.interceptor.proxy.SimpleInterceptionChain.invokeNextInterceptor(SimpleInterceptionChain.java:68)
	at org.jboss.weld.interceptor.proxy.InterceptorMethodHandler.executeInterception(InterceptorMethodHandler.java:112)
	at org.jboss.weld.interceptor.proxy.InterceptorMethodHandler.invoke(InterceptorMethodHandler.java:88)
	at org.jboss.weld.bean.proxy.CombinedInterceptorAndDecoratorStackMethodHandler.invoke(CombinedInterceptorAndDecoratorStackMethodHandler.java:53)
	at org.jboss.jsr299.tck.interceptors.tests.invocationContext.SimpleBean$Proxy$_$$_WeldSubclass.add3(SimpleBean$Proxy$_$$_WeldSubclass.java)
	at org.jboss.jsr299.tck.interceptors.tests.invocationContext.InvocationContextTest.testIllegalTypeOfParameters(InvocationContextTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testMethodParameters()" name="testMethodParameters" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testProceedReturnsNullForVoidMethod()" name="testProceedReturnsNullForVoidMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.ambiguous.AmbiguousInjectableReferenceTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testUnsatisfiedReference()" name="testUnsatisfiedReference" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.AmbiguousResolutionException">
            <message>
              <![CDATA[WELD-001318 Cannot resolve an ambiguous dependency between [Managed Bean [class org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.ambiguous.DerivedInjectedBean] with qualifiers [@Any @Default], Managed Bean [class org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.ambiguous.InjectedBean] with qualifiers [@Any @Default]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.AmbiguousResolutionException: WELD-001318 Cannot resolve an ambiguous dependency between [Managed Bean [class org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.ambiguous.DerivedInjectedBean] with qualifiers [@Any @Default], Managed Bean [class org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.ambiguous.InjectedBean] with qualifiers [@Any @Default]]
	at org.jboss.weld.manager.BeanManagerImpl.resolve(BeanManagerImpl.java:1029)
	at org.jboss.weld.manager.BeanManagerImpl.getBean(BeanManagerImpl.java:688)
	at org.jboss.weld.manager.BeanManagerImpl.getInjectableReference(BeanManagerImpl.java:679)
	at org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.reference.ambiguous.AmbiguousInjectableReferenceTest.testUnsatisfiedReference(AmbiguousInjectableReferenceTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.bean.genericbroken.GenericManagedBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testNonDependentGenericManagedBeanNotOk()" name="testNonDependentGenericManagedBeanNotOk" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.definition.dependentWithPublicField.DependentWithPublicFieldTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNonDependentScopedBeanCanNotHavePublicField()" name="testNonDependentScopedBeanCanNotHavePublicField" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.invocation.DecoratorInvocationTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="47" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testChainedDecoratorInvocation()" name="testChainedDecoratorInvocation" duration-ms="2" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorInvocation()" name="testDecoratorInvocation" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.DestroyForSameCreationalContextTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="82" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testDestroyForSameCreationalContextOnly()" name="testDestroyForSameCreationalContextOnly" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.resolve.enterprise.ResolveEnterpriseEventObserverTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodOnEnterpriseBeanIsBusinessMethodOrStatic()" name="testObserverMethodOnEnterpriseBeanIsBusinessMethodOrStatic" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.multipleBindings.MultipleInterceptorBindingsTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorNotAppliedToBeanWithSomeBindings()" name="testInterceptorNotAppliedToBeanWithSomeBindings" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorAppliedToBeanWithAllBindings()" name="testInterceptorAppliedToBeanWithAllBindings" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.broken.sameClassListedTwiceInBeansXml.SameClassListedTwiceInBeansXmlTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testSameInterceptorClassListedTwiceInBeansXmlNotOk()" name="testSameInterceptorClassListedTwiceInBeansXmlNotOk" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.initializer.broken.parameterAnnotatedObserves.ParameterAnnotatedObservesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="29" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerMethodHasParameterAnnotatedObserves()" name="testInitializerMethodHasParameterAnnotatedObserves" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.field.definition.broken.parameterizedReturnTypeWithWildcard.ParameterizedReturnTypeWithWildcardTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="37" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testParameterizedReturnTypeWithWildcard()" name="testParameterizedReturnTypeWithWildcard" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.scope.broken.tooManyScopes.TooManyScopesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testTooManyScopesSpecifiedInJava()" name="testTooManyScopesSpecifiedInJava" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.dependency.resolution.broken.unsatisfied.UnsatisfiedDependencyTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testUnsatisfiedDependency()" name="testUnsatisfiedDependency" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.stereotype.defaultNamed.DefaultNamedTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeWithEmptyNamed()" name="testStereotypeWithEmptyNamed" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingBeanConstructorParameter.PassivationCapableBeanWithNonPassivatingInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="60" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.binding.members.annotation.BindingAnnotationWithMemberTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testAnnotationMemberWithoutNonBinding()" name="testAnnotationMemberWithoutNonBinding" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterAnnotatedObserves.ParameterAnnotatedObservesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodWithParameterAnnotatedObserves()" name="testProducerMethodWithParameterAnnotatedObserves" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.noDelegateInjectionPoints.NoDelegateInjectionPointsTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNoDelegateInjectionPoints()" name="testNoDelegateInjectionPoints" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.definition.DefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="67" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorMethodDefinedOnTargetClass()" name="testInterceptorMethodDefinedOnTargetClass" duration-ms="1" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.unproxyable.primitive.UnproxyableTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionPointWithUnproxyableTypeWhichResolvesToNormalScopedBean()" name="testInjectionPointWithUnproxyableTypeWhichResolvesToNormalScopedBean" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.eventTypes.EventTypesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventTypeIncludesAllSuperclassesAndInterfacesOfEventObject()" name="testEventTypeIncludesAllSuperclassesAndInterfacesOfEventObject" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testEventTypeIsConcreteTypeWithNoTypeVariables()" name="testEventTypeIsConcreteTypeWithNoTypeVariables" duration-ms="6" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptor.EnterpriseBeanWithNonPassivatingBeanConstructorParameterInInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="51" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testSessionBeanWithNonPassivatingBeanConstructorParamInInterceptorFails()" name="testSessionBeanWithNonPassivatingBeanConstructorParamInInterceptorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.multipleDelegateInjectionPoints.MultipleDelegateInjectionPointsTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="23" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleDelegateInjectionPoints()" name="testMultipleDelegateInjectionPoints" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.interceptorCalledBeforeDecorator.InterceptorCalledBeforeDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="42" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorCalledBeforeDecorator()" name="testInterceptorCalledBeforeDecorator" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.definition.constructorHasObservesParameter.ConstructorHasObservesParameterTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="20" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testConstructorHasObservesParameter()" name="testConstructorHasObservesParameter" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.producer.method.broken.specializingAndSpecializedBeanHaveName.SpecializingAndSpecializedBeanHaveNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingAndSpecializedBeanHasName()" name="testSpecializingAndSpecializedBeanHasName" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.broken.noextend1.SpecializingBeanImplementsInterfaceOnly">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="30" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassImplementsInterfaceAndExtendsNothing()" name="testSpecializingClassImplementsInterfaceAndExtendsNothing" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.byname.ResolutionByNameTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testAmbiguousELNamesResolved()" name="testAmbiguousELNamesResolved" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.broken.interceptorCanNotBeDecorator.InterceptorCanNotBeDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="18" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorCanNotAlsoBeDecorator()" name="testInterceptorCanNotAlsoBeDecorator" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.select.SelectEventTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="33" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testEventSelectReturnsEventOfSameType()" name="testEventSelectReturnsEventOfSameType" duration-ms="5" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testEventSelectThrowsExceptionForDuplicateBindingType()" name="testEventSelectThrowsExceptionForDuplicateBindingType" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000815 Qualifier @org.jboss.jsr299.tck.tests.event.select.SystemTest() is already present in the set [@org.jboss.jsr299.tck.tests.event.select.SystemTest(), @org.jboss.jsr299.tck.tests.event.select.SystemTest()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000815 Qualifier @org.jboss.jsr299.tck.tests.event.select.SystemTest() is already present in the set [@org.jboss.jsr299.tck.tests.event.select.SystemTest(), @org.jboss.jsr299.tck.tests.event.select.SystemTest()]
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:740)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.event.EventImpl.selectEvent(EventImpl.java:86)
	at org.jboss.weld.event.EventImpl.select(EventImpl.java:73)
	at org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectThrowsExceptionForDuplicateBindingType(SelectEventTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testEventSelectThrowsExceptionIfAnnotationIsNotBindingType()" name="testEventSelectThrowsExceptionIfAnnotationIsNotBindingType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000814 Annotation @org.jboss.jsr299.tck.tests.event.select.NotABindingType() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000814 Annotation @org.jboss.jsr299.tck.tests.event.select.NotABindingType() is not a qualifier
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:737)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.event.EventImpl.selectEvent(EventImpl.java:86)
	at org.jboss.weld.event.EventImpl.select(EventImpl.java:73)
	at org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectThrowsExceptionIfAnnotationIsNotBindingType(SelectEventTest.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testEventSelectThrowsExceptionIfEventTypeHasTypeVariable()" name="testEventSelectThrowsExceptionIfEventTypeHasTypeVariable" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000819 Cannot provide an event type parameterized with a type parameter org.jboss.jsr299.tck.tests.event.select.SecurityEvent_Illegal<T>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000819 Cannot provide an event type parameterized with a type parameter org.jboss.jsr299.tck.tests.event.select.SecurityEvent_Illegal<T>
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:56)
	at org.jboss.weld.util.Observers.checkEventObjectType(Observers.java:41)
	at org.jboss.weld.event.EventImpl.selectEvent(EventImpl.java:85)
	at org.jboss.weld.event.EventImpl.select(EventImpl.java:81)
	at org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectThrowsExceptionIfEventTypeHasTypeVariable(SelectEventTest.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testEventSelectWithSubtypeThrowsExceptionForDuplicateBindingType()" name="testEventSelectWithSubtypeThrowsExceptionForDuplicateBindingType" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000815 Qualifier @org.jboss.jsr299.tck.tests.event.select.Violent() is already present in the set [@org.jboss.jsr299.tck.tests.event.select.Violent(), @org.jboss.jsr299.tck.tests.event.select.Violent()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000815 Qualifier @org.jboss.jsr299.tck.tests.event.select.Violent() is already present in the set [@org.jboss.jsr299.tck.tests.event.select.Violent(), @org.jboss.jsr299.tck.tests.event.select.Violent()]
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:740)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.event.EventImpl.selectEvent(EventImpl.java:86)
	at org.jboss.weld.event.EventImpl.select(EventImpl.java:77)
	at org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectWithSubtypeThrowsExceptionForDuplicateBindingType(SelectEventTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testEventSelectWithSubtypeThrowsExceptionIfAnnotationIsNotBindingType()" name="testEventSelectWithSubtypeThrowsExceptionIfAnnotationIsNotBindingType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000814 Annotation @org.jboss.jsr299.tck.tests.event.select.NotABindingType() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000814 Annotation @org.jboss.jsr299.tck.tests.event.select.NotABindingType() is not a qualifier
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:737)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.event.EventImpl.selectEvent(EventImpl.java:86)
	at org.jboss.weld.event.EventImpl.select(EventImpl.java:77)
	at org.jboss.jsr299.tck.tests.event.select.SelectEventTest.testEventSelectWithSubtypeThrowsExceptionIfAnnotationIsNotBindingType(SelectEventTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.interceptorWithNonPassivatingInjectedField.PassivationCapableBeanWithNonPassivatingInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="53" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableBeanWithNonPassivatingInterceptorFails()" name="testPassivationCapableBeanWithNonPassivatingInterceptorFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.definition.SimpleBeanDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="36" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testDependentScopedBeanCanHavePublicField()" name="testDependentScopedBeanCanHavePublicField" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testEmptyConstructorUsed()" name="testEmptyConstructorUsed" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testAbstractClassDeclaredInJavaNotDiscovered()" name="testAbstractClassDeclaredInJavaNotDiscovered" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerAnnotatedConstructorUsedOverEmptyConstuctor()" name="testInitializerAnnotatedConstructorUsedOverEmptyConstuctor" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerAnnotatedConstructor()" name="testInitializerAnnotatedConstructor" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testInterfaceNotDiscoveredAsSimpleBean()" name="testInterfaceNotDiscoveredAsSimpleBean" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testStaticInnerClassDeclaredInJavaAllowed()" name="testStaticInnerClassDeclaredInJavaAllowed" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleBeanOnlyIfConstructorIsInitializer()" name="testSimpleBeanOnlyIfConstructorIsInitializer" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleBeanOnlyIfConstructorParameterless()" name="testSimpleBeanOnlyIfConstructorParameterless" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNonStaticInnerClassDeclaredInJavaNotDiscovered()" name="testNonStaticInnerClassDeclaredInJavaNotDiscovered" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.broken.parameterizedTypeWithWildcard.ParameterizedTypeWithWildcardTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="18" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testParameterizedReturnTypeWithWildcard()" name="testParameterizedReturnTypeWithWildcard" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.broken.nonInterceptorClassInBeansXml.NonInterceptorClassInBeansXmlTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="34" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNonInterceptorClassInBeansXmlNotOk()" name="testNonInterceptorClassInBeansXmlNotOk" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.ClientProxyTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testClientProxyInvocation()" name="testClientProxyInvocation" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testClientProxyUsedForNormalScope()" name="testClientProxyUsedForNormalScope" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInactiveScope()" name="testInactiveScope" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.context.ContextNotActiveException">
            <message>
              <![CDATA[WELD-001303 No active contexts for scope type javax.enterprise.context.RequestScoped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.context.ContextNotActiveException: WELD-001303 No active contexts for scope type javax.enterprise.context.RequestScoped
	at org.jboss.weld.manager.BeanManagerImpl.getContext(BeanManagerImpl.java:581)
	at org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:71)
	at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:79)
	at org.jboss.jsr299.tck.tests.lookup.clientProxy.TunedTuna$Proxy$_$$_WeldClientProxy.getState(TunedTuna$Proxy$_$$_WeldClientProxy.java)
	at org.jboss.jsr299.tck.tests.lookup.clientProxy.ClientProxyTest.testInactiveScope(ClientProxyTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testSimpleBeanClientProxyIsSerializable()" name="testSimpleBeanClientProxyIsSerializable" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.broken.invalidBindingAnnotations.InvalidInterceptorBindingAnnotationsTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="25" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorBindingsWithConflictingAnnotationMembersNotOk()" name="testInterceptorBindingsWithConflictingAnnotationMembersNotOk" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="272" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testCallingCreationalContextReleaseDestroysDependents()" name="testCallingCreationalContextReleaseDestroysDependents" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextGetWithCreateFalseReturnsNull()" name="testContextGetWithCreateFalseReturnsNull" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextGetWithCreationalContextReturnsNewInstance()" name="testContextGetWithCreationalContextReturnsNewInstance" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActive()" name="testContextIsActive" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveDuringBeanCreation()" name="testContextIsActiveDuringBeanCreation" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveDuringInjection()" name="testContextIsActiveDuringInjection" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveWhenCreatingObserverMethodInstance()" name="testContextIsActiveWhenCreatingObserverMethodInstance" duration-ms="10" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveWhenEvaluatingElExpression()" name="testContextIsActiveWhenEvaluatingElExpression" duration-ms="37" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveWhenInvokingDisposalMethod()" name="testContextIsActiveWhenInvokingDisposalMethod" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveWhenInvokingProducerField()" name="testContextIsActiveWhenInvokingProducerField" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextIsActiveWhenInvokingProducerMethod()" name="testContextIsActiveWhenInvokingProducerMethod" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentBeanIsDependentObjectOfBeanInjectedInto()" name="testDependentBeanIsDependentObjectOfBeanInjectedInto" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testContextScopeType()" name="testContextScopeType" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentScopedDecoratorsAreDependentObjectsOfBean()" name="testDependentScopedDecoratorsAreDependentObjectsOfBean" duration-ms="3" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentScopedInterceptorsAreDependentObjectsOfBean()" name="testDependentScopedInterceptorsAreDependentObjectsOfBean" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentsDestroyedWhenDisposerMethodCompletes()" name="testDependentsDestroyedWhenDisposerMethodCompletes" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentsDestroyedWhenElEvaluationCompletes()" name="testDependentsDestroyedWhenElEvaluationCompletes" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentsDestroyedWhenProducerFieldCompletes()" name="testDependentsDestroyedWhenProducerFieldCompletes" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentsDestroyedWhenObserverMethodEvaluationCompletes()" name="testDependentsDestroyedWhenObserverMethodEvaluationCompletes" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentsDestroyedWhenProducerMethodCompletes()" name="testDependentsDestroyedWhenProducerMethodCompletes" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDestroyingSimpleParentDestroysDependents()" name="testDestroyingSimpleParentDestroysDependents" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDestroyingManagedParentDestroysDependentsOfSameBean()" name="testDestroyingManagedParentDestroysDependentsOfSameBean" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceNotSharedBetweenInjectionPoints()" name="testInstanceNotSharedBetweenInjectionPoints" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceUsedForDisposalMethodNotShared()" name="testInstanceUsedForDisposalMethodNotShared" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceUsedForElEvaluationNotShared()" name="testInstanceUsedForElEvaluationNotShared" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceUsedForProducerFieldNotShared()" name="testInstanceUsedForProducerFieldNotShared" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceUsedForObserverMethodNotShared()" name="testInstanceUsedForObserverMethodNotShared" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceUsedForProducerMethodNotShared()" name="testInstanceUsedForProducerMethodNotShared" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.GetOnInactiveContextTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="93" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testInvokingGetOnInactiveContextFails()" name="testInvokingGetOnInactiveContextFails" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
          <exception class="javax.enterprise.context.ContextNotActiveException">
            <full-stacktrace>
              <![CDATA[javax.enterprise.context.ContextNotActiveException
	at org.jboss.weld.context.AbstractContext.get(AbstractContext.java:80)
	at org.jboss.weld.context.AbstractContext.get(AbstractContext.java:120)
	at org.jboss.jsr299.tck.tests.context.GetOnInactiveContextTest.testInvokingGetOnInactiveContextFails(GetOnInactiveContextTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingProducerMethodWithNonPassivatingParameter.PassivatingProducerMethodWithNonPassivatingParameterTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="35" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.type.variable.TypeVariableInjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testTypeVariableInjectionPoint()" name="testTypeVariableInjectionPoint" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.dynamic.DynamicLookupTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testAmbiguousDependencyThrowsException()" name="testAmbiguousDependencyThrowsException" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.AmbiguousResolutionException">
            <message>
              <![CDATA[WELD-001318 Cannot resolve an ambiguous dependency between [Managed Bean [class org.jboss.jsr299.tck.tests.lookup.dynamic.SimplePaymentProcessor] with qualifiers [@Any @PayBy], Managed Bean [class org.jboss.jsr299.tck.tests.lookup.dynamic.AdvancedPaymentProcessor] with qualifiers [@Any @PayBy], Managed Bean [class org.jboss.jsr299.tck.tests.lookup.dynamic.RemotePaymentProcessor] with qualifiers [@Any @PayBy]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.AmbiguousResolutionException: WELD-001318 Cannot resolve an ambiguous dependency between [Managed Bean [class org.jboss.jsr299.tck.tests.lookup.dynamic.SimplePaymentProcessor] with qualifiers [@Any @PayBy], Managed Bean [class org.jboss.jsr299.tck.tests.lookup.dynamic.AdvancedPaymentProcessor] with qualifiers [@Any @PayBy], Managed Bean [class org.jboss.jsr299.tck.tests.lookup.dynamic.RemotePaymentProcessor] with qualifiers [@Any @PayBy]]
	at org.jboss.weld.manager.BeanManagerImpl.resolve(BeanManagerImpl.java:1029)
	at org.jboss.weld.manager.BeanManagerImpl.getBean(BeanManagerImpl.java:688)
	at org.jboss.weld.bean.builtin.InstanceImpl.get(InstanceImpl.java:102)
	at org.jboss.jsr299.tck.tests.lookup.dynamic.DynamicLookupTest.testAmbiguousDependencyThrowsException(DynamicLookupTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testGetMethod()" name="testGetMethod" duration-ms="2" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testDuplicateBindingsThrowsException()" name="testDuplicateBindingsThrowsException" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000815 Qualifier @javax.enterprise.inject.Default() is already present in the set [@javax.enterprise.inject.Default(), @javax.enterprise.inject.Default()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000815 Qualifier @javax.enterprise.inject.Default() is already present in the set [@javax.enterprise.inject.Default(), @javax.enterprise.inject.Default()]
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:740)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.bean.builtin.InstanceImpl.selectInstance(InstanceImpl.java:161)
	at org.jboss.weld.bean.builtin.InstanceImpl.select(InstanceImpl.java:149)
	at org.jboss.jsr299.tck.tests.lookup.dynamic.DynamicLookupTest.testDuplicateBindingsThrowsException(DynamicLookupTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testIsAmbiguous()" name="testIsAmbiguous" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testIsUnsatisfied()" name="testIsUnsatisfied" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testIteratorMethod()" name="testIteratorMethod" duration-ms="7" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNonBindingThrowsException()" name="testNonBindingThrowsException" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-000814 Annotation @org.jboss.jsr299.tck.tests.lookup.dynamic.NonBinding() is not a qualifier]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-000814 Annotation @org.jboss.jsr299.tck.tests.lookup.dynamic.NonBinding() is not a qualifier
	at org.jboss.weld.util.Beans.mergeInQualifiers(Beans.java:737)
	at org.jboss.weld.bean.builtin.FacadeInjectionPoint.<init>(FacadeInjectionPoint.java:26)
	at org.jboss.weld.bean.builtin.InstanceImpl.selectInstance(InstanceImpl.java:161)
	at org.jboss.weld.bean.builtin.InstanceImpl.select(InstanceImpl.java:149)
	at org.jboss.jsr299.tck.tests.lookup.dynamic.DynamicLookupTest.testNonBindingThrowsException(DynamicLookupTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testUnsatisfiedDependencyThrowsException()" name="testUnsatisfiedDependencyThrowsException" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.UnsatisfiedResolutionException">
            <message>
              <![CDATA[WELD-001308 Unable to resolve any beans for Types: [class org.jboss.jsr299.tck.tests.lookup.dynamic.RemotePaymentProcessor]; Bindings: [QualifierInstance{annotationClass=interface org.jboss.jsr299.tck.tests.lookup.dynamic.PayBy, values={[method] public abstract org.jboss.jsr299.tck.tests.lookup.dynamic.PayBy.value()=CHEQUE}, hashCode=803126527}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.UnsatisfiedResolutionException: WELD-001308 Unable to resolve any beans for Types: [class org.jboss.jsr299.tck.tests.lookup.dynamic.RemotePaymentProcessor]; Bindings: [QualifierInstance{annotationClass=interface org.jboss.jsr299.tck.tests.lookup.dynamic.PayBy, values={[method] public abstract org.jboss.jsr299.tck.tests.lookup.dynamic.PayBy.value()=CHEQUE}, hashCode=803126527}]
	at org.jboss.weld.manager.BeanManagerImpl.getBean(BeanManagerImpl.java:690)
	at org.jboss.weld.bean.builtin.InstanceImpl.get(InstanceImpl.java:102)
	at org.jboss.jsr299.tck.tests.lookup.dynamic.DynamicLookupTest.testUnsatisfiedDependencyThrowsException(DynamicLookupTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testObtainsInjectsInstanceOfInstance()" name="testObtainsInjectsInstanceOfInstance" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonSerializableIntializerMethod.EnterpriseBeanWithNonSerializableIntializerMethodTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="52" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testDependentBeanWithNonSerializableImplementationInStatefulSessionBeanInitializerFails()" name="testDependentBeanWithNonSerializableImplementationInStatefulSessionBeanInitializerFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.tooManyParameters.ObserverMethodWithTwoEventParametersTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodMustHaveOnlyOneEventParameter()" name="testObserverMethodMustHaveOnlyOneEventParameter" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injection.InjectionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testFieldDeclaredInSuperclassInjected()" name="testFieldDeclaredInSuperclassInjected" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testFieldDeclaredInIndirectSuperclassInjected()" name="testFieldDeclaredInIndirectSuperclassInjected" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionOfNamedBean()" name="testInjectionOfNamedBean" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionPerformsBoxingIfNecessary()" name="testInjectionPerformsBoxingIfNecessary" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.broken.observesUnallowed.ObserverParameterUnallowedDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverParameterUnallowed()" name="testObserverParameterUnallowed" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.implementInterfaceAndExtendsNothing.ImplementsInterfaceAndExtendsNothingTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="33" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassImplementsInterfaceAndExtendsNothing()" name="testSpecializingClassImplementsInterfaceAndExtendsNothing" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.stereotype.inheritance.StereotypeInheritenceTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="33" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInheritence()" name="testInheritence" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.disposal.method.definition.DisposalMethodDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="29" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testBindingTypesAppliedToDisposalMethodParameters()" name="testBindingTypesAppliedToDisposalMethodParameters" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testDisposalMethodParametersGetInjected()" name="testDisposalMethodParametersGetInjected" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testDisposalMethodOnNonBean()" name="testDisposalMethodOnNonBean" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.stereotype.broken.tooManyScopes.TooManyScopeTypesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="28" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeWithTooManyScopeTypes()" name="testStereotypeWithTooManyScopeTypes" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.bean.BeanDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testBeanClassOnSimpleBean()" name="testBeanClassOnSimpleBean" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testAbstractApiType()" name="testAbstractApiType" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testBeanExtendsAnotherBean()" name="testBeanExtendsAnotherBean" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testBeanTypes()" name="testBeanTypes" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testFinalApiType()" name="testFinalApiType" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testBeanTypesNonEmpty()" name="testBeanTypesNonEmpty" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testBeanClientCanCastBeanInstanceToAnyBeanType()" name="testBeanClientCanCastBeanInstanceToAnyBeanType" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testHasScopeType()" name="testHasScopeType" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testIsNullable()" name="testIsNullable" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleStereotypes()" name="testMultipleStereotypes" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testQualifiersNonEmpty()" name="testQualifiersNonEmpty" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.resolution.DecoratorResolutionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="65" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDelegateTypeVariableBeanActualType()" name="testDelegateTypeVariableBeanActualType" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDelegateTypeVariableBeanTypeVariable()" name="testDelegateTypeVariableBeanTypeVariable" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDelegateWildcardBeanTypeVariable()" name="testDelegateWildcardBeanTypeVariable" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDelegateWildcardBeanActualType()" name="testDelegateWildcardBeanActualType" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObject()" name="testObject" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testNestedIdenticalTypeParamerters()" name="testNestedIdenticalTypeParamerters" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testIdenticalTypeParamerters()" name="testIdenticalTypeParamerters" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testUnboundedTypeVariables()" name="testUnboundedTypeVariables" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testUnboundedTypeVariablesAndObject()" name="testUnboundedTypeVariablesAndObject" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.aroundInvoke.exception.ExceptionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="71" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="testInvocationOrder()" name="testInvocationOrder" duration-ms="0" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:46Z" finished-at="2012-09-04T12:46:46Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.interceptors.tests.lifecycleCallback.LifecycleCallbackInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="84" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testAroundInvokeAndLifeCycleCallbackInterceptorsCanBeDefinedOnTheSameClass()" name="testAroundInvokeAndLifeCycleCallbackInterceptorsCanBeDefinedOnTheSameClass" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testLifeCycleCallbackInterceptorNotInvokedForMethodLevelInterceptor()" name="testLifeCycleCallbackInterceptorNotInvokedForMethodLevelInterceptor" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testPackagePrivateLifecycleInterceptorMethod()" name="testPackagePrivateLifecycleInterceptorMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testPostConstructInterceptor()" name="testPostConstructInterceptor" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testPreDestroyInterceptor()" name="testPreDestroyInterceptor" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testProtectedLifecycleInterceptorMethod()" name="testProtectedLifecycleInterceptorMethod" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testPrivateLifecycleInterceptorMethod()" name="testPrivateLifecycleInterceptorMethod" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testPublicLifecycleInterceptorMethod()" name="testPublicLifecycleInterceptorMethod" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.statelessWithRequestScope.StatelessWithRequestScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testStatelessWithRequestScopeFails()" name="testStatelessWithRequestScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.InterceptorDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="38" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerMethodsNotIntercepted()" name="testInitializerMethodsNotIntercepted" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInstanceOfInterceptorForEveryEnabledInterceptor()" name="testInstanceOfInterceptorForEveryEnabledInterceptor" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptionType()" name="testInterceptionType" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorBindingAnnotation()" name="testInterceptorBindingAnnotation" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorBindingsCanDeclareOtherInterceptorBindings()" name="testInterceptorBindingsCanDeclareOtherInterceptorBindings" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorBindingTypes()" name="testInterceptorBindingTypes" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorsImplementInterceptorInterface()" name="testInterceptorsImplementInterceptorInterface" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodsAreIntercepted()" name="testProducerMethodsAreIntercepted" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testNoBindingTypesToResolveInterceptorsFails()" name="testNoBindingTypesToResolveInterceptorsFails" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001311 Interceptor bindings list cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001311 Interceptor bindings list cannot be empty
	at org.jboss.weld.manager.BeanManagerImpl.resolveInterceptors(BeanManagerImpl.java:735)
	at org.jboss.jsr299.tck.tests.interceptors.definition.InterceptorDefinitionTest.testNoBindingTypesToResolveInterceptorsFails(InterceptorDefinitionTest.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testNonBindingTypeToResolveInterceptorsFails()" name="testNonBindingTypeToResolveInterceptorsFails" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001316 @org.jboss.jsr299.tck.tests.interceptors.definition.NonBindingType() is not an interceptor binding type]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001316 @org.jboss.jsr299.tck.tests.interceptors.definition.NonBindingType() is not an interceptor binding type
	at org.jboss.weld.manager.BeanManagerImpl.resolveInterceptors(BeanManagerImpl.java:740)
	at org.jboss.jsr299.tck.tests.interceptors.definition.InterceptorDefinitionTest.testNonBindingTypeToResolveInterceptorsFails(InterceptorDefinitionTest.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testManagedBeanIsIntercepted()" name="testManagedBeanIsIntercepted" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testResolveInterceptorsReturnsOrderedList()" name="testResolveInterceptorsReturnsOrderedList" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeInterceptorBindings()" name="testStereotypeInterceptorBindings" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testSameBindingTypesToResolveInterceptorsFails()" name="testSameBindingTypesToResolveInterceptorsFails" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
          <exception class="org.jboss.weld.exceptions.IllegalArgumentException">
            <message>
              <![CDATA[WELD-001312 Duplicate interceptor binding type @org.jboss.jsr299.tck.tests.interceptors.definition.Transactional() found]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalArgumentException: WELD-001312 Duplicate interceptor binding type @org.jboss.jsr299.tck.tests.interceptors.definition.Transactional() found
	at org.jboss.weld.manager.BeanManagerImpl.resolveInterceptors(BeanManagerImpl.java:744)
	at org.jboss.jsr299.tck.tests.interceptors.definition.InterceptorDefinitionTest.testSameBindingTypesToResolveInterceptorsFails(InterceptorDefinitionTest.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.unproxyable.array.ArrayTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testInjectionPointWithArrayType()" name="testInjectionPointWithArrayType" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.deployment.lifecycle.broken.failsDuringValidation.AfterBeanDiscoveryFailureTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDeploymentFailsDuringValidation()" name="testDeploymentFailsDuringValidation" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.ObserverTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetNotifyOnObserverMethod()" name="testGetNotifyOnObserverMethod" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetBeanOnObserverMethod()" name="testGetBeanOnObserverMethod" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetObservedTypeOnObserverMethod()" name="testGetObservedTypeOnObserverMethod" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetObservedBindingsOnObserverMethod()" name="testGetObservedBindingsOnObserverMethod" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverNotifiedWhenEventTypeAndAllBindingsMatch()" name="testObserverNotifiedWhenEventTypeAndAllBindingsMatch" duration-ms="3" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.inject.delegateInitializerMethod.DelegateInjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="31" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorDelegateInjectionPoints()" name="testDecoratorDelegateInjectionPoints" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="54" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testForEachSimpleBeanANewBeanExists()" name="testForEachSimpleBeanANewBeanExists" duration-ms="2" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanCreatedForConstructorInjectioAnPoint()" name="testNewBeanCreatedForConstructorInjectioAnPoint" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanCreatedForDisposerMethod()" name="testNewBeanCreatedForDisposerMethod" duration-ms="4" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanCreatedForFieldInjectionPoint()" name="testNewBeanCreatedForFieldInjectionPoint" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanCreatedForInitializerInjectionPoint()" name="testNewBeanCreatedForInitializerInjectionPoint" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanCreatedForObserverMethod()" name="testNewBeanCreatedForObserverMethod" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasNoDisposerMethods()" name="testNewBeanHasNoDisposerMethods" duration-ms="3" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanCreatedForProducerMethod()" name="testNewBeanCreatedForProducerMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasNoProducerMethods()" name="testNewBeanHasNoProducerMethods" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasNoProducerFields()" name="testNewBeanHasNoProducerFields" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasNoObservers()" name="testNewBeanHasNoObservers" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasSameConstructor()" name="testNewBeanHasSameConstructor" duration-ms="5" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasNoStereotypes()" name="testNewBeanHasNoStereotypes" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasSameInjectedFields()" name="testNewBeanHasSameInjectedFields" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanHasSameInitializers()" name="testNewBeanHasSameInitializers" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanIsDependentScoped()" name="testNewBeanIsDependentScoped" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNewBeanWithNoMemberValue()" name="testNewBeanWithNoMemberValue" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingConstructorFieldInDecorator.EnterpriseBeanWithNonPassivatingFieldInDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="79" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testSessionBeanWithNonPassivatingConstructorFieldInDecoratorFails()" name="testSessionBeanWithNonPassivatingConstructorFieldInDecoratorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.enterprise.broken.directlyExtendsSimpleBean.DirectlyExtendsSimpleBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingClassDirectlyExtendsSimpleBean()" name="testSpecializingClassDirectlyExtendsSimpleBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="67" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testEnterpriseBeanWithNonPassivatingDecoratorFails()" name="testEnterpriseBeanWithNonPassivatingDecoratorFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="35" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForArrayTypeReturn()" name="testApiTypeForArrayTypeReturn" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForClassReturn()" name="testApiTypeForClassReturn" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForInterfaceReturn()" name="testApiTypeForInterfaceReturn" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testApiTypeForPrimitiveReturn()" name="testApiTypeForPrimitiveReturn" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testBindingTypesAppliedToProducerMethodParameters()" name="testBindingTypesAppliedToProducerMethodParameters" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testBindingType()" name="testBindingType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultBindingType()" name="testDefaultBindingType" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNonDependentProducerReturnsNullValue()" name="testNonDependentProducerReturnsNullValue" duration-ms="2" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
          <exception class="org.jboss.weld.exceptions.IllegalProductException">
            <message>
              <![CDATA[WELD-000052 Cannot return null from a non-dependent producer method:  [method] @Produces @RequestScoped @Yummy public org.jboss.jsr299.tck.tests.implementation.producer.method.definition.OakTree.pollinate()]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalProductException: WELD-000052 Cannot return null from a non-dependent producer method:  [method] @Produces @RequestScoped @Yummy public org.jboss.jsr299.tck.tests.implementation.producer.method.definition.OakTree.pollinate()
	at org.jboss.weld.bean.AbstractProducerBean.checkReturnValue(AbstractProducerBean.java:225)
	at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:308)
	at org.jboss.weld.context.AbstractContext.get(AbstractContext.java:103)
	at org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:90)
	at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:79)
	at org.jboss.jsr299.tck.tests.implementation.producer.method.definition.Pollen$Proxy$_$$_WeldClientProxy.ping(Pollen$Proxy$_$$_WeldClientProxy.java)
	at org.jboss.jsr299.tck.tests.implementation.producer.method.definition.ProducerMethodDefinitionTest.testNonDependentProducerReturnsNullValue(ProducerMethodDefinitionTest.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testDefaultNamedMethod()" name="testDefaultNamedMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testDependentProducerReturnsNullValue()" name="testDependentProducerReturnsNullValue" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNamedMethod()" name="testNamedMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testNonStaticProducerMethodNotInherited()" name="testNonStaticProducerMethodNotInherited" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testParameterizedReturnType()" name="testParameterizedReturnType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerOnNonBean()" name="testProducerOnNonBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testScopeType()" name="testScopeType" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testStaticDisposerMethod()" name="testStaticDisposerMethod" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testStaticMethod()" name="testStaticMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeSpecifiesScope()" name="testStereotypeSpecifiesScope" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.policy.broken.not.policy.stereotype.ClassIsNotPolicyTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="test()" name="test" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.stereotype.broken.nonEmptyNamed.NonEmptyNamedTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="22" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeWithNonEmptyNamed()" name="testStereotypeWithNonEmptyNamed" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.byname.duplicateNameResolution.DuplicateNameResolutionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testDuplicateNamedBeans()" name="testDuplicateNamedBeans" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.initializer.broken.parameterAnnotatedDisposes.ParameterAnnotatedDisposesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="31" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testInitializerMethodHasParameterAnnotatedDisposes()" name="testInitializerMethodHasParameterAnnotatedDisposes" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.definition.broken.nonExistantClassInBeansXml.NonExistantDecoratorClassInBeansXmlTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testNonExistantDecoratorClassInBeansXmlNotOK()" name="testNonExistantDecoratorClassInBeansXmlNotOK" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="30" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testCreateRethrowsUncheckedException()" name="testCreateRethrowsUncheckedException" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
          <exception class="org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.FooException">
            <full-stacktrace>
              <![CDATA[org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.FooException
	at org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ShipProducer_Broken.produceShip(ShipProducer_Broken.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:267)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137)
	at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:263)
	at org.jboss.weld.introspector.jlr.WeldMethodImpl.invokeOnInstance(WeldMethodImpl.java:170)
	at org.jboss.weld.injection.MethodInjectionPoint.invokeOnInstance(MethodInjectionPoint.java:137)
	at org.jboss.weld.bean.ProducerMethod$ProducerMethodProducer.produce(ProducerMethod.java:136)
	at org.jboss.weld.bean.AbstractProducerBean$AbstractProducer.produce(AbstractProducerBean.java:319)
	at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:307)
	at org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateRethrowsUncheckedException(ProducerMethodLifecycleTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testCreateFailsIfProducerReturnsNullAndNotDependent()" name="testCreateFailsIfProducerReturnsNullAndNotDependent" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
          <exception class="org.jboss.weld.exceptions.IllegalProductException">
            <message>
              <![CDATA[WELD-000052 Cannot return null from a non-dependent producer method:  [method] @Produces @Null @RequestScoped public org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.Lays.makeChip()]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.IllegalProductException: WELD-000052 Cannot return null from a non-dependent producer method:  [method] @Produces @Null @RequestScoped public org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.Lays.makeChip()
	at org.jboss.weld.bean.AbstractProducerBean.checkReturnValue(AbstractProducerBean.java:225)
	at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:308)
	at org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateFailsIfProducerReturnsNullAndNotDependent(ProducerMethodLifecycleTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testCreateReturnsNullIfProducerDoesAndDependent()" name="testCreateReturnsNullIfProducerDoesAndDependent" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodBeanCreate()" name="testProducerMethodBeanCreate" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testCreateWrapsCheckedExceptionAndRethrows()" name="testCreateWrapsCheckedExceptionAndRethrows" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
          <exception class="javax.enterprise.inject.CreationException">
            <full-stacktrace>
              <![CDATA[javax.enterprise.inject.CreationException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.jboss.weld.util.reflection.SecureReflections$16.work(SecureReflections.java:344)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInstantiation(SecureReflectionAccess.java:173)
	at org.jboss.weld.util.reflection.SecureReflections.newInstance(SecureReflections.java:341)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:33)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:45)
	at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:85)
	at org.jboss.weld.injection.MethodInjectionPoint.invokeOnInstance(MethodInjectionPoint.java:143)
	at org.jboss.weld.bean.ProducerMethod$ProducerMethodProducer.produce(ProducerMethod.java:136)
	at org.jboss.weld.bean.AbstractProducerBean$AbstractProducer.produce(AbstractProducerBean.java:319)
	at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:307)
	at org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.ProducerMethodLifecycleTest.testCreateWrapsCheckedExceptionAndRethrows(ProducerMethodLifecycleTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: java.lang.Exception
	at org.jboss.jsr299.tck.tests.implementation.producer.method.lifecycle.LorryProducer_Broken.produceLorry(LorryProducer_Broken.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.weld.util.reflection.SecureReflections$13.work(SecureReflections.java:267)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.run(SecureReflectionAccess.java:52)
	at org.jboss.weld.util.reflection.SecureReflectionAccess.runAsInvocation(SecureReflectionAccess.java:137)
	at org.jboss.weld.util.reflection.SecureReflections.invoke(SecureReflections.java:263)
	at org.jboss.weld.introspector.jlr.WeldMethodImpl.invokeOnInstance(WeldMethodImpl.java:170)
	at org.jboss.weld.injection.MethodInjectionPoint.invokeOnInstance(MethodInjectionPoint.java:137)
	... 39 more
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testProducerMethodBeanDestroy()" name="testProducerMethodBeanDestroy" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodFromMostSpecializedBeanUsed()" name="testProducerMethodFromMostSpecializedBeanUsed" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testProducerMethodInvokedOnCreate()" name="testProducerMethodInvokedOnCreate" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testWhenApplicationInvokesProducerMethodParametersAreNotInjected()" name="testWhenApplicationInvokesProducerMethodParametersAreNotInjected" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.stereotype.broken.scopeConflict.IncompatibleStereotypesTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="24" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleIncompatibleScopeStereotypes()" name="testMultipleIncompatibleScopeStereotypes" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.typesafe.resolution.broken.primitive.PrimitiveInjectionPointTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="testPrimitiveInjectionPointResolvedToNonPrimitiveProducerMethod()" name="testPrimitiveInjectionPointResolvedToNonPrimitiveProducerMethod" duration-ms="0" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:54Z" finished-at="2012-09-04T12:46:54Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.stereotype.StereotypeDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="32" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testExplicitScopeOverridesMergedScopesFromMultipleStereotype()" name="testExplicitScopeOverridesMergedScopesFromMultipleStereotype" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeDeclaredInheritedIsIndirectlyInherited()" name="testStereotypeDeclaredInheritedIsIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testOneStereotypeAllowed()" name="testOneStereotypeAllowed" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleStereotypesAllowed()" name="testMultipleStereotypesAllowed" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeDeclaredInheritedIsInherited()" name="testStereotypeDeclaredInheritedIsInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeNotDeclaredInheritedIsNotIndirectlyInherited()" name="testStereotypeNotDeclaredInheritedIsNotIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeNotDeclaredInheritedIsNotInherited()" name="testStereotypeNotDeclaredInheritedIsNotInherited" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeScopeIsOverriddenByIndirectlyInheritedScope()" name="testStereotypeScopeIsOverriddenByIndirectlyInheritedScope" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeWithScopeType()" name="testStereotypeWithScopeType" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeScopeIsOverriddenByInheritedScope()" name="testStereotypeScopeIsOverriddenByInheritedScope" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeWithoutScopeType()" name="testStereotypeWithoutScopeType" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.definition.tooManyInitializerAnnotatedConstructors.TooManyInitializerAnnotatedConstructorsTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="18" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testTooManyInitializerAnnotatedConstructor()" name="testTooManyInitializerAnnotatedConstructor" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.interceptor.DecoratorAndInterceptorTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="33" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testInterceptorCalledBeforeDecorator()" name="testInterceptorCalledBeforeDecorator" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injection.non.contextual.CreationalContextForNonContextualTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="26" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testCreationalContext()" name="testCreationalContext" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.beanNotManaged.ObserverMethodOnIncorrectBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="21" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodNotOnManagedOrSessionBeanFails()" name="testObserverMethodNotOnManagedOrSessionBeanFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.observer.resolve.ResolveEventObserversTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="28" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testBeanManagerResolveObserversSignature()" name="testBeanManagerResolveObserversSignature" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testMethodWithParameterAnnotatedWithObservesRegistersObserverMethod()" name="testMethodWithParameterAnnotatedWithObservesRegistersObserverMethod" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleObserverMethodsForSameEventPermissible()" name="testMultipleObserverMethodsForSameEventPermissible" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testMultipleObserverMethodsOnBeanPermissible()" name="testMultipleObserverMethodsOnBeanPermissible" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodAutomaticallyRegistered()" name="testObserverMethodAutomaticallyRegistered" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodMayHaveMultipleBindingTypes()" name="testObserverMethodMayHaveMultipleBindingTypes" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodNotAutomaticallyRegisteredForDisabledBeans()" name="testObserverMethodNotAutomaticallyRegisteredForDisabledBeans" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodRegistration()" name="testObserverMethodRegistration" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodWithoutBindingTypesObservesEventsWithoutBindingTypes()" name="testObserverMethodWithoutBindingTypesObservesEventsWithoutBindingTypes" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.unserializableSimpleInjectedIntoPassivatingEnterpriseBean.UnserializableSimpleInjectedIntoPassivatingEnterpriseBeanTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="40" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoStatefulSessionBeanFails()" name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoStatefulSessionBeanFails" duration-ms="0" started-at="2012-09-04T12:46:49Z" finished-at="2012-09-04T12:46:49Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.event.broken.observer.isInitializer.ObserverMethodAnnotatedInitialzerTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="18" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testObserverMethodAnnotatedInitializerFails()" name="testObserverMethodAnnotatedInitializerFails" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.GetFromContextualTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="88" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testGetMayNotCreateNewInstanceUnlessCreationalContextGiven()" name="testGetMayNotCreateNewInstanceUnlessCreationalContextGiven" duration-ms="2" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.name.NameDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="45" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultNamed()" name="testDefaultNamed" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testNonDefaultNamed()" name="testNonDefaultNamed" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testNotNamedInStereotype()" name="testNotNamedInStereotype" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testStereotypeDefaultsName()" name="testStereotypeDefaultsName" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testNotNamedInJava()" name="testNotNamedInJava" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="27" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testAmbiguousDependencyResolved()" name="testAmbiguousDependencyResolved" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testAmbiguousDependencyNotResolved()" name="testAmbiguousDependencyNotResolved" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.AmbiguousResolutionException">
            <message>
              <![CDATA[WELD-001318 Cannot resolve an ambiguous dependency between [Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Terrier] with qualifiers [@Any @Default], Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Dog] with qualifiers [@Any @Default]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.AmbiguousResolutionException: WELD-001318 Cannot resolve an ambiguous dependency between [Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Terrier] with qualifiers [@Any @Default], Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Dog] with qualifiers [@Any @Default]]
	at org.jboss.weld.manager.BeanManagerImpl.resolve(BeanManagerImpl.java:1029)
	at org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testAmbiguousDependencyNotResolved(BeanManagerTest.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testDetermineInterceptorBindingType()" name="testDetermineInterceptorBindingType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testDetermineBindingType()" name="testDetermineBindingType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testDetermineScopeType()" name="testDetermineScopeType" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testDetermineStereotype()" name="testDetermineStereotype" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetMetaAnnotationsForInterceptorBindingType()" name="testGetMetaAnnotationsForInterceptorBindingType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetELResolver()" name="testGetELResolver" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testGetMetaAnnotationsForStereotype()" name="testGetMetaAnnotationsForStereotype" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testObtainingInjectionTarget()" name="testObtainingInjectionTarget" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testValidateThrowsException()" name="testValidateThrowsException" duration-ms="4" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
          <exception class="org.jboss.weld.exceptions.InjectionException">
            <message>
              <![CDATA[WELD-001409 Ambiguous dependencies for type [Dog] with qualifiers [@Default] at injection point [org.jboss.jsr299.tck.tests.extensions.beanManager.InjectionPointDecorator@5412a54b]. Possible dependencies [[Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Terrier] with qualifiers [@Any @Default], Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Dog] with qualifiers [@Any @Default]]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.weld.exceptions.InjectionException: WELD-001409 Ambiguous dependencies for type [Dog] with qualifiers [@Default] at injection point [org.jboss.jsr299.tck.tests.extensions.beanManager.InjectionPointDecorator@5412a54b]. Possible dependencies [[Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Terrier] with qualifiers [@Any @Default], Managed Bean [class org.jboss.jsr299.tck.tests.extensions.beanManager.Dog] with qualifiers [@Any @Default]]]
	at org.jboss.weld.manager.BeanManagerImpl.validate(BeanManagerImpl.java:950)
	at org.jboss.jsr299.tck.tests.extensions.beanManager.BeanManagerTest.testValidateThrowsException(BeanManagerTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.MethodHelper$1.runTestMethod(MethodHelper.java:727)
	at org.jboss.testharness.AbstractTest.run(AbstractTest.java:244)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeHookable(MethodHelper.java:735)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:73)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:94)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testObtainingAnnotatedType()" name="testObtainingAnnotatedType" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testgetScope()" name="testgetScope" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injection.any.AnyInjectionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testAnyInjectionIfExactlyOneBeanForType()" name="testAnyInjectionIfExactlyOneBeanForType" duration-ms="1" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:53Z" finished-at="2012-09-04T12:46:53Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.decoratorWithNonPassivatingInjectedField.DecoratorWithNonPassivatingInjectedFieldTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="50" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testPassivationCapableBeanWithNonPassivatingDecoratorInjectedFieldFails()" name="testPassivationCapableBeanWithNonPassivatingDecoratorInjectedFieldFails" duration-ms="0" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:48Z" finished-at="2012-09-04T12:46:48Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.decorators.invocation.producer.method.DecoratorInvocationTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="35" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testDecoratorInvocation()" name="testDecoratorInvocation" duration-ms="2" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.GetWithNoCreationalContextTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="65" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="2" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
        <test-method status="PASS" signature="testGetWithoutCreationalContextReturnsNull()" name="testGetWithoutCreationalContextReturnsNull" duration-ms="0" started-at="2012-09-04T12:46:47Z" finished-at="2012-09-04T12:46:47Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.definition.scope.enterprise.EnterpriseScopeDefinitionTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="33" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeNotDeclaredInheritedIsNotIndirectlyInherited()" name="testScopeTypeNotDeclaredInheritedIsNotIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaredInheritedIsIndirectlyInherited()" name="testScopeTypeDeclaredInheritedIsIndirectlyInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeNotDeclaredInheritedIsNotInherited()" name="testScopeTypeNotDeclaredInheritedIsNotInherited" duration-ms="1" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="testScopeTypeDeclaredInheritedIsInherited()" name="testScopeTypeDeclaredInheritedIsInherited" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:50Z" finished-at="2012-09-04T12:46:50Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.broken.singletonWithRequestScope.SingletonWithRequestScopeTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="19" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
        <test-method status="PASS" signature="testSingletonWithRequestScopeFails()" name="testSingletonWithRequestScopeFails" duration-ms="0" started-at="2012-09-04T12:46:51Z" finished-at="2012-09-04T12:46:51Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.simple.SimpleBeanSpecializationTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="33" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingBeanHasNameOfSpecializedBean()" name="testSpecializingBeanHasNameOfSpecializedBean" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializingBeanHasQualifiersOfSpecializedAndSpecializingBean()" name="testSpecializingBeanHasQualifiersOfSpecializedAndSpecializingBean" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
      <class name="org.jboss.jsr299.tck.tests.inheritance.specialization.producer.method.broken.indirectOverride.IndirectOverrideTest">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="17" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="testSpecializedMethodIndirectlyOverridesAnotherProducerMethod()" name="testSpecializedMethodIndirectlyOverridesAnotherProducerMethod" duration-ms="0" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
        <test-method status="PASS" signature="afterClass()" name="afterClass" is-config="true" duration-ms="1" started-at="2012-09-04T12:46:52Z" finished-at="2012-09-04T12:46:52Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
