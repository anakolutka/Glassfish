//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-04/12/2007 12:08 AM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.24 at 01:25:15 PM PDT 
//


package com.sun.enterprise.config.serverbeans;

import org.jvnet.hk2.config.Attribute;
import org.jvnet.hk2.config.Configured;

import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


/**
 *
 */

/* @XmlType(name = "", propOrder = {
    "property"
}) */
@Configured
public class DiagnosticService
        implements Serializable {

	final transient private VetoableChangeSupport support = new VetoableChangeSupport(this);

    private final static long serialVersionUID = 1L;
    @Attribute

    protected String computeChecksum;
    @Attribute

    protected String verifyConfig;
    @Attribute

    protected String captureInstallLog;
    @Attribute

    protected String captureSystemInfo;
    @Attribute

    protected String captureHadbInfo;
    @Attribute

    protected String captureAppDd;
    @Attribute

    protected String minLogLevel;
    @Attribute

    protected String maxLogEntries;
    protected List<Property> property = new ConstrainedList<Property>("property", support);



    /**
     * Gets the value of the computeChecksum property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getComputeChecksum() {
        if (computeChecksum == null) {
            return "true";
        } else {
            return computeChecksum;
        }
    }

    /**
     * Sets the value of the computeChecksum property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setComputeChecksum(String value) {
        try {
            support.fireVetoableChange("computeChecksum", this.computeChecksum, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.computeChecksum = value;
    }

    /**
     * Gets the value of the verifyConfig property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getVerifyConfig() {
        if (verifyConfig == null) {
            return "true";
        } else {
            return verifyConfig;
        }
    }

    /**
     * Sets the value of the verifyConfig property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setVerifyConfig(String value) {
        try {
            support.fireVetoableChange("verifyConfig", this.verifyConfig, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.verifyConfig = value;
    }

    /**
     * Gets the value of the captureInstallLog property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getCaptureInstallLog() {
        if (captureInstallLog == null) {
            return "true";
        } else {
            return captureInstallLog;
        }
    }

    /**
     * Sets the value of the captureInstallLog property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setCaptureInstallLog(String value) {
        try {
            support.fireVetoableChange("captureInstallLog", this.captureInstallLog, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.captureInstallLog = value;
    }

    /**
     * Gets the value of the captureSystemInfo property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getCaptureSystemInfo() {
        if (captureSystemInfo == null) {
            return "true";
        } else {
            return captureSystemInfo;
        }
    }

    /**
     * Sets the value of the captureSystemInfo property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setCaptureSystemInfo(String value) {
        try {
            support.fireVetoableChange("captureSystemInfo", this.captureSystemInfo, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.captureSystemInfo = value;
    }

    /**
     * Gets the value of the captureHadbInfo property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getCaptureHadbInfo() {
        if (captureHadbInfo == null) {
            return "true";
        } else {
            return captureHadbInfo;
        }
    }

    /**
     * Sets the value of the captureHadbInfo property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setCaptureHadbInfo(String value) {
        try {
            support.fireVetoableChange("captureHadbInfo", this.captureHadbInfo, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.captureHadbInfo = value;
    }

    /**
     * Gets the value of the captureAppDd property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getCaptureAppDd() {
        if (captureAppDd == null) {
            return "true";
        } else {
            return captureAppDd;
        }
    }

    /**
     * Sets the value of the captureAppDd property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setCaptureAppDd(String value) {
        try {
            support.fireVetoableChange("captureAppDd", this.captureAppDd, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.captureAppDd = value;
    }

    /**
     * Gets the value of the minLogLevel property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getMinLogLevel() {
        if (minLogLevel == null) {
            return "INFO";
        } else {
            return minLogLevel;
        }
    }

    /**
     * Sets the value of the minLogLevel property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setMinLogLevel(String value) {
        try {
            support.fireVetoableChange("minLogLevel", this.minLogLevel, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.minLogLevel = value;
    }

    /**
     * Gets the value of the maxLogEntries property.
     *
     * @return possible object is
     *         {@link String }
     */
    public String getMaxLogEntries() {
        if (maxLogEntries == null) {
            return "500";
        } else {
            return maxLogEntries;
        }
    }

    /**
     * Sets the value of the maxLogEntries property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setMaxLogEntries(String value) {
        try {
            support.fireVetoableChange("maxLogEntries", this.maxLogEntries, value);
        } catch (PropertyVetoException _x) {
            return;
        }
        this.maxLogEntries = value;
    }

    /**
     * Gets the value of the property property.
     * <p/>
     * <p/>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the property property.
     * <p/>
     * <p/>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperty().add(newItem);
     * </pre>
     * <p/>
     * <p/>
     * <p/>
     * Objects of the following type(s) are allowed in the list
     * {@link Property }
     */
    public List<Property> getProperty() {
        return this.property;
    }

    public void addVetoableChangeListener(VetoableChangeListener param0) {
        support.addVetoableChangeListener(param0);
    }

    public void addVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.addVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(String param0, VetoableChangeListener param1) {
        support.removeVetoableChangeListener(param0, param1);
    }

    public void removeVetoableChangeListener(VetoableChangeListener param0) {
        support.removeVetoableChangeListener(param0);
    }

}
