<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->
<!DOCTYPE project [
  <!ENTITY commonBuild SYSTEM "../../../bootstrap/ant-common.xml">
]>

<project name="JSP API Classes" default="compile" basedir=".">


  <!-- =================== Environmental Properties ======================= -->

  <!-- Load user property definition overrides -->
  <property file="build.properties"/>
  <property file="${user.home}/build.properties"/>

  <!-- for getting maven tools, just for convenience -->
  <property name="maven.repo.local" value="../../../../glassfish_dependencies"/>
  <property name="glassfish.maven_repository_importer.version" value="1.1"/>

  <!-- Establish property definition defaults -->
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
  <property name="implementation.revision" value="public_draft"/>
  <property name="jsp-api.build"    value="build"/>
  <property name="jsp-api.dist"     value="dist"/>
  <property name="servlet-api.jar"  value="../jakarta-servletapi-5/jsr154/dist/lib/servlet-api.jar"/>
  <property name="jsp-api.jar" value="${jsp-api.dist}/lib/jsp-api.jar"/>

  <path id="examples.classpath">
    <pathelement location="${jsp-api.build}/classes"/>
    <pathelement location="${el-api.jar}"/>
    <pathelement location="${servlet-api.jar}"/>
    <pathelement location="${mail.jar}"/>
  </path>

  &commonBuild;

  <!-- ===================== Prepare Directories ========================= -->
  <target name="prepare">

    <!-- "Build" Hierarchy -->
    <mkdir dir="${jsp-api.build}"/>
    <mkdir dir="${jsp-api.build}/classes"/>
    <mkdir dir="${jsp-api.build}/docs"/>
    <mkdir dir="${jsp-api.build}/docs/api"/>
    <mkdir dir="${jsp-api.build}/examples"/>
    <mkdir dir="${jsp-api.build}/ant"/>

    <!-- "Dist" Hierarchy -->
    <mkdir dir="${jsp-api.dist}"/>
    <mkdir dir="${jsp-api.dist}/docs"/>
    <mkdir dir="${jsp-api.dist}/docs/api"/>
    <mkdir dir="${jsp-api.dist}/lib"/>
    <mkdir dir="${jsp-api.dist}/src"/>
    <mkdir dir="${jsp-api.dist}/examples"/>

    <uptodate property="docs.uptodate" targetfile="${jsp-api.build}/docs/api/index.html">
      <srcfiles dir="src/share" includes="**/*.java" />
    </uptodate>
  </target>


  <!-- ======================= Static Files ============================== -->
  <target name="static" depends="prepare">

    <!-- "Dist" Hierarchy -->
    <copy todir="${jsp-api.dist}">
      <fileset dir="." includes="BUILDING.txt"/>
      <fileset dir="." includes="LICENSE"/>
      <fileset dir="." includes="README.txt"/>
    </copy>

  </target>


  <!-- ======================== Compile Classes ========================== -->
  <target name="compile" depends="static"
   description="Compile API classes (Default)">

    <!-- Java classes -->
    <javac srcdir="src/share" destdir="${jsp-api.build}/classes"
           debug="${compile.debug}" deprecation="${compile.deprecation}"
        optimize="${compile.optimize}"
        classpath="${servlet-api.jar}" />

    <!-- Associated property files -->
    <copy todir="${jsp-api.build}/classes">
        <fileset dir="src/share">
          <include name="**/*.properties"/>
        </fileset>
    </copy>

    <!-- JSP resources -->
    <copy todir="${jsp-api.build}/classes/javax/servlet/jsp/resources">
        <fileset dir="src/share/dtd">
          <include name="jsp*.dtd"/>
          <include name="jsp*.xsd"/>
          <include name="web-jsp*.dtd"/>
          <include name="web-jsp*.xsd"/>
        </fileset>
    </copy>

  </target>


  <!-- ======================== Build JavaDoc =========================== -->
  <target name="javadoc" depends="prepare" unless="docs.uptodate">

    <javadoc packagenames="javax.servlet.jsp.*,javax.el.*"
             sourcepath="${basedir}/src/share"
             destdir="${jsp-api.build}/docs/api"
             link="http://java.sun.com/javaee/javaserverfaces/1.2_MR1/docs/api/"
             use="true" access="private"
             windowtitle="JavaServer Pages API Documentation"
             doctitle="JavaServer Pages API Documentation"
             bottom="Portions Copyright &amp;copy; 1999-2002 The Apache Software Foundation.  All Rights Reserved. Portions Copyright &amp;copy; 2005-2006 Sun Microsystems Inc.  All Rights Reserved">
        <classpath>
            <pathelement location="${servlet-api.jar}"/>
            <pathelement location="${el-api.jar}"/>
        </classpath>
    </javadoc>

  </target>


  <!-- ======================== Build Examples =========================== -->
  <target name="ant" depends="prepare">
    <javac  srcdir="src/ant" destdir="${jsp-api.build}/ant"
            debug="${compile.debug}" deprecation="${compile.deprecation}"
            optimize="${compile.optimize}" 
            classpath="${ant.home}/lib/ant.jar" />
    <taskdef    name="txt2html" classname="task.Txt2Html"
                classpath="${jsp-api.build}/ant" />
  </target>
  
  <target name="examples" depends="prepare,ant">

    <copy todir="${jsp-api.build}/examples">
      <fileset dir="examples">
        <exclude name="build.*"/>
      </fileset>
    </copy>

    <txt2html todir="${jsp-api.build}/examples/jsp2_1/elresolver">
      <fileset dir="examples/WEB-INF/classes/jsp2_1/examples/elresolver">
        <include name="InstallColorListener.java"/>
        <include name="ColorELResolver.java"/>
        <include name="ColorImplicitObject.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/jsp2/simpletag">
      <fileset dir="examples/WEB-INF/classes/jsp2/examples">
        <include name="BookBean.java"/>
      </fileset>
      <fileset dir="examples/WEB-INF/classes/jsp2/examples/simpletag">
        <include name="FindBookSimpleTag.java"/>
        <include name="RepeatSimpleTag.java"/>
        <include name="HelloWorldSimpleTag.java"/>
      </fileset>
      <fileset dir="examples/WEB-INF/classes/jsp2/examples/el">
        <include name="Functions.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/jsp2/jspattribute">
      <fileset dir="examples/WEB-INF/classes/jsp2/examples">
        <include name="FooBean.java"/>
      </fileset>
      <fileset dir="examples/WEB-INF/classes/jsp2/examples/simpletag">
        <include name="ShuffleSimpleTag.java"/>
        <include name="TileSimpleTag.java"/>
        <include name="HelloWorldSimpleTag.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/cal">
      <fileset dir="examples/WEB-INF/classes/cal">
        <include name="Entries.java"/>
        <include name="Entry.java"/>
        <include name="JspCalendar.java"/>
        <include name="TableBean.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/jsptoserv">
      <fileset dir="examples/WEB-INF/classes">
        <include name="servletToJsp.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/jsp2/el">
      <fileset dir="examples/WEB-INF/classes/jsp2/examples/el">
        <include name="Functions.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/jsp2/misc">
      <fileset dir="examples/WEB-INF/classes/jsp2/examples/simpletag">
        <include name="EchoAttributesTag.java"/>
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples/jsp2/tagfiles">
      <fileset dir="examples/WEB-INF/tags">
        <include name="**/*.tag" />
      </fileset>
    </txt2html>

    <txt2html todir="${jsp-api.build}/examples">
      <fileset dir="examples">
        <include name="**/*.jsp" />
        <include name="**/*.jspx" />
        <include name="**/*.jspf" />
        <exclude name="error/errorpge.jsp"/>
        <exclude name="forward/one.jsp"/>
        <exclude name="include/foo.jsp"/>
        <exclude name="jsptoserv/hello.jsp"/>
        <exclude name="security/protected/error.jsp"/>
        <exclude name="security/protected/index.jsp"/>
        <exclude name="security/protected/login.jsp"/>
        <exclude name="source.jsp"/>
      </fileset>
    </txt2html>

    <javac   srcdir="examples/WEB-INF/classes" 
             destdir="${jsp-api.build}/examples/WEB-INF/classes"
             debug="${compile.debug}" deprecation="${compile.deprecation}"
             optimize="${compile.optimize}"
             excludes="**/CVS/**">
      <classpath refid="examples.classpath" />
    </javac>

    <javac   srcdir="examples/plugin/applet" 
             destdir="${jsp-api.build}/examples/plugin/applet"
             debug="${compile.debug}" deprecation="${compile.deprecation}"
             optimize="${compile.optimize}"
             excludes="**/CVS/**">
      <classpath refid="examples.classpath" />
    </javac>

    <jar   jarfile="${jsp-api.dist}/examples/examples.war"
           basedir="${jsp-api.build}/examples" includes="**"/>

  </target>

  <!-- prepare manifest files for jars -->
  <target name="cook-manifest"
          description="Generate MANIFEST.MF files">
      <copy todir="build/manifest">
          <fileset dir="." includes="*.mf" />
          <filterset>
              <filter token="VERSION" value="${release.version}"/>
          </filterset>
      </copy>
  </target>

  <!-- ===================== Distribution Files ========================= -->
  <target name="jar" depends="compile, cook-manifest"
          description="Create jar">

    <!-- Prepare Manifest -->
    <!-- copy tofile="${jsp-api.build}/manifest"
            file="src/etc/manifest" overwrite="yes">
      <filterset>
        <filter token="implementation.revision"
                value="${implementation.revision}"/>
      </filterset>
    </copy -->

    <!-- Create JAR file -->
    <jar jarfile="${jsp-api.jar}"
         basedir="${jsp-api.build}/classes"
         manifest="${jsp-api.build}/manifest/jsp-api.mf">
      <include name="javax/**" />
    </jar>
    <zip file="build/jsp-api.src.zip">
        <fileset dir="src/share">
            <include name="javax/**"/>
            <include name="dtd/**"/>
         </fileset>
     </zip>
  </target>


  <target name="el-jar" 
          description="Create el-api.jar">

    <!-- Prepare el manifest and pom files -->
    <copy todir="${jsp-api.build}">
        <fileset dir="." includes="el-api.mf,el-api.pom"/>
        <filterset>
            <filter token="VERSION" value="${el.version}"/>
        </filterset>
    </copy>

    <jar jarfile="${el-api.jar}"
         basedir="${jsp-api.build}/classes"
         manifest="${jsp-api.build}/el-api.mf">
      <include name="javax/el/**" />
    </jar>
    <zip file="${jsp-api.build}/el-api.src.zip">
        <fileset dir="src/share">
            <include name="javax/el/**"/>
         </fileset>
     </zip>
  </target>

<!--
  <target name="dist" depends="compile,examples,javadoc,jar"
-->
  <target name="dist" depends="compile,jar,javadoc"
   description="Create binary distribution">

    <!-- Copy Javadocs -->
    <copy todir="${jsp-api.dist}/docs/api">
        <fileset dir="${jsp-api.build}/docs/api"/>
    </copy>

    <!-- Copy API source files -->
    <copy todir="${jsp-api.dist}/src">
        <fileset dir="src/share"/>
    </copy>

  </target>

   <target name="push-to-maven-prepare" depends="-push-to-maven-init,jar"
       description="creates an image for the 'push-to-maven' goal">
       <delete dir="build/maven-repo" /><!-- clean it -->
       <maven-repository-importer destdir="build/maven-repo" version="${release.version}">
           <artifact jar="${release.jsp-api.jar}" pom="jsp-api.pom" srczip="build/jsp-api.src.zip"/>
       </maven-repository-importer>
   </target>

   <target name="push-to-maven" depends="push-to-maven-prepare"
       description="pushes jars to the java.net maven repository">
       <cvs-import src="build/maven-repo" dest="glassfish/repo" />
   </target> 

   <!-- el maven -->
   <target name="push-to-maven-prepare-el" depends="-push-to-maven-init,el-jar"
       description="creates an image for the 'push-to-maven-el' goal">
       <delete dir="${jsp-api.build}/maven-repo-el" /><!-- clean it -->
       <maven-repository-importer destdir="${jsp-api.build}/maven-repo-el" version="${el.version}">
           <artifact jar="${el-api.jar}" pom="${jsp-api.build}/el-api.pom" srczip="${jsp-api.build}/el-api.src.zip"/>
       </maven-repository-importer>
   </target>

   <target name="push-to-maven-el" depends="push-to-maven-prepare-el"
       description="pushes el jar to the java.net maven repository">
       <cvs-import src="${jsp-api.build}/maven-repo-el" dest="glassfish/repo" />
   </target> 


  <!-- ====================== Clean Generated Files ===================== -->
  <target name="clean"
   description="Clean previous build results">

    <delete dir="${jsp-api.build}"/>
    <delete dir="${jsp-api.dist}"/>

  </target>


  <!-- ========================= All In One Build ======================= -->
  <target name="all" depends="clean,dist"
   description="Clean, compile, and dist"/>


</project>
