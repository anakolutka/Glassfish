<!--
 Copyright 2002 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<!DOCTYPE project [
  <!ENTITY common SYSTEM "../../../../config/common.xml">
  <!ENTITY testcommon SYSTEM "../../../../config/properties.xml">
  <!ENTITY testproperties SYSTEM "./build.properties">
]>

<project name="connector1.6 TEST" default="all" basedir=".">
<property name="j2ee.home" value="../../.."/>
<property name="client.class" value="client/Client"/>

  <!-- include common.xml and testcommon.xml -->
  &common;
  &testcommon;
    &testproperties;

  <target name="all" depends="init-common, build, setup, runtest, unset"/>
  <target name="all-with-mappings" depends="init-common, build, setup, setup-map, runtest, unset-map, unset"/>
  <target name="run-dp-test" depends="init-common, build, setup-dp, deploy-dp, runtest, unset-dp, undeploy-dp"/>
  <target name="build" depends="init-common">
   <ant dir="ra" target="all"/>
   <ant dir="app" target="all"/>
  </target>

  <target name="setup">
    <ant dir="app" inheritAll="false" target="setupJdbc"/>
    <ant dir="." inheritAll="false" target="deploy"/>
        <antcall target="create-user-common">
            <param name="user" value="jagadish"/>
            <param name="password" value="prasath"/>
            <param name="groups" value="employee"/>
        </antcall>
      <antcall target="create-user-common">
            <param name="user" value="jr158900"/>
            <param name="password" value="jr158900"/>
            <param name="groups" value="iec"/>
        </antcall>
      <antcall target="create-user-common">
            <param name="user" value="prasath"/>
            <param name="password" value="jagadish"/>
            <param name="groups" value="employee"/>
        </antcall>

<!--      <antcall target="create-user-common">
            <param name="user" value="j2ee"/>
            <param name="password" value="j2ee"/>
            <param name="groups" value="admin"/>
        </antcall>-->

      <antcall target="create-user-common">
          <param name="user" value="guest"/>
          <param name="password" value="guest"/>
          <param name="groups" value="employee"/>
      </antcall>


  </target>

  <target name="setup-dp">
    <ant dir="app" inheritAll="false" target="setupJdbc"/>
  </target>

  <target name="deploy">
    <ant dir="ra" inheritAll="false" target="deploy"/>
    <ant dir="ra" inheritAll="false" target="testAddAdmin"/>
    <ant dir="app" inheritAll="false" target="deploy-ear"/>
    <ant dir="." inheritAll="false" target="restart"/>
  </target>

  <target name="deploy-dp">
    <ant dir="ra" inheritAll="false" target="testAddAdmin"/>
    <ant dir="app" inheritAll="false" target="deploy-ear"/>
    <ant dir="." inheritAll="false" target="restart"/>
  </target>


    <target name="runtest" depends="init-common">
        <java classname="client.WebTest">
          <arg value="${http.host}"/>
          <arg value="${http.port}"/>
          <arg value="${contextroot}"/>
          <classpath>
           <pathelement location="${env.APS_HOME}/lib/reporter.jar"/>
           <pathelement location="app"/>
         </classpath>
        </java>
    </target>

  <target name="unset">
    <ant dir="app" inheritAll="false" target="unsetJdbc"/>
    <ant dir="." inheritAll="false" target="undeploy"/>
         <antcall target="delete-user-common">
            <param name="user" value="jagadish"/>
        </antcall>
      <!--<antcall target="delete-user-common">
         <param name="user" value="j2ee"/>
     </antcall>-->
      
       <antcall target="delete-user-common">
            <param name="user" value="prasath"/>
        </antcall>
        <antcall target="delete-user-common">
            <param name="user" value="jr158900"/>
        </antcall>

      <antcall target="delete-user-common">
         <param name="user" value="guest"/>
     </antcall>

    <ant dir="." inheritAll="false" target="restart"/>
  </target>

  <target name="unset-dp">
    <ant dir="app" inheritAll="false" target="unsetJdbc"/>
    <ant dir="." inheritAll="false" target="restart"/>
  </target>

  <target name="undeploy">
    <ant dir="app" inheritAll="false" target="undeploy"/>
    <ant dir="ra" inheritAll="false" target="testDelAdmin"/>
    <ant dir="ra" inheritAll="false" target="undeploy"/>
  </target>

  <target name="undeploy-dp">
    <ant dir="app" inheritAll="false" target="undeploy"/>
    <ant dir="ra" inheritAll="false" target="testDelAdmin"/>
  </target>

  <target name="restart" depends="init-common">
    <echo message="Not required to restart"/>
  </target>

  <target name="clean">
    <ant dir="ra" inheritAll="false" target="clean"/>
    <ant dir="app" inheritAll="false" target="clean"/>
  </target>

<target name="setup-map">

    <antcall target="create-connector-work-security-groups-map-common">
      <param name="groupsmap" value="--groupsmap eis-group=iec"/>
      <param name="raname" value="generic-ra"/>
      <param name="map.name" value="generic-ra-groups-map"/>
    </antcall>

    <antcall target="create-connector-work-security-principals-map-common">
      <param name="principalsmap" value="--principalsmap eis-jagadish=jagadish:eis-prasath=prasath"/>
      <param name="raname" value="generic-ra"/>
      <param name="map.name" value="generic-ra-principals-map"/>
    </antcall>

    <!-- hack, RAR uses the jvm option to determine the mode of security-work-context-->
    <antcall  target="set-jvm-options"/>

</target>


<target name="unset-map">

     <antcall target="delete-connector-work-security-map-common">
      <param name="raname" value="generic-ra"/>
      <param name="map.name" value="generic-ra-principals-map"/>
     </antcall>

     <antcall target="delete-connector-work-security-map-common">
      <param name="raname" value="generic-ra"/>
      <param name="map.name" value="generic-ra-groups-map"/>
     </antcall>

    <!-- hack, RAR uses the jvm option to determine the mode of security-work-context-->
    <antcall target="unset-jvm-options"/>

</target>


<target name="set-jvm-options">
  <antcall target="create-jvm-options">
     <param name="option" value="-Dgeneric-ra-principals-map=eis-jagadish=jagadish,eis-prasath=prasath"/>
  </antcall>
  <antcall target="create-jvm-options">
     <param name="option" value="-Dgeneric-ra-groups-map=eis-group=iec"/>
  </antcall>
     <antcall  target="restart-server"/>

</target>


<target name="unset-jvm-options">
  <antcall target="delete-jvm-options">
     <param name="option" value="-Dgeneric-ra-principals-map=eis-jagadish=jagadish,eis-prasath=prasath"/>
  </antcall>
  <antcall target="delete-jvm-options">
     <param name="option" value="-Dgeneric-ra-groups-map=eis-group=iec"/>
  </antcall>
     <antcall  target="restart-server"/>
</target>

<target name="create-jvm-options" depends="init-common">
      <exec executable="${ASADMIN}" >
        <arg line="create-jvm-options"/>
        <arg line="--user ${admin.user} --host ${admin.host} --port ${admin.port} --echo=true --terse=true"/>
        <arg line="${option}"/>
      </exec>
  <echo message="REQUIRED TO RESTART SERVER......."/>
</target>

<target name="delete-jvm-options" depends="init-common">
      <exec executable="${ASADMIN}" >
        <arg line="delete-jvm-options"/>
        <arg line="--user ${admin.user} --host ${admin.host} --port ${admin.port} --echo=true --terse=true"/>
        <arg line="${option}"/>
      </exec>
  <echo message="REQUIRED TO RESTART SERVER......."/>
</target>

<target name="create-connector-work-security-groups-map-common" depends="init-common">
    <exec executable="${ASADMIN}" failonerror="false">
      <arg line="create-connector-work-security-map"/>
      <arg line="${as.props}"/>
      <arg line="--raname ${raname}"/>
      <arg line="${groupsmap}"/>
      <arg line="${map.name}"/>
    </exec>
  </target>

<target name="create-connector-work-security-principals-map-common" depends="init-common">
    <exec executable="${ASADMIN}" failonerror="false">
      <arg line="create-connector-work-security-map"/>
      <arg line="${as.props}"/>
      <arg line="--raname ${raname}"/>
      <arg line="${principalsmap}"/>
      <arg line="${map.name}"/>
    </exec>
  </target>


  <target name="delete-connector-work-security-map-common" depends="init-common">
    <exec executable="${ASADMIN}" failonerror="false">
      <arg line="delete-connector-work-security-map"/>
      <arg line="${as.props}"/>
      <arg line="--raname ${raname}"/>
      <arg line="${map.name}"/>
    </exec>
  </target>

 <target name="restart-server">
        <antcall target="stop-server"/>
        <antcall target="start-server"/>

    </target>

    <target name="stop-server" depends="setOSConditions">
        <antcall target="stop-server-unix"/>
        <antcall target="stop-server-windows"/>
    </target>

    <target name="stop-server-unix" if="isUnix">
        <echo message="stopping server on unix ..."/>
        <exec executable="${env.S1AS_HOME}/bin/asadmin">
            <arg value="stop-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

    <target name="stop-server-windows" if="isWindows">
        <echo message="Stopping server on windows ..."/>
        <exec executable="cmd">
            <arg value="/c"/>
            <arg value="${env.S1AS_HOME}\bin\asadmin.bat"/>
            <arg value="stop-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

    <target name="start-server" depends="setOSConditions">

        <echo>+-----------------------------+</echo>
        <echo>| |</echo>
        <echo>| S T A R T I N G GLASSFISH |</echo>
        <echo>| in Felix mode |</echo>
        <echo>| |</echo>
        <echo>+-----------------------------+</echo>

        <antcall target="start-server-unix"/>
        <antcall target="start-server-windows"/>
    </target>

  <target name="start-server-unix" if="isUnix">
        <exec executable="${env.S1AS_HOME}/bin/asadmin">
            <env key="GlassFish_Platform" value="Felix"/>
            <arg value="start-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

    <target name="start-server-windows" if="isWindows">
        <exec executable="cmd" spawn="true">
            <env key="GlassFish_Platform" value="Felix"/>
            <arg value="/c"/>
            <arg value="${env.S1AS_HOME}\bin\asadmin.bat"/>
            <arg value="start-domain"/>
        </exec>
        <sleep seconds="5"/>
    </target>

</project>
