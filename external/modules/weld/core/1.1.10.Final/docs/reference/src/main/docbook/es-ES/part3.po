# translation of part3.po to Spanish
# Language es-ES translations for master.xml package.
# 
# Automatically generated, 2008.
# Gladys Guerrero Lozano <gguerrer@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2012-01-16T16:07:16\n"
"PO-Revision-Date: 2009-01-19 16:46+1000\n"
"Last-Translator: Gladys Guerrero Lozano <gguerrer@redhat.com>\n"
"Language-Team: Spanish <fedora-trans-es@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: para
#, no-c-format
msgid ""
"The first major theme of CDI is <emphasis>loose coupling</emphasis>. We've "
"already seen three means of achieving loose coupling:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "<emphasis>alternatives</emphasis> enable deployment time polymorphism,"
msgstr ""

#. Tag: para
#, no-c-format
msgid "<emphasis>producer methods</emphasis> enable runtime polymorphism, and"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>contextual lifecycle management</emphasis> decouples bean "
"lifecycles."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"These techniques serve to enable loose coupling of client and server. The "
"client is no longer tightly bound to an implementation of an interface, nor "
"is it required to manage the lifecycle of the implementation. This approach "
"lets <emphasis>stateful objects interact as if they were "
"services</emphasis>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Loose coupling makes a system more <emphasis>dynamic</emphasis>. The system "
"can respond to change in a well-defined manner. In the past, frameworks that"
" attempted to provide the facilities listed above invariably did it by "
"sacrificing type safety (most notably by using XML descriptors). CDI is the "
"first technology, and certainly the first specification in the Java EE "
"platform, that achieves this level of loose coupling in a typesafe way."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"CDI provides three extra important facilities that further the goal of loose"
" coupling:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>interceptors</emphasis> decouple technical concerns from business "
"logic,"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>decorators</emphasis> may be used to decouple some business "
"concerns, and"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>event notifications</emphasis> decouple event producers from event"
" consumers."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The second major theme of CDI is <emphasis>strong typing</emphasis>. The "
"information about the dependencies, interceptors and decorators of a bean, "
"and the information about event consumers for an event producer, is "
"contained in typesafe Java constructs that may be validated by the compiler."
msgstr ""
"El segundo tema importante de Web Beans es el <emphasis>tecleado "
"fuerte</emphasis>. La información acerca de dependencias, interceptores y "
"decoradores de Web Bean y la información sobre consumidores de eventos para "
"un productor de eventos, está contenida en construcciones de Java typesafe "
"que pueden ser validadas por el compilador."

#. Tag: para
#, no-c-format
msgid ""
"You don't see string-based identifiers in CDI code, not because the "
"framework is hiding them from you using clever defaulting rules&mdash;so-"
"called \"configuration by convention\"&mdash;but because there are simply no"
" strings there to begin with!"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The obvious benefit of this approach is that <emphasis>any</emphasis> IDE "
"can provide autocompletion, validation and refactoring without the need for "
"special tooling. But there is a second, less-immediately-obvious, benefit. "
"It turns out that when you start thinking of identifying objects, events or "
"interceptors via annotations instead of names, you have an opportunity to "
"lift the semantic level of your code."
msgstr ""
"El beneficio evidente de este método es que <emphasis>cualquier</emphasis> "
"IDE puede proporcionar autofinalización, validación y refactorización sin "
"necesitar herramientas especiales. Pero hay un segundo beneficio menos "
"evidente. Resulta que cuando empieza a pensar en identificación de objetos, "
"eventos o interceptores a través de anotaciones en lugar de nombres, tendrá "
"la oportunidad de aumentar el nivel semántico de su código."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"CDI encourages you develop annotations that model concepts, for example,"
msgstr ""
"Web Beans le anima a desarrollar anotaciones que modelen conceptos, por "
"ejemplo, "

#. Tag: para
#, no-c-format
msgid "<literal>@Asynchronous</literal>,"
msgstr "<literal>@Asynchronous</literal>,"

#. Tag: para
#, no-c-format
msgid "<literal>@Mock</literal>,"
msgstr "<literal>@Mock</literal>,"

#. Tag: para
#, no-c-format
msgid "<literal>@Secure</literal> or"
msgstr "<literal>@Secure</literal> o"

#. Tag: para
#, no-c-format
msgid "<literal>@Updated</literal>,"
msgstr "<literal>@Updated</literal>,"

#. Tag: para
#, no-c-format
msgid "instead of using compound names like"
msgstr "en lugar de utilizar nombres compuestos como"

#. Tag: para
#, no-c-format
msgid "<literal>asyncPaymentProcessor</literal>,"
msgstr "<literal>asyncPaymentProcessor</literal>,"

#. Tag: para
#, no-c-format
msgid "<literal>mockPaymentProcessor</literal>,"
msgstr "<literal>mockPaymentProcessor</literal>,"

#. Tag: para
#, no-c-format
msgid "<literal>SecurityInterceptor</literal> or"
msgstr "<literal>SecurityInterceptor</literal> o"

#. Tag: para
#, no-c-format
msgid "<literal>DocumentUpdatedEvent</literal>."
msgstr "<literal>DocumentUpdatedEvent</literal>."

#. Tag: para
#, no-c-format
msgid ""
"The annotations are reusable. They help describe common qualities of "
"disparate parts of the system. They help us categorize and understand our "
"code. They help us deal with common concerns in a common way. They make our "
"code more literate and more understandable."
msgstr ""
"Las anotaciones son reutilizables. Ayudan a describir cualidades comunes de "
"partes dispares del sistema. Nos ayudan a categorizar y entender nuestro "
"código. Nos ayudan a tratar las cuestiones comunes en una forma común. Hacer"
" nuestro código más leíble y entendible."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"CDI <emphasis>stereotypes</emphasis> take this idea a step further. A "
"stereotype models a common <emphasis>role</emphasis> in your application "
"architecture. It encapsulates various properties of the role, including "
"scope, interceptor bindings, qualifiers, etc, into a single reusable "
"package. (Of course, there is also the benefit of tucking some of those "
"annotations away)."
msgstr ""
"Los <emphasis>estereotipos</emphasis> de Web Beans van más allá de este "
"paso. Un estereotipo modela un <emphasis>rol</emphasis> común en su "
"arquitectura de aplicación. El estereotipo encapsula varias propiedades del "
"rol, incluyendo ámbito, enlaces de interceptor, tipo de despliegue, etc, en "
"un sólo paquete reutilizable."

#. Tag: para
#, no-c-format
msgid ""
"We're now ready to meet some more advanced features of CDI. Bear in mind "
"that these features exist to make our code both easier to validate and more "
"understandable. Most of the time you don't ever really "
"<emphasis>need</emphasis> to use these features, but if you use them wisely,"
" you'll come to appreciate their power."
msgstr ""
