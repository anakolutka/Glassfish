appclient(1M)                   Utility-Befehle                  appclient(1M)

NAME
       appclient - startet den Anwendungsclientcontainer und ruft die
       Clientanwendung auf, die normalerweise in der JAR-Datei der Anwendung
       enthalten ist

ZUSAMMENFASSUNG
           appclient [client_application_classfile | -client client_application_jar]
           [-mainclass main_class_name | -name display_name]
           [-xml sun-acc.xml file] [-textauth]
           [-targetserver host[:port][,host[:port]...]]
           [-user username] [-passwordfile password_file]
           [application-options]

           appclient [jvm-options]
           [-mainclass main_class_name | -name display_name]
           [-xml client_config_xml_file] [-textauth]
           [-targetserver host[:port][,host[:port]...]]
           [-user username] [-passwordfile password_file]
           class-selector [application-options]

BESCHREIBUNG
       Verwenden Sie den Befehl appclient, um den Anwendungsclientcontainer zu
       starten und eine Clientanwendung aufzurufen, die normalerweise in einer
       JAR-Datei der Anwendung enthalten ist. Die JAR-Datei des
       Anwendungsclients wird während des Deployment durch die
       Administrationskonsole oder den Befehl asadmin deploy mit der Option
       --retrieve angegeben und erstellt. Sie können die JAR-Datei des Clients
       auch mithilfe des Befehls asadmin get-client-stubs abrufen.

       Der Anwendungsclientcontainer besteht aus Java-Klassen, Librarys und
       anderen Dateien, die erforderlich sind, um ein
       First-Tier-Anwendungsclientprogramm auf einer Virtual Machine für die
       Java-Plattform (JVM) auszuführen. Der Anwendungsclientcontainer
       kommuniziert mit dem Server mithilfe des RMI-IIOP.

       Die JAR-Datei des Clients, die nach dem Deployment einer Anwendung
       abgerufen wird, sollte mit der Option -client oder -jar weitergegeben
       werden, wenn das Utility appclient ausgeführt wird. Der Name der
       JAR-Datei des Clients muss die Form app-nameClient.jar haben. Für
       mehrere Anwendungsclients in einer EAR-Datei müssen Sie die Option
       -mainclass oder -name verwenden, um anzugeben, welcher Client
       aufgerufen werden soll.

       Wenn der Anwendungsclient ein Standalone-Modul oder der einzige Client
       in einer EAR-Datei ist, kann der Anwendungsclientcontainer den Client
       finden, ohne die Optionen -mainclass oder -name zu verwenden. Wenn Sie
       einen -mainclass- oder -name-Wert angeben, der nicht mit den
       Informationen im Client übereinstimmt, startet der
       Anwendungsclientcontainer den Client trotzdem, gibt aber eine Warnung
       aus, die meldet, dass die Auswahl nicht mit den Informationen im Client
       übereinstimmt. Die Warnung zeigt auch die Werte der aktuellen
       Hauptklasse und des Namens für den Client an.

OPTIONEN
       jvm-options
           Optional; Sie können die JVM-Optionen für die Clientanwendung
           festlegen. Diese können gültige Java-Befehlsoptionen außer-client
           oder -jar sein. JVM-Optionen können mit anderen
           appclient-Befehlsoptionen gemischt werden, solange beide
           Optionstypen vor dem class-selector stehen.

       client_application_classfile
           Optional; der Pfadname des Dateisystems der .class-Datei der
           Clientanwendung. Ein relativer Pfadname muss relativ zum aktuellen
           Verzeichnis sein. Diese Klassendatei muss die main()-Methode
           enthalten, die vom Anwendungsclientcontainer aufgerufen wird.

           Wenn Sie client_application_classfile verwenden und die Klasse von
           anderen Benutzerklassen abhängig ist, müssen Sie auch den Classpath
           festlegen. Sie können entweder die JVM-Option -classpath im Befehl
           appclient verwenden oder die Umgebungsvariable CLASSPATH festlegen.
           Weitere Informationen zum Einrichten von Classpaths finden Sie in
           "Setting the Class Path, Oracle Solaris Version"
           (http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html)
           oder in "Setting the Class Path, Windows Version"
           (http://download.oracle.com/javase/6/docs/technotes/tools/windows/classpath.html).

       -client
           Optional; der Name und das Verzeichnis der JAR-Datei des Clients.

       -mainclass
           Optional; der vollständige Klassenname der Hauptclientanwendung wie
           angegeben im Main-Class-Eintrag in der MANIFEST.MF-Datei. Wird für
           mehrere Clientanwendungen verwendet. Verwendet standardmäßig die in
           der JAR-Datei des Clients angegebene Klasse. Beispiel:
           com.example.test.AppClient.

       -name
           Optional; der Anzeigename der Clientanwendung. Wird für mehrere
           Clientanwendungen verwendet. Der Anzeigename wird standardmäßig in
           der JAR-Datei application-client.xml des Clients angegeben, die
           durch das Attribut display-name identifiziert wird.

       -xml
           Optional, wenn die Standarddomain, die Instanz und der Name
           (sun-acc.xml) verwendet wird, andernfalls erforderlich;
           identifiziert den Namen und das Verzeichnis der XML-Datei der
           Clientkonfiguration. Wenn nicht angegeben, wird standardmäßig die
           Datei sun-acc.xml im Verzeichnis domain-dir/config verwendet.

       -textauth
           Optional; dient zur Angabe mithilfe von
           Textformatauthentifizierung, wenn Authentifizierung erforderlich
           ist.

       -targetserver
           Optional; eine durch Komma getrennte Liste mit mindestens einer
           Serverspezifikation für ORB-End Points. Jede Serverspezifikation
           muss mindestens den Host enthalten. Eine Serverspezifikation kann
           ebenfalls den Port enthalten. Wenn der Port nicht in einer
           Serverspezifikation angegeben wird, wird für den betreffenden Host
           der Standardwert 3700 verwendet.

       -user
           Optional; ein Anwendungsbenutzer, der berechtigt ist, auf bestimmte
           geschützte Komponenten in der Anwendung zuzugreifen, z.B. auf
           EJB-Komponenten.

       -passwordfile
           Optional; zur Angabe des Namens einschließlich des vollständigen
           Pfads einer Datei, die das Kennwort für Anwendungsclients in dem
           folgenden Format enthält:

               PASSWORD=appclient-password
           Wird diese Option übersprungen, muss das Kennwort interaktiv bei
           Eingabeaufforderung angegeben werden.

               Achtung
               ┌───────────────────────────────────────┐
               │Achtung Vermeiden Sie eine interaktive │
               │Kennworteingabe bei                    │
               │Eingabeaufforderung. Ein solches       │
               │Kennwort kann von Benutzern gesehen    │
               │werden, die Befehle zum Anzeigen       │
               │aktueller Prozesse sowie Befehle zum   │
               │Starten solcher Prozesse ausführen     │
               │dürfen, wie beispielsweise ps.         │
               └───────────────────────────────────────┘
           Aus Sicherheitsgründen kann ein Kennwort, das als Umgebungsvariable
           angegeben wird, nicht vom Utility appclient gelesen werden.

       class-selector
           Erforderlich; Sie müssen die Clientanwendungsklasse mit einem der
           folgenden Class Selectors angeben.

           -jar jar-file
               Name und Verzeichnis der JAR-Datei des Clients. Die JAR-Datei
               des Anwendungsclients wird während des Deployment durch den
               Befehl asadmin deploy angegeben und erstellt. Wenn angegeben,
               wird die -classpath-Einstellung aufgrund der
               Class-Path-Einstellung im Manifest der JAR-Datei des Clients
               ignoriert.

           class-name
               der vollqualifizierte Name der Hauptklasse des
               Anwendungsclients. Der Anwendungsclientcontainer ruft die
               Hauptmethode main dieser Klasse zum Starten des Clients auf.
               Beispiel: com.example.test.AppClient.

               Wenn Sie class-name als Class Selector verwenden, müssen Sie
               auch den Classpath festlegen. Sie können entweder die
               JVM-Option -classpath im Befehl appclient verwenden oder die
               Umgebungsvariable CLASSPATH festlegen. Weitere Informationen
               zum Einrichten von Classpaths finden Sie in "Setting the Class
               Path, Oracle Solaris Version"
               (http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html)
               oder in "Setting the Class Path, Windows Version"
               (http://download.oracle.com/javase/6/docs/technotes/tools/windows/classpath.html).

       application-options
           Optional; Sie können Argumente für die Clientanwendung festlegen.

BEISPIELE
       Beispiel 1, Verwendung des Befehls appclient

               appclient -xml sun-acc.xml -jar myclientapp.jar scott sample
           sun-acc.xml ist der Name der XML-Datei der Clientkonfiguration,
           myclientapp.jar ist die JAR-Datei der Clientkonfiguration und scott
           und sample sind Argumente zur Weitergabe der Anwendung. Wenn
           sun-acc.xml und myclientapp.jar nicht im aktuellen Verzeichnis
           enthalten sind, müssen Sie die absoluten Pfade angeben. Andernfalls
           werden die relativen Pfade verwendet. Der relative Pfad steht in
           Relation zu dem Verzeichnis, in dem der Befehl ausgeführt wird.

ATTRIBUTE
       Beschreibungen der folgenden Attribute finden Sie unter attributes(5):

       ┌────────────────────────────────┬─────────────────────┐
       │                                │                     │
       │       Attributtyp              │        Attributwert │
       ├────────────────────────────────┼─────────────────────┤
       │                                │                     │
       │       Schnittstellenstabilität │        Instabil     │
       └────────────────────────────────┴─────────────────────┘

SIEHE AUCH
       get-client-stubs(1)

       asadmin(1M), package-appclient(1M)

Java EE 7                        16. Dez. 2010                   appclient(1M)
