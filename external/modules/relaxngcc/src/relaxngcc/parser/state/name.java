/* this file is generated by RelaxNGCC */
package relaxngcc.parser.state;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.Attributes;
import relaxngcc.parser.ParserRuntime;

    import relaxngcc.MetaDataType;
    import relaxngcc.grammar.*;
    import org.xml.sax.Locator;
class name extends NGCCHandler {
    private String name;
    private boolean attributeMode;
    private NameClass nc;
    protected final ParserRuntime $runtime;
    private int $_ngcc_current_state;

    public final NGCCRuntime getRuntime() {
        return($runtime);
    }

    public name(NGCCHandler parent, NGCCEventSource source, ParserRuntime runtime, int cookie, boolean _attributeMode) {
        super(source, parent, cookie);
        $runtime = runtime;
        this.attributeMode = _attributeMode;
        $_ngcc_current_state = 1;
    }

    public name(ParserRuntime runtime, boolean _attributeMode) {
        this(null, runtime, runtime, -1, _attributeMode);
    }

    private void action0()throws SAXException {
        nc = $runtime.parseSimpleName(name,attributeMode);}

    public void enterElement(String $uri, String $local, String $qname, Attributes $attrs)throws SAXException {
        int $ai;
        switch($_ngcc_current_state) {
        case 1:
            {
                if(($ai = $runtime.getAttributeIndex("","name"))>=0) {
                    $runtime.consumeAttribute($ai);
                    $runtime.sendEnterElement(super._cookie, $uri, $local, $qname, $attrs);
                }
                else {
                    if((($uri.equals("http://relaxng.org/ns/structure/1.0") && $local.equals("name")) || (($uri.equals("http://relaxng.org/ns/structure/1.0") && $local.equals("anyName")) || (($uri.equals("http://relaxng.org/ns/structure/1.0") && $local.equals("nsName")) || ($uri.equals("http://relaxng.org/ns/structure/1.0") && $local.equals("choice")))))) {
                        NGCCHandler h = new NameClassState(this, super._source, $runtime, 452);
                        spawnChildFromEnterElement(h, $uri, $local, $qname, $attrs);
                    }
                    else {
                        unexpectedEnterElement($qname);
                    }
                }
            }
            break;
        case 0:
            {
                revertToParentFromEnterElement(nc, super._cookie, $uri, $local, $qname, $attrs);
            }
            break;
        default:
            {
                unexpectedEnterElement($qname);
            }
            break;
        }
    }

    public void leaveElement(String $uri, String $local, String $qname)throws SAXException {
        int $ai;
        switch($_ngcc_current_state) {
        case 1:
            {
                if(($ai = $runtime.getAttributeIndex("","name"))>=0) {
                    $runtime.consumeAttribute($ai);
                    $runtime.sendLeaveElement(super._cookie, $uri, $local, $qname);
                }
                else {
                    unexpectedLeaveElement($qname);
                }
            }
            break;
        case 0:
            {
                revertToParentFromLeaveElement(nc, super._cookie, $uri, $local, $qname);
            }
            break;
        default:
            {
                unexpectedLeaveElement($qname);
            }
            break;
        }
    }

    public void enterAttribute(String $uri, String $local, String $qname)throws SAXException {
        int $ai;
        switch($_ngcc_current_state) {
        case 1:
            {
                if(($uri.equals("") && $local.equals("name"))) {
                    $_ngcc_current_state = 4;
                }
                else {
                    unexpectedEnterAttribute($qname);
                }
            }
            break;
        case 0:
            {
                revertToParentFromEnterAttribute(nc, super._cookie, $uri, $local, $qname);
            }
            break;
        default:
            {
                unexpectedEnterAttribute($qname);
            }
            break;
        }
    }

    public void leaveAttribute(String $uri, String $local, String $qname)throws SAXException {
        int $ai;
        switch($_ngcc_current_state) {
        case 0:
            {
                revertToParentFromLeaveAttribute(nc, super._cookie, $uri, $local, $qname);
            }
            break;
        case 3:
            {
                if(($uri.equals("") && $local.equals("name"))) {
                    $_ngcc_current_state = 0;
                }
                else {
                    unexpectedLeaveAttribute($qname);
                }
            }
            break;
        default:
            {
                unexpectedLeaveAttribute($qname);
            }
            break;
        }
    }

    public void text(String $value)throws SAXException {
        int $ai;
        switch($_ngcc_current_state) {
        case 1:
            {
                if(($ai = $runtime.getAttributeIndex("","name"))>=0) {
                    $runtime.consumeAttribute($ai);
                    $runtime.sendText(super._cookie, $value);
                }
            }
            break;
        case 0:
            {
                revertToParentFromText(nc, super._cookie, $value);
            }
            break;
        case 4:
            {
                name = $value;
                $_ngcc_current_state = 3;
                action0();
            }
            break;
        }
    }

    public void onChildCompleted(Object result, int cookie, boolean needAttCheck)throws SAXException {
        switch(cookie) {
        case 452:
            {
                this.nc = ((NameClass)result);
                $_ngcc_current_state = 0;
            }
            break;
        }
    }

    public boolean accepted() {
        return(($_ngcc_current_state == 0));
    }


}

