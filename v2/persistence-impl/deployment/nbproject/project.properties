#
# The contents of this file are subject to the terms 
# of the Common Development and Distribution License 
# (the "License").  You may not use this file except 
# in compliance with the License.
# 
# You can obtain a copy of the license at 
# glassfish/bootstrap/legal/CDDLv1.0.txt or 
# https://glassfish.dev.java.net/public/CDDLv1.0.html. 
# See the License for the specific language governing 
# permissions and limitations under the License.
# 
# When distributing Covered Code, include this CDDL 
# HEADER in each file and include the License file at 
# glassfish/bootstrap/legal/CDDLv1.0.txt.  If applicable, 
# add the following below this CDDL HEADER, with the 
# fields enclosed by brackets "[]" replaced with your 
# own identifying information: Portions Copyright [yyyy] 
# [name of copyright owner]
#

application.args=
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=dist/deployment.jar
dist.javadoc.dir=${dist.dir}/javadoc
file.reference.asm.jar=../lib/asm.jar
file.reference.dbschema.jar=../lib/dbschema.jar
file.reference.jaxb-api.jar=../lib/jaxb-api.jar
file.reference.jaxb-impl.jar=../lib/jaxb-impl.jar
file.reference.jsr173_1.0_api.jar=../lib/jsr173_1.0_api.jar
jar.compress=false
# A note about classpath:
# j2ee.jar is after jaxb-api.jar, as j2ee.jar contains JAXB 1.0, but we need 2.0
# appserv-rt.jar is required because that contains annotation-framework.
javac.classpath=\
    ${file.reference.jaxb-api.jar}:\
    ${file.reference.jaxb-impl.jar}:\
    ${file.reference.jsr173_1.0_api.jar}:\
    ${file.reference.dbschema.jar}:\
    ${file.reference.asm.jar}:\
    ${file.reference.j2ee.jar}:\
    ${file.reference.appserv-rt.jar}:\
    ${reference.utility.jar}:\
    ${reference.model.jar}:\
    ${reference.enhancer.jar}
# Space-separated list of extra javac options
javac.debug=true
javac.compilerargs=-Xlint:unchecked
javac.deprecation=false
# The following two properties have been changed by hand to be set as 1.5.
# This may required to be done every time we change the project settings
# because NB seems to be changing it to ${default.javac...} which is set as 1.4
# in build-impl.xml.
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=
platform.active=default_platform
reference.enhancer.jar=${project.enhancer}/dist/enhancer.jar
reference.model.jar=${project.model}/dist/model.jar
reference.utility.jar=${project.utility}/dist/utility.jar
# This is used in run.classpath
reference.runtime.jar=${project.runtime}/dist/runtime.jar
project.runtime=../runtime
project.utility=../utility
project.model=../model
project.enhancer=../enhancer
# A note on run.classpath.
# This is standard netbeans property used by 'ant run' to pass classpath to JVM.
# Since StandaloneDeployer uses reflection to load RuntimeModel which is
# in runtime project, we need runtime.jar in run.classpath. To avoid circular
# dependency between runtime which uses StandaloneDeployer and depoyment project,
# we can't put a dependency on runtime project at build time. So user has to
# build runtime project before running ant run target.
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${reference.runtime.jar}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
src.dir=src
modified.gensrc.dir=modified-gen-src

# For full integration in NetBeans, you must define 
# file.reference.appserv-rt.jar and file.reference.j2ee.jar in 
# your <netbeans user dir>/build.properties or in your 
# private/private.properties.  Both these jar files can be found in 
# ${glassfish.home}/lib directory.
