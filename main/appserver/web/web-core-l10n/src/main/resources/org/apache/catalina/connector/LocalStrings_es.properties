#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
#
# This file incorporates work covered by the following copyright and
# permission notice:
#
# Copyright 2004 The Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Message IDs reserved for this file: PWC6600-PWC6624
#
object.invalidScope=PWC6600: no se puede utilizar este objeto fuera de un m\u00E9todo de servicio del servlet o de un m\u00E9todo doFilter de filtro

#
# Message IDs reserved for this file: PWC3980-PWC4209
#
coyoteConnector.alreadyInitialized=PWC3980: ya se ha inicializado el conector
coyoteConnector.alreadyStarted=PWC3981: ya se ha iniciado el conector
coyoteConnector.cannotRegisterProtocol=PWC3982: no se puede registrar el MBean para el protocolo
coyoteConnector.notStarted=PWC3983: no se ha iniciado el conector Coyote
coyoteConnector.protocolHandlerDestroyFailed=PWC3984: fallo al destruir el manejador de protocolo: {0}
coyoteConnector.protocolHandlerInitializationFailed=PWC3985: fallo al inicializar el manejador de protocolo: {0}
coyoteConnector.protocolHandlerInstantiationFailed=PWC3986: fallo al instanciar el manejador de protocolo: {0}
coyoteConnector.protocolHandlerStartFailed=PWC3987: fallo al iniciar el manejador de protocolo: {0}
coyoteConnector.protocolRegistrationFailed=PWC3988: fallo de registro de JMX de protocolo
coyoteConnector.illegalAdapter=PWC4015: implantaci\u00F3n del adaptador mod_jk no v\u00E1lida: {0} 
coyoteAdapter.service=PWC3989: se ha producido una excepci\u00F3n en el contenedor durante el procesamiento de la solicitud
coyoteResponse.getOutputStream.ise=PWC3990: ya se ha llamado a getWriter() para esta respuesta
coyoteResponse.getWriter.ise=PWC3991: ya se ha llamado a getOutputStream() para esta respuesta
coyoteResponse.resetBuffer.ise=PWC3992: no se puede restablecer el buffer despu\u00E9s de haber confirmado la respuesta
coyoteResponse.sendError.ise=PWC3993: no se puede llamar a sendError() despu\u00E9s de haber validado la respuesta
coyoteResponse.sendRedirect.ise=PWC3994: no se puede llamar a sendRedirect() despu\u00E9s de haber confirmado la respuesta
coyoteResponse.setBufferSize.ise=PWC3995: no se puede cambiar el tama\u00F1o del buffer despu\u00E9s de haber escrito los datos
responseFacade.nullResponse=PWC3996: objeto de respuesta nulo
coyoteRequest.getInputStream.ise=PWC3997: ya se ha llamado a getReader() para esta solicitud
coyoteRequest.getReader.ise=PWC3998: ya se ha llamado a getInputStream() para esta solicitud
coyoteRequest.sessionCreateCommitted=PWC3999: no se puede crear una sesi\u00F3n despu\u00E9s de haber confirmado la respuesta
coyoteRequest.setAttribute.namenull=PWC4000: no se puede llamar a setAttribute con un nombre nulo
coyoteRequest.listenerStart=PWC4001: excepci\u00F3n al enviar el evento inicializado de contexto a la instancia del listener de clase {0}
coyoteRequest.listenerStop=PWC4002: excepci\u00F3n al enviar el evento destruido de contexto a la instancia de listener de clase {0}
coyoteRequest.attributeEvent=PWC4003: el listener de evento de atributos ha devuelto una excepci\u00F3n
coyoteRequest.postTooLarge=PWC4004: los par\u00E1metros no se han analizado porque el tama\u00F1o de los datos publicados es demasiado grande. Utilice el atributo maxPostSize del conector para resolver este problema si la aplicaci\u00F3n debe aceptar publicaciones de gran tama\u00F1o.
requestFacade.nullRequest=PWC4005: no se debe utilizar el objeto de solicitud fuera del \u00E1mbito del servicio del servlet de un m\u00E9todo doFilter del filtro
coyoteAdapter.proxyAuthCertError=PWC4009: error al analizar la cadena de certificados de cliente en una matriz de instancias de java.security.cert.X509Certificate
coyoteAdapter.listenerOff=PWC4010: se ha desactivado el listener HTTP en el puerto {0}
#no ID on coyoteAdapter.noHost as it is sent to client
coyoteAdapter.noHost=Ning\u00FAn host coincide con el nombre del servidor {0}
coyoteRequest.setCharacterEncoding.ise=PWC4011: no se ha podido definir la codificaci\u00F3n de caracteres de solicitud en {0} del contexto {1} porque los par\u00E1metros de solicitud ya se han le\u00EDdo o ya se ha llamado a ServletRequest.getRead()
coyoteRequest.unknownHost=PWC4012: no se ha podido resolver la direcci\u00F3n IP {0} en el nombre del host
coyoteRequest.nullRemoteAddressFromProxy=PWC4013: no se ha podido determinar la direcci\u00F3n remota de cliente desde el proxy (devuelve un valor nulo)
object.invalidScope=PWC4014: no se puede utilizar este objeto fuera de un m\u00E9todo de servicio del servlet o de un m\u00E9todo doFilter del filtro
inputBuffer.streamClosed=PWC4015: flujo cerrado
coyoteRequest.sendfileNotCanonical=PWC4016: no se ha podido determinar el nombre can\u00F3nico del archivo [{0}] especificado para utilizarlo con el archivo de env\u00EDo
coyoteRequest.multipart.not.configured=PWC4017: se ha llamado a la solicitud {0} con una configuraci\u00F3n de varias partes. Agregue @MultipartConfig al servlet o un elemento multipart-config a web.xml
inputBuffer.alreadysetReadListener=PWC4018: ya se ha definido ReadListener.
outputBuffer.alreadysetWriteListener=PWC4019: ya se ha definido WriteListener.
coyoteRequest.changeSessionId.ise=PWC4020: se ha llamado a changeSessionId sin una sesi\u00F3n
coyoteReader.readline.skipFailure=PWC4021: fallo al omitir los caracteres {0} en el buffer subyacente de CoyoteReader en readLine().

#
# Messages related to async processing mode
#
async.dispatchInProgress=La distribuci\u00F3n as\u00EDncrona ya est\u00E1 en curso, debe llamar primero a ServletRequest.startAsync
async.addListenerIllegalState=No debe llamar a AsyncContext.addListener despu\u00E9s de la distribuci\u00F3n de container-initiated durante el que el ServletRequest.startAsync llamado ha vuelto al contendor
async.setTimeoutIllegalState=No debe llamar a AsyncContext.setTimeout despu\u00E9s de la distribuci\u00F3n de container-initiated durante el que el ServletRequest.startAsync llamado ha vuelto al contendor
async.listenerInvocationError=Error al llamar a AsyncListener
request.notInAsyncMode=La solicitud no se ha puesto en modo as\u00EDncrono, debe llamar primero a ServletRequest.startAsync
request.startAsync.notSupported=La solicitud est\u00E1 en el \u00E1mbito de un filtro o servlet que no soporta operaciones as\u00EDncronas
request.startAsync.alreadyCalled=Se ha vuelto a llamar a ServletRequest.startAsync sin ninguna distribuci\u00F3n as\u00EDncrona, se ha llamado fuera del \u00E1mbito de cualquier distribuci\u00F3n o se ha vuelto a llamar en el \u00E1mbito de la misma distribuci\u00F3n
request.startAsync.alreadyComplete=Respuesta ya cerrada
request.startAsync.notInScope=Se ha llamado a ServletRequest.startAsync fuera del \u00E1mbito de una distribuci\u00F3n as\u00EDncrona
request.asyncComplete.alreadyComplete=La solicitud ya se ha liberado del modo as\u00EDncrono
