The tests can be run thus:

cd admin-cli/framework
gmake bootstrap
gmake ANT_TARGETS="-Dcut=AllTest test"

(There is a target, "test", which is parameterized by the name of the Class Under Test (aka 'cut'). Thus generally, for some class A, the test is run like this:

gmake ANT_TARGETS="-Dcut=ATest test" )

If you check out jcov (look at /net/koori/onestop/jcov to get a copy) you can also generate a coverage report for the tests, thus:

gmake ANT_TARGETS="-Dcover.class=All jcov.static jcov.report

The location of the report will be echoed to stdout near the end of the run. (You'll notice the high (82%) method coverage - with only a few classes being less than 75% - this was one of the goals of this test effort, to demonstrate that developers can get high coverage without too much difficulty - I would contend that we should not ship ANY code where we don't have 100% test coverage from engineering. The QA folks should be responsible for the stuff we can't do, not the stuff we can do)

(Generally speaking, there are two targets, 'jcov.static', & 'jcov.report' which work together to produce a coverage rerpot. Both are parameterized by the name of the class ('cover.class') which is the focus of the coverage report. Thus, generally, for some class A, the coverage report is generated like this:

gmake ANT_TARGETS="-Dcover.class=A jcov.static jcov.report)

Note that because I haven't yet managed to get jcov.jar in the build (and if anyone has influence with QingQing I'd appreciate them helping me get her to put this in the build) you need your own local copy of jcov.jar, and you need to edit admin-cli/framework/build.properties, changing the property 'jcov.jar' to indicate the exact location of the jcov.jar file.

***** Running the test using ANT *****
The new instruction should now be:
1) cvs -d:pserver:<user id>@rejuniper.sfbay.sun.com:/cvs checkout glassfish/admin-cli/framework
2) cd glassfish/admin-cli/framework
3) build and assemble:  ant -f frameworkbuild.xml
4) exeucte unit tests:     ant -f frameworkbuild.xml -Dcut=AllTest test
