# translation of example.po to Spanish
# Language es-ES translations for master.xml package.
#
# Automatically generated, 2008.
# Gladys Guerrero Lozano <gguerrer@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: example\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-07-25T03:52:14\n"
"PO-Revision-Date: 2009-01-20 10:54+1000\n"
"Last-Translator: Gladys Guerrero Lozano <gguerrer@redhat.com>\n"
"Language-Team: Spanish <fedora-trans-es@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, no-c-format
msgid "JSF web application example"
msgstr "ejemplo de aplicación de red JSF"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Let's illustrate these ideas with a full example. We're going to implement "
"user login/logout for an application that uses JSF. First, we'll define a "
"request-scoped bean to hold the username and password entered during login, "
"with constraints defined using annotations from the Bean Validation "
"specification:"
msgstr ""
"Ilustremos estas ideas con un ejemplo. Vamos a implementar inicio/cierre de "
"sesión de usuario para una aplicación que utiliza JSF. Primero, definiremos "
"un Web Bean para mantener el nombre de usuario y contraseña escritos durante "
"el inicio de sesión:"

#. Tag: para
#, fuzzy, no-c-format
msgid "This bean is bound to the login prompt in the following JSF form:"
msgstr ""
"Este Web Bean está vinculado al intérprete de comandos de inicio de sesión "
"en el siguiente formulario JSF:"

#. Tag: para
#, no-c-format
msgid "Users are represented by a JPA entity:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"(Note that we're also going to need a <literal>persistence.xml</literal> "
"file to configure the JPA persistence unit containing <literal>User</"
"literal>.)"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The actual work is done by a session-scoped bean that maintains information "
"about the currently logged-in user and exposes the <literal>User</literal> "
"entity to other beans:"
msgstr ""
"El trabajo real está hecho por una sesión de ámbito Web Bean que mantiene "
"información acerca del usuario actualmente conectado y expone la entidad del "
"<literal>Usuario</literal> a otras Web Beans:"

#. Tag: para
#, no-c-format
msgid ""
"<literal>@LoggedIn</literal> and <literal>@UserDatabase</literal> are custom "
"qualifier annotations:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"We need an adaptor bean to expose our typesafe <literal>EntityManager</"
"literal>:"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Now <literal>DocumentEditor</literal>, or any other bean, can easily inject "
"the current user:"
msgstr ""
"Ahora, cualquier otro Web Bean puede fácilmente inyectar al usuario actual:"

#. Tag: para
#, no-c-format
msgid "Or we can reference the current user in a JSF view:"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Hopefully, this example gave you a taste of the CDI programming model. In "
"the next chapter, we'll explore dependency injection in greater depth."
msgstr ""
"Esperamos que este ejemplo de una idea del modelo de programación de Web "
"Bean. En el próximo capítulo, estudiaremos más a fondo la inyección de "
"dependencia de Web Beans."

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@Named @RequestScoped\n"
#~ "public class Credentials {\n"
#~ "    private String username;\n"
#~ "    private String password;\n"
#~ "    \n"
#~ "    @NotNull @Length(min=3, max=25)\n"
#~ "    public String getUsername() { return username; }\n"
#~ "    public void setUsername(String username) { this.username = "
#~ "username; }\n"
#~ "    \n"
#~ "    @NotNull @Length(min=6, max=20)\n"
#~ "    public String getPassword() { return password; }\n"
#~ "    public void setPassword(String password) { this.password = "
#~ "password; }\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[@Named @RequestScoped\n"
#~ "public class Credentials {\n"
#~ "        \n"
#~ "    private String username;\n"
#~ "    private String password;\n"
#~ "    \n"
#~ "    public String getUsername() { return username; }\n"
#~ "    public void setUsername(String username) { this.username = "
#~ "username; }\n"
#~ "    \n"
#~ "    public String getPassword() { return password; }\n"
#~ "    public void setPassword(String password) { this.password = "
#~ "password; }\n"
#~ "    \n"
#~ "}]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<h:form>\n"
#~ "   <h:panelGrid columns=\"2\" rendered=\"#{!login.loggedIn}\">\n"
#~ "      <f:validateBean>\n"
#~ "         <h:outputLabel for=\"username\">Username:</h:outputLabel>\n"
#~ "         <h:inputText id=\"username\" value=\"#{credentials.username}\"/"
#~ ">\n"
#~ "         <h:outputLabel for=\"password\">Password:</h:outputLabel>\n"
#~ "         <h:inputText id=\"password\" value=\"#{credentials.password}\"/"
#~ ">\n"
#~ "      </f:validateBean>\n"
#~ "   </h:panelGrid>\n"
#~ "   <h:commandButton value=\"Login\" action=\"#{login.login}\" rendered=\"#"
#~ "{!login.loggedIn}\"/>\n"
#~ "   <h:commandButton value=\"Logout\" action=\"#{login.logout}\" rendered="
#~ "\"#{login.loggedIn}\"/>\n"
#~ "</h:form>]]>"
#~ msgstr ""
#~ "<![CDATA[<h:form>\n"
#~ "    <h:panelGrid columns=\"2\" rendered=\"#{!login.loggedIn}\">\n"
#~ "        <h:outputLabel for=\"username\">Username:</h:outputLabel>\n"
#~ "        <h:inputText id=\"username\" value=\"#{credentials.username}\"/>\n"
#~ "        <h:outputLabel for=\"password\">Password:</h:outputLabel>\n"
#~ "        <h:inputText id=\"password\" value=\"#{credentials.password}\"/>\n"
#~ "    </h:panelGrid>\n"
#~ "    <h:commandButton value=\"Login\" action=\"#{login.login}\" rendered="
#~ "\"#{!login.loggedIn}\"/>\n"
#~ "    <h:commandButton value=\"Logout\" acion=\"#{login.logout}\" rendered="
#~ "\"#{login.loggedIn}\"/>\n"
#~ "</h:form>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@Entity\n"
#~ "public class User {\n"
#~ "   private @NotNull @Length(min=3, max=25) @Id String username;\n"
#~ "   private @NotNull @Length(min=6, max=20) String password;\n"
#~ "   \n"
#~ "   public String getUsername() { return username; }\n"
#~ "   public void setUsername(String username) { this.username = "
#~ "username; }\n"
#~ "   public String setPassword(String password) { this.password = "
#~ "password; }\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[@Named @RequestScoped\n"
#~ "public class Credentials {\n"
#~ "        \n"
#~ "    private String username;\n"
#~ "    private String password;\n"
#~ "    \n"
#~ "    public String getUsername() { return username; }\n"
#~ "    public void setUsername(String username) { this.username = "
#~ "username; }\n"
#~ "    \n"
#~ "    public String getPassword() { return password; }\n"
#~ "    public void setPassword(String password) { this.password = "
#~ "password; }\n"
#~ "    \n"
#~ "}]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@SessionScoped @Named\n"
#~ "public class Login implements Serializable {\n"
#~ "\n"
#~ "   @Inject Credentials credentials;\n"
#~ "   @Inject @UserDatabase EntityManager userDatabase;\n"
#~ "\n"
#~ "   private User user;\n"
#~ "    \n"
#~ "   public void login() {\n"
#~ "      List<User> results = userDatabase.createQuery(\n"
#~ "         \"select u from User u where u.username = :username and u."
#~ "password = :password\")\n"
#~ "         .setParameter(\"username\", credentials.getUsername())\n"
#~ "         .setParameter(\"password\", credentials.getPassword())\n"
#~ "         .getResultList();\n"
#~ "        \n"
#~ "      if (!results.isEmpty()) {\n"
#~ "         user = results.get(0);\n"
#~ "      }\n"
#~ "      else {\n"
#~ "         // perhaps add code here to report a failed login\n"
#~ "      }\n"
#~ "   }\n"
#~ "    \n"
#~ "   public void logout() {\n"
#~ "      user = null;\n"
#~ "   }\n"
#~ "    \n"
#~ "   public boolean isLoggedIn() {\n"
#~ "      return user != null;\n"
#~ "   }\n"
#~ "    \n"
#~ "   @Produces @LoggedIn User getCurrentUser() {\n"
#~ "      return user;\n"
#~ "   }\n"
#~ "\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[@SessionScoped @Named\n"
#~ "public class Login {\n"
#~ "\n"
#~ "    @Current Credentials credentials;\n"
#~ "    @PersistenceContext EntityManager userDatabase;\n"
#~ "\n"
#~ "    private User user;\n"
#~ "    \n"
#~ "    public void login() {\n"
#~ "            \n"
#~ "        List<User> results = userDatabase.createQuery(\n"
#~ "           \"select u from User u where u.username=:username and u."
#~ "password=:password\")\n"
#~ "           .setParameter(\"username\", credentials.getUsername())\n"
#~ "           .setParameter(\"password\", credentials.getPassword())\n"
#~ "           .getResultList();\n"
#~ "        \n"
#~ "        if ( !results.isEmpty() ) {\n"
#~ "           user = results.get(0);\n"
#~ "        }\n"
#~ "        \n"
#~ "    }\n"
#~ "    \n"
#~ "    public void logout() {\n"
#~ "        user = null;\n"
#~ "    }\n"
#~ "    \n"
#~ "    public boolean isLoggedIn() {\n"
#~ "       return user!=null;\n"
#~ "    }\n"
#~ "    \n"
#~ "    @Produces @LoggedIn User getCurrentUser() {\n"
#~ "        return user;\n"
#~ "    }\n"
#~ "\n"
#~ "}]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@Qualifier\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Target({TYPE, METHOD, PARAMETER, FIELD})\n"
#~ "public @interface LoggedIn {}]]>"
#~ msgstr ""
#~ "<![CDATA[@Retention(RUNTIME)\n"
#~ "@Target({TYPE, METHOD, FIELD})\n"
#~ "@BindingType\n"
#~ "public @interface LoggedIn {}]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@Qualifier\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Target({METHOD, PARAMETER, FIELD})\n"
#~ "public @interface UserDatabase {}]]>"
#~ msgstr ""
#~ "<![CDATA[@Retention(RUNTIME)\n"
#~ "@Target({TYPE, METHOD, FIELD})\n"
#~ "@BindingType\n"
#~ "public @interface LoggedIn {}]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[public class DocumentEditor {\n"
#~ "   @Inject Document document;\n"
#~ "   @Inject @LoggedIn User currentUser;\n"
#~ "   @Inject @DocumentDatabase EntityManager docDatabase;\n"
#~ "    \n"
#~ "   public void save() {\n"
#~ "      document.setCreatedBy(currentUser);\n"
#~ "      docDatabase.persist(document);\n"
#~ "   }\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[public class DocumentEditor {\n"
#~ "\n"
#~ "    @Current Document document;\n"
#~ "    @LoggedIn User currentUser;\n"
#~ "    @PersistenceContext EntityManager docDatabase;\n"
#~ "    \n"
#~ "    public void save() {\n"
#~ "        document.setCreatedBy(currentUser);\n"
#~ "        docDatabase.persist(document);\n"
#~ "    }\n"
#~ "    \n"
#~ "}]]>"

#~ msgid "Of course, <literal>@LoggedIn</literal> is a binding annotation:"
#~ msgstr ""
#~ "Obviamente, <literal>@LoggedIn</literal> es una anotación de enlace:"
