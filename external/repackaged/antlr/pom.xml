<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 1997-2013 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>net.java</groupId>
	<artifactId>jvnet-parent</artifactId>
        <version>4</version>
    </parent>
    <groupId>org.glassfish.external</groupId>
    <artifactId>antlr</artifactId>
    <!--
        THE VERSION SHOULD BE ANTLR's version !!!
        
        if there is a need for an incremental release, use a qualifier (e.g. 2.7.6-1)
        under trunk/external/repackaged, version are SNAPSHOT version of the next release!
    -->
    <version>2.7.6-SNAPSHOT</version>
    
    <name>Antlr, repackaged as an OSGI bundle</name>
    
    <properties>
        <antlr.version>2.7.6</antlr.version>
        <release.arguments />
    </properties>
    
    <licenses>
        <license>
            <name>CDDL + GPLv2 with classpath exception</name>
            <url>http://glassfish.java.net/nonav/public/CDDL+GPL.html</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    
    <scm>
        <connection>scm:svn:https://svn.java.net/svn/glassfish~svn/trunk/external/repackaged/antlr</connection>
        <developerConnection>scm:svn:https://svn.java.net/svn/glassfish~svn/trunk/external/repackaged/antlr</developerConnection>
        <url>https://svn.java.net/svn/glassfish~svn/trunk/external/repackaged/antlr</url>
    </scm>
    
    <mailingLists>
        <mailingList>
            <name>dev</name>
            <subscribe>http://java.net/projects/glassfish/lists</subscribe>
            <post>dev@glassfish.java.net</post>
            <archive>http://java.net/projects/glassfish/lists/dev/archive</archive>
        </mailingList>
        <mailingList>
            <name>users</name>
            <subscribe>http://java.net/projects/glassfish/lists</subscribe>
            <post>users@glassfish.java.net</post>
            <archive>http://java.net/projects/glassfish/lists/users/archive</archive>
        </mailingList>
        <mailingList>
            <name>issues</name>
            <subscribe>http://java.net/projects/glassfish/lists</subscribe>
            <post>issues@glassfish.java.net</post>
            <archive>http://java.net/projects/glassfish/lists/issues/archive</archive>
        </mailingList>
        <mailingList>
            <name>commits</name>
            <subscribe>http://java.net/projects/glassfish/lists</subscribe>
            <post>commits@glassfish.java.net</post>
            <archive>http://java.net/projects/glassfish/lists/commits/archive</archive>
        </mailingList>
    </mailingLists>
    
    <issueManagement>
        <system>IssueTracker</system>
        <url>http://java.net/jira/browse/GLASSFISH</url>
    </issueManagement>            

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.3.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Embed-Dependency>
                            antlr;inline=true
                        </Embed-Dependency>
                        <!-- we are not using _exportcontents, because that
                             does not generate version in Export-Package.
                             Sahoo to investigate further.
                        -->
                        <!-- We set a mandatory attribute for these packages, because we don't
                             want them to be visible to just anyone. An importer must specify
                             the mandatory attribute for it to be able to import. See 
                             section #3.6.5 of OSGi R4 spec.
                             Why is this required?
                             See https://glassfish.dev.java.net/issues/show_bug.cgi?id=5385
                             By doing this, we allow user have any version of apache-commons lib
                             in their application class loader hierarchy. They don't even have to
                             set delegation=false in sun-web.xml! This is the true advantage of
                             using OSGi. Sahoo.
                        -->
                        <Export-Package>antlr.*;version=${antlr.version}; password="GlassFish"; mandatory:=password</Export-Package>
                        <Private-Package>!*</Private-Package>
                    </instructions>
                    <!-- Maven uses the output directory (target/classes)
                    rather than the final bundle, when compiling against
                    projects in the same reactor (ie. the same build).
                    Since this jar comprises of classes that come from
                    some other jar and other modules depend on this
                    artifact, we need to unpack.
                    -->
                    <unpackBundle>true</unpackBundle>
                </configuration>
                <executions>
                    <execution>
                        <id>osgi-bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 
                unpack and attach the sources.jar available
                This allows us to generate proper sources.jar and javadoc.jar
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source-step1</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>antlr</groupId>
                                    <artifactId>antlr</artifactId>
                                    <version>${antlr.version}</version>
                                    <classifier>sources</classifier>
                                    <outputDirectory>${project.build.directory}/sources</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source-step2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>            
        </plugins>
    </build>
    
    <dependencies>
        <dependency>
            <groupId>antlr</groupId>
            <artifactId>antlr</artifactId>
            <version>${antlr.version}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>
</project>
