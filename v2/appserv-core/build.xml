<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->

<!DOCTYPE project [
  <!ENTITY compile SYSTEM "./compile.xml">
  <!ENTITY commonBuild SYSTEM "../bootstrap/ant-common.xml">
]>

<project name="Sun Java System appserver core" default="all" basedir=".">  

<!-- ========== Initialize Properties =================================== -->

    &commonBuild;
    
    <!--
        component.name: required property.  the value should be the
                        name of the component directory
    -->
    <property name="component.name" value="appserv-core"/>

    <property file="../bootstrap/project.properties"/>
    <property file="./build.properties"/>

    <!-- The following properties need to be defined the same in commons and core.
        Make any changes in both places.  -->
    <property name="jws.appclient.path" value="com/sun/enterprise/appclient/jws"/>
    <property name="jws.system.app.name" value="__JWSappclients"/>
    <property name="jws.system.web.app.name" value="sys"/>
    <property name="jws.appclient.keystore" value="tempKeystore.jks"/>

    <!-- init. Initialization involves creating publishing directories and
         OS specific targets. --> 
    <target name="init" description="${component.name} initialization">
        <tstamp>
            <format property="start.time" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>    
        <echo message="Building component ${component.name}"/>
        <mkdir dir="${component.classes.dir}"/>
    </target>

    <!-- include compile.xml -->
    &compile;

    <!-- all -->
    <target name="all" depends="compile, assemble, publish"
            description="Build entire component">
    </target>

    <!-- build -->
    <target name="build" depends="compile, assemble, publish"
            description="Build entire component">
    </target>

    <!-- clean -->
    <target name="clean" 
		description="Clean the build">
  	   <delete includeEmptyDirs="true" failonerror="false">
    		<fileset dir="${component.classes.dir}"/>
	    </delete>
    </target>

    <!-- assemble -->
    <target name="assemble" 
            depends="init, assemble-taglibs, assemble-j2ee-svc, assemble-adminapp"
            description="Create appserv-core jar files">

        <copy todir="${component.classes.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.dtd"/>
            </fileset>
        </copy>
        
        <jar jarfile="${appserv-admin.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/admin/util/*.class"/>
                <include name="com/sun/enterprise/admin/common/**/*.class"/>
                <include name="com/sun/enterprise/admin/comm/*.class"/>
                <include name="com/sun/enterprise/admin/servermodel/**/*.class"/>
                <exclude name="com/sun/enterprise/admin/servermodel/tester/**"/>
            </fileset>
        </jar>

        <jar jarfile="${appserv-deployment-client.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/deployapi/*.class"/>
                <include name="com/sun/enterprise/deployapi/LocalStrings.properties"/>
                <include name="com/sun/enterprise/deployment/client/*.class"/>
                <include name="com/sun/enterprise/deployment/client/LocalStrings.properties"/>
                <include name="com/sun/enterprise/deployment/backend/DeploymentStatus.class"/>
                <include name="com/sun/enterprise/admin/common/exception/AFException.class"/>
                <include name="com/sun/enterprise/admin/util/HostAndPort.class"/>
            </fileset>
        </jar>

        <jar jarfile="${appserv-rt.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="**/*.class"/>
                <include name="**/*.properties"/>
                <include name="**/*.dtd"/>
                <exclude name="com/sun/appserv/web/taglibs/**"/>
                <!-- DUPLICATE ENTRY clash with avk -->
                <exclude name="com/sun/enterprise/tools/verifier/StringManagerHelper.class"/>
                <exclude name="com/sun/enterprise/tools/verifier/TestInformation.class"/>
                <exclude name="com/sun/enterprise/appclient/jws/boot/*.*"/>
                <!-- Exclude the classes in appserv-deployment-client.jar -->
                <exclude name="com/sun/enterprise/deployapi/*.class"/>
                <exclude name="com/sun/enterprise/deployapi/LocalStrings.properties"/>
                <exclude name="com/sun/enterprise/deployment/client/*.class"/>
                <exclude name="com/sun/enterprise/deployment/client/LocalStrings.properties"/>
                <exclude name="com/sun/enterprise/deployment/backend/DeploymentStatus.class"/>
                <exclude name="com/sun/enterprise/admin/common/exception/AFException.class"/>
                <exclude name="com/sun/enterprise/admin/util/HostAndPort.class"/>
            </fileset>
            <fileset dir="${src.dir}">
                <include name="**/${jws.appclient.path}/templates/**"/>
            </fileset>
        </jar>

        <jar jarfile="${appserv-launch.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/server/PELaunch*.class"/>
                <include name="com/sun/appserv/server/util/ASURLClassLoader.class"/>
                <include name="com/sun/appserv/server/util/ClassLoaderChain.class"/>
                <include name="com/sun/enterprise/util/ASenvPropertyReader.class"/>
                <include name="com/sun/enterprise/server/ss/provider/*.class"/>
                <include name="com/sun/enterprise/server/ss/spi/*.class"/>
                <include name="com/sun/enterprise/server/ss/util/*.class"/>
                <include name="**/jndi.properties"/>
            </fileset>
            <fileset dir="../jacc-provider/${component.classes.dir}">
                <include name="com/sun/enterprise/security/provider/PolicyFile*.class"/>
                <include name="com/sun/enterprise/security/provider/PolicyParser*.class"/>
                <include name="com/sun/enterprise/security/provider/PolicyUtil*.class"/>
            </fileset>
        </jar>

        <jar jarfile="${appserv-ext.jar}" duplicate="fail" update="yes">

	    <!-- Include S1AS APIs exposed to developers -->
	    <fileset dir="${component.classes.dir}"
		     includes="com/sun/appserv/server/**/*.class,
                               com/sun/appserv/security/**/*.class,
                               com/iplanet/ias/security/auth/login/PasswordLoginModue.class,
                               com/iplanet/ias/security/auth/realm/IASRealm.class,
                               com/sun/appserv/web/**/*.class,
                               com/sun/appserv/ejb/**/*.class,
                               com/sun/appserv/connectors/**/*.class,
                               com/sun/appserv/BytecodePreprocessor.class,
                               com/sun/appserv/management/event/**/*.class,
                               com/sun/ejb/ReadOnlyBeanNotifier.class,
                               com/sun/ejb/ReadOnlyBeanLocalNotifier.class,
                               com/sun/ejb/containers/ReadOnlyBeanHelper.class"
			       excludes="com/sun/appserv/server/util/ASURLClassLoader.class,
                               com/sun/appserv/server/util/ClassLoaderChain.class,
                               com/sun/enterprise/util/ASenvPropertyReader.class" />
        </jar>

        <!-- 
            Add to the "boot" jar that supports Java Web Start for app clients.  Then create a temp 
            keystore and use it to sign the jar.
        -->
        <!-- Files needed in the jar by Java Web Start support for app clients -->
        
        <jar jarfile="${appserv-jwsacc.jar}" update="yes">
            <fileset dir="${component.classes.dir}">
                <include name="com/sun/enterprise/appclient/jws/boot/*.*"/>
            </fileset>
            <fileset dir="${src.dir}">
                <include name="**/${jws.appclient.path}/templates/**"/>
                <include name="**/${jws.appclient.path}/boot/*.policy"/>
            </fileset>
        </jar>
        
        <!-- end of Java Web Start sequence -->
        
        <delete dir="${glassfish.jsr88.home}"/>
        <mkdir dir="${glassfish.jsr88.home}"/>
        <jar jarfile="${glassfish.jsr88.home}/sun-as-jsr88-dm.jar">
	    <manifest>
                <attribute name="J2EE-DeploymentFactory-Implementation-Class" 
                           value="com.sun.enterprise.deployapi.SunDeploymentFactory"/>
                <attribute name="Specification-Title"
                           value="Java Platform, Enterprise Edition Specification"/>
                <attribute name="Specification-Vendor"
                           value="Sun Microsystems, Inc."/>
                <attribute name="Specification-Version"
                           value="5.0"/>
                <attribute name="Implementation-Vendor"
                           value="Sun Microsystems, Inc."/>
                <attribute name="Implementation-Version"
                           value="9.0"/>
                <attribute name="Implementation-Title"
                           value="Sun Java System Application Server"/>
            </manifest>
        </jar>
    </target>

    <!-- assemble adminapp.ear -->
    <target name="assemble-adminapp" depends="init"
            description="Assemble adminapp.ear">

        <property name="adminapp.pkg.dir"
                  value="com/sun/enterprise/admin/server/core/servlet"/>
        <property name="adminapp.src.dir"
                  value="${src.dir}/${adminapp.pkg.dir}"/>

        <delete dir="${glassfish.applications.home}/adminapp"/>
        <mkdir dir="${glassfish.applications.home}/adminapp"/>

        <war warfile="${glassfish.applications.home}/adminapp.war"
             webxml="${adminapp.src.dir}/web.xml">
            <webinf dir="${adminapp.src.dir}" includes="sun-web.xml"/>
            <classes dir="${component.classes.dir}">
                <include name="${adminapp.pkg.dir}/*.class"/>
            </classes>
        </war>

        <echo message="Assembling adminapp.ear"/>
        <ear earfile="${glassfish.applications.home}/adminapp.ear"
             appxml="${adminapp.src.dir}/application.xml">
            <fileset dir="${glassfish.applications.home}">
                <include name="adminapp.war"/>
            </fileset>
        </ear>

        <unjar src="${glassfish.applications.home}/adminapp.ear" 
               dest="${glassfish.applications.home}/adminapp"/>
        <unjar src="${glassfish.applications.home}/adminapp/adminapp.war"
               dest="${glassfish.applications.home}/adminapp/adminapp_war"/>

        <delete file="${glassfish.applications.home}/adminapp.ear"/>
        <delete file="${glassfish.applications.home}/adminapp.war"/>
        <delete file="${glassfish.applications.home}/adminapp/adminapp.war"/>
    </target>

    <!-- assemble j2ee-svc.jar -->
    <target name="assemble-j2ee-svc" depends="init"
            description="Create J2EE System Value Classes jar">

        <delete file="${glassfish.home}/lib/j2ee-svc.jar"/>
        <echo message="Creating j2ee-svc.jar"/>

         <jar jarfile="${glassfish.home}/lib/j2ee-svc.jar" manifest="j2ee-svc.mf">
             <fileset dir="${component.classes.dir}">
                 <include name="com/sun/ejb/portable/**"/>
             </fileset>
         </jar>
    </target>

    <!-- assemble appserv-tags.jar -->
    <target name="assemble-taglibs" depends="init"
            description="Create JSP tag libraries">

        <delete file="${glassfish.home}/lib/appserv-tags.jar"/>
        <echo message="Creating appserv-tags.jar"/>

         <jar jarfile="${glassfish.home}/lib/appserv-tags.jar" manifest="appserv-tags.mf">
             <fileset dir="${component.classes.dir}">
                 <include name="com/sun/appserv/web/taglibs/**"/>
             </fileset>
             <metainf dir="${src.dir}/com/sun/appserv/web/taglibs">
                 <include name="appserv-tags.tld"/>
             </metainf>
         </jar>
    </target>

    <target name="publish-init">
        <tstamp>
          <format property="start.time" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>
        <condition property="windows">
            <os family="windows" />
        </condition>
        <condition property="unix">
            <os family="unix" />
        </condition>
    </target> 


    <!-- publish templates files -->
    <target name="publish-templates" 
            depends="publish-package-appclient, publish-templates-windows, publish-templates-unix"/>

    <target name="publish-package-appclient">
        <copy todir="${glassfish.lib.home}">
              <fileset dir="misc/templates" 
                      includes="package-appclient.xml"/>
        </copy>
    </target>

    <target name="publish-templates-windows" 
            depends="publish-init" if="windows">
        <copy todir="${glassfish.templates.home}">
              <fileset dir="misc/templates" 
                       includes="**/*.bat.template"/>
        </copy>
    </target>

    <target name="publish-templates-unix" 
            depends="publish-init" if="unix">
        <copy todir="${glassfish.templates.home}">
              <fileset dir="misc/templates" 
                       includes="**/*.template"
                       excludes="**/*.bat.template"/>
        </copy>
    </target>

    <target name="publish" depends="publish-templates">

        <!-- Publish/Copy launcher.xml, launcher.properties to lib directory-->
        <copy todir="${glassfish.lib.home}">
            <fileset dir="misc/launcher"
                     includes="launcher.xml, launcher.properties"/>
        </copy>

        <!-- all webservices templates files -->
        <copy todir="${glassfish.templates.home}">
            <fileset dir="${src.dir}/com/sun/enterprise/webservice/templates"
                     includes="**.template"/>
        </copy>

        <!-- copy timer system application to publish dir -->
        <jar jarfile="misc/ejbtimer/ejb.jar"
             basedir="misc/ejbtimer"
             includes="__ejb_container_timer_app_ejb.dbschema">
            <metainf dir="misc/ejbtimer"
                   includes="ejb-jar.xml,sun-ejb-jar.xml,sun-cmp-mappings.xml"/>
        </jar>
        <ear earfile="${glassfish.applications.home}/__ejb_container_timer_app.ear"
             appxml="misc/ejbtimer/application.xml"
             basedir="misc/ejbtimer"
             includes="ejb.jar"
             manifest="misc/ejbtimer/EjbTimerMANIFEST.MF">            
	     <metainf dir="misc/ejbtimer"
                   includes="application.xml, sun-application.xml"/>
        </ear>
        <copy todir="${glassfish.databases.home}">
              <fileset dir="misc/ejbtimer" 
                  includes="ejbtimer*"/>
        </copy>
        
        <!-- system web app for Java Web Start access to app clients -->

        <delete dir="misc/${jws.system.app.name}"/>
        <mkdir dir="misc/${jws.system.app.name}"/>
        
        <war destfile="misc/${jws.system.app.name}/${jws.system.web.app.name}.war"
             webxml="${src.dir}/${jws.appclient.path}/systemWebApp-web.xml"
             manifest="${src.dir}/${jws.appclient.path}/systemWebApp-manifest.mf">
             <metainf dir="${src.dir}/${jws.appclient.path}" includes="sun-web.xml"/>
        </war>

        <ear earfile="${glassfish.applications.home}/${jws.system.app.name}.ear"
            appxml="${src.dir}/${jws.appclient.path}/systemEarApp-application.xml"
            basedir="misc/${jws.system.app.name}" 
            includes="${jws.system.web.app.name}.war"
            manifest="${src.dir}/${jws.appclient.path}/systemEarApp-manifest.mf">
            
<!--
            <metainf dir="${src.dir}/${jws.appclient.path}" includes="sun-application.xml"/>
-->            
        </ear>
        
            
        
    </target>
</project>
