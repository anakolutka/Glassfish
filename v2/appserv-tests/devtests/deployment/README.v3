UNIT TESTS ON DEPLOYMENT FOR CURRENT V3 RELEASE
================================================
TESTS INFO :
------------

1. war/* are tests that deploy WAR module only. The name of directories indicate
   what kind of WAR each tests build for deployment. 

2. ear/* are tests that deploy EAR module. We will turn on ear with war tests 
   once ClassCastException for CommandParameters is fixed.

3. In all totally 25 unit test cases will be executed.


FOR RUNNING THE DEPLOYMENT TESTS ON v3:
----------------------------------------

0. Please make sure if you have the following env. variable set at all, they
   need to be in the following values:
   S1AS_HOME=<glassfish v3 installation>
   APS_HOME=<appserv-tests>

   In addition:
   SECURE=false
   DEPL_TARGET=PE
   Nothing needs to be done if you don't have those env. var set.

1. Start the domain.
   asadmin start-domain -v or 

2. Simply type "ant all" from appserv-tests/devtests/deployment.  At the end
   of the run, in the above mentioned directory two files are created :
   result.html has the result of each test; client.log has all output from test run

3. To run individual tests, go to the test directory and type "ant all". For
   example, to run war/servletonly test "cd war/servletonly" and do "ant all".
   The results.html and client.log are created in war/servletonly directory

READING RESULTS :
-----------------

1. result.html will state whether a particular test passed or failed. This
   file just has a summary of the test results.
2. client.log has all detailed outputs of all the deployment unit
   tests. This file HAS TO BE CHECKED to ensure that no exception
   (specifically those from MBeans etc were thrown). Search for 'exception'
   in this file to ensure no uncaught exceptions were thrown.

EXPECTED RESULTS :
------------------------------------------
[PASSED] servletonly : war/servletonly Test asadmin deploy (server)
[PASSED] servletonly : war/servletonly Test asadmin redeploy (server)
[PASSED] servletonly : war/servletonly Test v3 asadmin redeploy (server)
[PASSED] servletonly : war/servletonly Test asadmin disable (server)
[PASSED] servletonly : war/servletonly Test asadmin enable (server)
[PASSED] jsponly : war/jsponly Test asadmin deploy (server)
[PASSED] jsponly : war/jsponly Test asadmin redeploy (server)
[PASSED] htmlonly : war/htmlonly Test asadmin deploy (server)
[PASSED] htmlonly : war/htmlonly Test asadmin redeploy (server)
[PASSED] htmlonly : war/htmlonly Test asadmin disable (server)
[PASSED] htmlonly : war/htmlonly Test asadmin enable (server)
[PASSED] webinflib : war/webinflib Test asadmin deploy (server)
[PASSED] webinflib : war/webinflib Test asadmin redeploy (server)
[PASSED] deploydir : war/deploydir Test asadmin deploydir
[PASSED] deploydir : war/deploydir Test asadmin redeploydir
[PASSED] deploydir : war/deploydir Test asadmin v3 redeploydir
[PASSED] deploydir : war/deploydir Test asadmin v3 redeploy
[PASSED] deploydir : war/deploydir Test asadmin deploydir with a different context root
[PASSED] deploydir : war/deploydir Test asadmin redeploydir preserves context root
[PASSED] deploydir : war/deploydir Test v3 asadmin redeploydir preserves context root
[PASSED] deploydir : war/deploydir Test asadmin undeploydir
[PASSED] nojarexpansion : war/nojarexpansion Test asadmin deploy (server)
[PASSED] nojarexpansion : war/nojarexpansion Test verify jar was not expanded after deploy
[PASSED] nojarexpansion : war/nojarexpansion Test asadmin redeploy (server)
[PASSED] nojarexpansion : war/nojarexpansion Test verify jar was not expanded after redeploy
