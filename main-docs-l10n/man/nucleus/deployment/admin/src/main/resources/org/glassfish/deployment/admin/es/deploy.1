deploy(1)               Subcomandos de la Utilidad asa               deploy(1)

NOMBRE DE REFERENCIA
       deploy - Despliega el componente especificado.

SINOPSIS
           deploy [--help]
           [--force={false|true}]
           [--virtualservers virtual_servers]
           [--contextroot context_root]
           [--precompilejsp={false|true}]
           [--verify={false|true}]
           [--name component_name]
           [--upload={true|false}]
           [--retrieve local_dirpath]
           [--dbvendorname dbvendorname]
           [--createtables={true|false}|--dropandcreatetables={true|false}]
           [--uniquetablenames={true|false}]
           [--deploymentplan deployment_plan]
           [--altdd alternate_deploymentdescriptor]
           [--runtimealtdd runtime_alternate_deploymentdescriptor]
           [--deploymentorder deployment_order]
           [--enabled={true|false}]
           [--generatermistubs={false|true}]
           [--availabilityenabled={false|true}]
           [--asyncreplication={true|false}]
           [--lbenabled={true|false}]
           [--keepstate={false|true}]
           [--libraries jar_file[,jar_file]*]
           [--target target]
           [--type pkg-type]
           [--properties(name=value)[:name=value]*]
           [file_archive|filepath]

DESCRIPCIÓN
       El subcomando deploy despliega aplicaciones en el servidor. Las
       aplicaciones pueden ser aplicaciones de trabajo, aplicaciones web,
       módulos Enterprise JavaBeans (EJB), módulos de conector y módulos
       cliente de aplicación Si el componente ya se ha desplegado o ya existe,
       se forzará un nuevo despliegue si la opción --force se define en true
       (el valor por defecto es false).

       Las opciones --createtables y --dropandcreatetables son indicadores
       booleanos y, por tanto, pueden tomar los valores true o false. Estas
       opciones sólo se utilizan durante el despliegue de Beans CMP que no se
       han asignado a una base de datos (es decir, cuando no se incluye un
       descriptor sun-cmp-mappings.xml en el directorio META-INF del módulo).
       De lo contrario, se ignoran.

       Las opciones --createtables y --dropandcreatetables se excluyen
       mutuamente; sólo se debe utilizar una de ellas. Si las acciones de
       colocar y/o crear tablas fallan, el despliegue no falla; en el archivo
       log se agrega un mensaje de advertencia.

       Este subcomando sólo está soportado en modo remoto.

OPCIONES
       --help, -?
           Muestra el texto de ayuda para el subcomando.

       --force
           Si se define en true, se vuelve a desplegar el componente aunque ya
           se haya desplegado o ya exista. El valor por defecto es false.

       --virtualservers
           Uno o más ID de servidor virtual. Si hay varios ID se deberán
           separar mediante comas.

       --contextroot
           Sólo es válida si el archivo es un módulo web. Para otros tipos de
           archivo, se ignora la opción; el valor por defecto es el nombre de
           archivo sin la extensión.

       --precompilejsp
           Por defecto, esta opción no permite que los JSP sean precompilados
           durante el despliegue. En su lugar, los JSP se compilan en tiempo
           de ejecución. El valor por defecto es false.

       --verify
           Si se define en true y los paquetes de verificador necesarios se
           instalan desde la herramienta de actualización, se comprueba la
           sintaxis y semántica del descriptor de despliegue. El valor por
           defecto es false.

       --name
           Nombre del componente desplegable.

           El nombre puede incluir un identificador de versión opcional, que
           va a continuación del nombre y está separado de él por dos puntos
           (:). El identificador de versión debe comenzar por una letra o
           número. Puede contener caracteres alfanuméricos más los caracteres
           de subrayado (_), guión (-) y punto (.). Para obtener más
           información sobre las versiones de módulo y de aplicación, consulte
           el apartado sobre las versiones de módulo y de aplicación en Oracle
           GlassFish Server Application Deployment Guide.

       --upload
           Especifica si el subcomando carga el archivo en el DAS. En la
           mayoría de las situaciones, esta opción se puede omitir.

           Los valores válidos son los siguientes:

           false
               El subcomando no carga el archivo y trata de acceder a él a
               través del nombre del archivo especificado. Si el DAS no puede
               acceder al archivo, el subcomando falla.

               Por ejemplo, el DAS puede ejecutarse como un usuario distinto
               del usuario de administración y no tener acceso de lectura al
               archivo. En esta situación, el subcomando falla si la opción
               --upload es false.

           true
               El subcomando carga el archivo en el DAS a través de la
               conexión de red.

           El valor por defecto depende de si el DAS está en el host en el que
           se ejecuta el subcomando o está en un host remoto.

           ·   Si el DAS está en el host en el que se ejecuta el subcomando,
               el valor por defecto es false.

           ·   Si el DAS está en un host remoto, el valor por defecto es true.

           Si se ha especificado un directorio filepath, esta opción se
           ignora.

       --retrieve
           Recupera el archivo JAR del stub del cliente de la máquina del
           servidor al directorio local.

       --dbvendorname
           Especifica el nombre del proveedor de la base de datos para la que
           se crean las tablas. Los valores soportados incluyen db2, mssql,
            mysql, oracle, derby, javadb, postgresql y sybase. Estos valores
           son sensibles a mayúsculas/minúsculas. Si no se especifica, se
           utiliza el valor del atributo database-vendor-name en
           glassfish-ejb-jar.xml. Si no se especifica ningún valor, se lleva a
           cabo una conexión con el recurso especificado por el subelemento
           jndi-name del elemento cmp-resource del archivo
           glassfish-ejb-jar.xml, y se lee el nombre del proveedor de la base
           de datos. Si no se puede establecer la conexión, o si el valor no
           se reconoce, se presupone la conformidad con SQL-92.

       --createtables
           Si se especifica como true, crea tablas en el despliegue de una
           aplicación con Beans CMP no asignados. Si se especifica como false,
           no se crean las tablas. Si no se especifica, el valor de la entrada
           create-tables-at-deploy del elemento cmp-resource del archivo
           glassfish-ejb-jar.xml determina si se crean o no las tablas. No se
           crean restricciones únicas para las tablas.

       --dropandcreatetables
           Si se especifica en true cuando se vuelve a desplegar el
           componente, las tablas creadas en el despliegue anterior se borran
           antes de crear las nuevas. Se refiere a las aplicaciones
           desplegadas con Beans CMP no asignados. Las tablas preexistentes no
           se borran en el despliegue inicial de una aplicación o en un
           despliegue realizado después de anular un despliegue de forma
           explícita. Si se especifica como false, las tablas no se desechan
           ni se crean. Si no se especifica, las tablas se desechan si la
           entrada drop-tables-at-undeploy del elemento cmp-resource del
           archivo glassfish-ejb-jar.xml se establece en true, y las nuevas
           tablas se crean si la entrada create-tables-at-deploy del elemento
           cmp-resource del archivo glassfish-ejb-jar.xml se establece en
           true.

       --uniquetablenames
           Garantiza nombres de tabla exclusivos para todos los beans; el
           resultado es la adición de un código hash a los nombres de tabla.
           Esto es útil en el caso de aplicaciones con nombre de bean sensible
           a mayúsculas/minúsculas. Es relevante para las aplicaciones con
           Beans CMP no asignados.

       --deploymentplan
           Despliega el plan de despliegue, que es un archivo JAR que contiene
           descriptores de GlassFish Server. Especifique esta opción si desea
           desplegar un archivo EAR puro. Un archivo EAR puro es un archivo
           EAR sin descriptores de GlassFish Server.

       --altdd
           Despliega la aplicación mediante el descriptor de despliegiue
           estándar Java EE que reside fuera del archivo de la aplicación.
           Especifique una ruta de acceso absoluta o una ruta de acceso
           relativa al archivo descriptor de despliegue alternativo. El
           descriptor de despliegue alternativo sustituye el descriptor de
           despliegue de nivel superior empaquetado en el archivo. Por
           ejemplo, para un EAR, el uso de la opción --altdd sustituye a
           application.xml. Para un módulo autónomo, el uso de la opción
           --altdd sustituye el descriptor de módulo de nivel superior como
           web.xml.

       --runtimealtdd
           Despliega la aplicación mediante un descriptor de despliegue de
           tiempo de ejecución de GlassFish Server que reside fuera del
           archivo de la aplicación. Especifique una ruta de acceso absoluta o
           una ruta de acceso relativa al archivo descriptor de despliegue
           alternativo. El descriptor de despliegue alternativo sustituye el
           descriptor de despliegue de nivel superior empaquetado en el
           archivo. Por ejemplo, para un EAR, el uso de la opción
           --runtimealtdd sustituye a glassfish-application.xml. Para un
           módulo autónomo, el uso de la opción --runtimealtdd sustituye el
           descriptor de módulo de nivel superior como glassfish-web.xml. Se
           aplica sólo a los descriptores de despliegue de GlassFish Server
           (glassfish-*.xml); el nombre del archivo descriptor de despliegue
           alternativo debe empezar por glassfish-. No se aplica a los
           descriptores de despliegue sun-*.xml, que están anticuados.

       --deploymentorder
           Especifica el orden de despliegue la aplicación. Esta función
           resulta útil si la aplicación tiene dependencias y se deben cargar
           en un orden determinado al iniciar el servidor. El orden de
           despliegue se especifica como un entero. El valor por defecto es
           100. Las aplicaciones con un número inferior se cargan antes de que
           las aplicaciones con un número más alto. Por ejemplo, una
           aplicación con un orden de despliegue de 102 se carga antes que una
           aplicación con un orden de despliegue de 110. Si no se especifica
           un orden de despliegue, se asigna el valor de 100 por defecto. Si
           dos aplicaciones tienen el mismo orden de despliegue, la primera
           aplicación que se va a desplegar es la primera aplicación que se va
           a cargar al iniciar el servidor.

           El orden, por lo general, se especifica cuando se despliegua la
           aplicación por primera vez, pero también se pueden especificar o
           cambiar después del despliegue inicial utilizando el subcomando
           set. Puede ver el orden de despliegue orden de una aplicación
           mediante el subcomando get.

       --enabled
           Permite a los usuarios acceder a la aplicación. Si se define en
           false, los usuarios no podrán acceder a la aplicación. Esta opción
           activa la aplicación en el cluster o en la instancia de destino
           especificada. Si se despliega en el destino domain, la opción se
           ignora, ya que el despliegue en el dominio no implica el despliegue
           en una instancia o cluster específicos. El valor por defecto es
           true.

       --generatermistubs
           Si se define en true, se generan stubs RMI-IIOP y se colocan en
           client.jar. Si se define en false, los stubs no se generan. El
           valor por defecto es false.

       --availabilityenabled
           Esta opción controla si se activa la alta disponibilidad para
           sesiones web y para puntos de comprobación de beans de sesión con
           estado (SFSB), así como para una posible desactivación. Si se
           define en false (valor por defecto), se desactiva el almacenamiento
           de sesiones web y puntos de control de SFSB para la aplicación,
           aplicación web o módulo EJB especificado. Si se define en true, la
           aplicación o módulo especificados se activa para alta
           disponibilidad. Defina esta opción en true sólo si se ha
           configurado y activado la alta disponibilidad en niveles
           superiores, como, por ejemplo, los niveles de servidor y
           contenedor.

       --asyncreplication
           Esta opción controla si los estados de sesión web y SFSB para los
           que se ha activado la alta disponibilidad se copian primero en
           buffer y, a continuación, se replican mediante un thread asíncrono
           independiente. Si se define en true (valor por defecto), el
           rendimiento mejora pero la disponibilidad se reduce. Si falla la
           instancia en la que los estados se almacenan en buffer pero aún no
           se replican, los estados se perderán. Si se define en false, el
           rendimiento se reducirá, pero la disponibilidad queda garantizada.
           Los estados no se almacenan en buffer, sino que se transmiten
           inmediatamente a otras instancias del cluster.

       --lbenabled
           Esta opción controla si la aplicación desplegada está disponible
           para el equilibrio de carga. El valor por defecto es true.

       --keepstate
           Esta opción controla si las sesiones web, instancias SFSB y
           temporizadores EJB creados de forma persistente se conservan entre
           redespliegues.

           El valor por defecto es false. Esta opción sólo está soportada en
           la instancia de servidor por defecto, denominada server. No se
           soporta para ningún otro destino y se ignorará.

           Algunos cambios efectuados en una aplicación entre nuevos
           despliegues impiden que esta opción funcione correctamente. Por
           ejemplo, no cambie el juego de variables de instancia en la clase
           de bean SFSB.

           Para las aplicaciones web, esta opción solo es aplicable si, en el
           archivo glassfish-web-app.xml, el atributo persistence-type del
           elemento session-manager es file.

           Para instancias de un bean de sesión con estado, el tipo de
           persistencia sin alta disponibilidad se establece en el servidor
           (el atributo sfsb-persistence-type) y se debe establecer en file,
           que es el valor por defecto y recomendado.

           Si una sesión web, instancia SFSB o temporizador EJB activo no se
           conserva o restablece, ninguno de ellos estará disponible cuando se
           haya completado el redespliegue. Sin embargo, el nuevo despliegue
           continuará y se registrará una advertencia.

           Para conservar datos de estado activo, GlassFish Server serializa
           los datos y los guarda en la memoria. Para restaurar los datos, el
           cargador de clases de la aplicación que se acaba de volver a
           desplegar deserializa los datos guardados anteriormente.

       --libraries
           Lista separada por comas de los archivos JAR de la biblioteca.
           Especifique los archivos JAR de biblioteca a través de sus rutas de
           acceso absolutas o relativas. Especifique las rutas de acceso
           relativas con respecto a domain-dir/lib/applibs. Las bibliotecas
           están disponibles para la aplicación en el orden en que están
           especificadas.

       --target
           Especifica el destino en el que se va a desplegar. Los valores
           válidos son:

           server
               Despliega el componente en la instancia de servidor por defecto
               server y es el valor por defecto.

           domain
               Despliega el componente en el dominio. Si domain es el destino
               para un despliegue inicial, la aplicación se desplegará en el
               dominio, pero sin referencias a la aplicación desde instancias
               de servidor o clusters. Si domain es el destino para el nuevo
               despliegue (la opción --force se define en true) y la
               reconfiguración dinámica está activada para los clusters o
               instancias de servidor que hacen referencia a la aplicación,
               estos clusters o instancias de servidor obtienen
               automáticamente la nueva versión de la aplicación. Si el nuevo
               despliegue y la configuración dinámica están desactivadas, los
               clusters o instancias de servidor de referencia no obtienen la
               nueva versión de la aplicación hasta que los clusters o
               instancias de servidor independientes se reinician.

           cluster_name
               Despliega el componente en todas las instancias de servidor del
               cluster.

           instance_name
               Despliega el componente en una instancia de servidor
               independiente determinada.

       --type
           Tipo de archivo de empaquetado del componente que se va a
           desplegar. Los valores posibles son los siguientes:

           car
               El componente está empaquetado como un archivo CAR.

           ear
               El componente está empaquetado como un archivo EAR.

           ejb
               El componente es un EJB empaquetado como un archivo JAR.

           osgi
               El componente está empaquetado como un paquete de OSGi.

           rar
               El componente está empaquetado como un archivo RAR.

           war
               El componente está empaquetado como un archivo WAR.

       --properties o --property
           Pares de palabra clave-valor opcional que especifican propiedades
           adicionales parta el despliegue. Las propiedades disponibles están
           determinadas por la implantación del componente que se va a
           desplegar o a volver a desplegar. Las opciones --properties y
           --property son equivalentes. Puede utilizar cualquiera de estas
           opciones, independientemente del número de propiedades que se
           especifiquen.

           Puede especificar las siguientes propiedades de un despliegue:

           jar-signing-alias
               Especifica el alias para el certificado de seguridad con el que
               está firmado el archivo contenedor JAR del cliente de
               aplicaciones. Java Web Start no ejecutará código que requiera
               permisos de alto nivel a menos que resida en un archivo JAR
               firmado con un certificado en el que confíe el sistema del
               usuario. Para mayor comodidad, GlassFish Server firma el
               archivo JAR automáticamente mediante el certificado con este
               alias del almacén de claves del dominio. Java Web Start
               pregunta a continuación al usuario si desea confiar en el
               código y muestra la información de certificado de GlassFish
               Server. Para firmar este archivo JAR con un certificado
               diferente, agregue el certificado al almacén de claves del
               dominio y, a continuación, utilice esta propiedad. Por ejemplo,
               puede utilizar un certificado de una autoridad de confianza, lo
               que evita la solicitud de Java Web Start, o de su propia
               empresa, en el que los usuarios saben que pueden confiar. El
               valor por defecto es s1as, el alias del certificado autofirmado
               creado para cada dominio.

           java-web-start-enabled
               Especifica si se permite Java Web Start para un módulo de
               cliente de aplicaciones. El valor por defecto es true.

           compatibility
               Especifica la versión de GlassFish Server con la que se debe
               mantener la compatibilidad hacia atrás en lo que se refiere a
               requisitos de visibilidad de JAR para las aplicaciones. El
               único valor permitido es v2, que hace referencia a la versión 2
               de Sun GlassFish Enterprise Server o la versión 9.1 o 9.1.1. de
               Sun Java System Servidor de Aplicaciones. La especificación de
               la plataforma Java EE 6 impone requisitos más estrictos que
               Java EE 5 sobre qué archivos JAR pueden ser visibles para
               varios módulos dentro de un archivo EAR. En concreto, los
               clientes de aplicación no deben tener acceso a los archivos JAR
               EJB o a otros archivos JAR del archivo EAR a menos que las
               referencias utilicen los mecanismos Java SE estándar
               (extensiones, por ejemplo) o el mecanismo biblioteca-directorio
               de Java EE. Al definie esta propiedad en v2 se eliminan estas
               restricciones de Java EE 6.

           keepSessions={false|true}
               Sustituida por la opción --keepstate.

               Si la opción --force se define en true, esta propiedad se puede
               utilizar para especificar si las sesiones activas de la
               aplicación que se va a volver a desplegar se mantienen y se
               restauran una vez completado el nuevo despliegue. Se aplica a
               las sesiones HTTP en un contenedor web. El valor por defecto es
               false.

               false
                   Las sesiones activas de la aplicación no se conservan y
                   restauran (el valor por defecto).

               true
                   Las sesiones activas de la aplicación se conservan y
                   restauran.

                   Si en alguna sesión activa se produce algún fallo en la
                   conservación o restauración de la aplicación, no habrá
                   disponible ninguna sesión cuando se haya completado el
                   nuevo despliegue. Sin embargo, el nuevo despliegue
                   continuará y se registrará una advertencia.

                   Para mantener las sesiones activas, GlassFish Server
                   serializa las sesiones y las guarda en memoria. Para
                   restaurar las sesiones, el cargador de clases de la
                   aplicación que se acaba de volver a desplegar deserializa
                   las sesiones que se hubieran guardado previamente.

           preserveAppScopedResources
               Si se define en true, conserva cualquier recuso de ámbito
               restringido a la aplicación y los restaura durante el
               redespliegue. El valor por defecto es false.

           Otras propiedades disponibles están determinados por la
           implantación del componente que se va a volver a desplegar.

           Para los componentes empaquetados como grupos OSGi (--type=osgi),
           el subcomando deploy acepta argumentos de propiedades para
           encapsular un archivo WAR como un paquete de aplicaciones web (WAB)
           en el momento del despliegue. El subcomando busca la clave
           denominada UriScheme y, si existe, utiliza la clave como un
           manejador de flujos de URL para decorar el flujo de entrada. Otras
           propiedades se utilizan en el proceso de decoración. Por ejemplo,
           el contenedor web OSGi de GlassFish Server registra un manejador de
           flujos de URL denominado webbundle, que se utiliza para encapsular
           un archivo WAR sin formato como WAB. Para obtener más información
           sobre el uso, consulte el ejemplo de esta página de ayuda.

OPERANDOS
       file_archive|filepath
           Ruta de acceso al archivo que contiene la aplicación que se va a
           desplegar. La ruta de acceso puede ser relativa o absoluta.

           El archivo puede estar en cualquiera de los siguientes formatos:

           ·   Un archivo de almacenamiento, por ejemplo,
               /export/JEE_apps/hello.war.

               Si la opción --upload se define en true, ésta es la ruta de
               acceso al archivo desplegable en la máquina cliente local. Si
               la opción --upload se define en false, ésta es la ruta de
               acceso al archivo en la máquina servidor.

           ·   Un directorio que contiene el formato separado del archivo
               desplegado. Ésta es la ruta de acceso al directorio en la
               máquina servidor.

               Si especifica un directorio, la opción --upload se ignora.

EJEMPLOS
       Ejemplo 1, Despliegue de una Aplicación Empresarial
           En este ejemplo se despliega la aplicación empresarial empaquetada
           en el archivo Cart.ear en la instancia de servidor por defecto
           server. Puede utilizar la opción --target para desplegar en una
           instancia de servidor o un cluster distinto.

               asadmin> deploy Cart.ear
               Application deployed successfully with name Cart.
               Command deploy executed successfully

       Ejemplo 2, Despliegue de una Aplicación Web con la Raíz de Contexto por
       Defecto
           En este ejemplo se despliega la aplicación web del archivo
           hello.war en la instancia de servidor por defecto server. Puede
           utilizar la opción --target para desplegar en una instancia de
           servidor o un cluster distinto.

               asadmin> deploy hello.war
               Application deployed successfully with name hello.
               Command deploy executed successfully

       Ejemplo 3, Despliegue Forzado de una Aplicación Web con una Raíz de
       Contexto Determinada
           En este ejemplo se fuerza el despliegue de la aplicación web en el
           archivo
            hello.war. La raíz de contexto de la aplicación web desplegada es
           greetings. Si la aplicación ya se ha desplegado, se vuelve a
           desplegar.

               asadmin> deploy --force=true --contextroot greetings hello.war
               Application deployed successfully with name hello.
               Command deploy executed successfully

       Ejemplo 4, Despliegue de un Bean de Empresa
           En este ejemplo se despliega un componente basado en la
           especificación EJB (bean de empresa) con CMP y se crean las tablas
           de base de datos que utiliza el bean.

           En este ejemplo se utiliza la opción --target. El destino en este
           ejemplo es un cluster existente, cluster1.

               asadmin> deploy --createtables=true --target cluster1 EmployeeEJB.jar
               Application deployed successfully with name EmployeeEJB.
               Command deploy executed successfully

       Ejemplo 5, Despliegue de un Módulo de Conector
           En este ejemplo se despliega un módulo de conector que se empaqueta
           en un archivo RAR.

           En este ejemplo se utiliza la opción --target. El destino en este
           ejemplo es una instancia de servidor independiente existente que no
           pertenece a un cluster.

               asadmin> deploy --target myinstance jdbcra.rar
               Application deployed successfully with name jdbcra.
               Command deploy executed successfully

       Ejemplo 6, Especificación del orden de despliegue para una aplicación
           En el siguiente ejemplo se especifica el orden de despliegue para
           dos aplicaciones. La aplicación cart se carga antes que la
           aplicación horse al iniciar el servidor.

           Se omiten algunas líneas de salida del ejemplo para legibilidad.

               asadmin> deploy --deploymentorder 102 --name cart cart.war
               ...
               asadmin> deploy --deploymentorder 110 --name horse horse.war
               ...

       Ejemplo 7, Despliegue de una aplicación mediante un archivo descriptor
       de despliegue Java 7 EE alternativo
           En este ejemplo se despliega una aplicación mediante el archivo
           descriptor de despliegue estándar Java EE que reside fuera del
           archivo de la aplicación.

               asadmin> deploy --altdd path_to_alternate_descriptor cart.ear
               Application deployed successfully with name cart.
               Command deploy executed successfully

       Ejemplo 8, Despliegue de una aplicación mediante un archivo descriptor
       de despliegue de GlassFish Server alternativo
           En este ejemplo se despliega una aplicación mediante un archivo
           descriptor de despliegue de tiempo de ejecución de GlassFish Server
           que reside fuera del archivo de la aplicación.

               asadmin> deploy --runtimealtdd path_to_alternate_runtime_descriptor horse.ear
               Application deployed successfully with name horse.
               Command deploy executed successfully

       Ejemplo 9, Encapsulación de un archivo WAR como WAB
           En este ejemplo se encapsula un archivo WAR sin formato como WAB
           cuando se despliega un grupo de OSGi y si es específico de los
           componentes empaquetados como grupos de OSGi.

           El carácter de barra invertida (\) se utiliza para realizar el
           escape de caracteres en el comando. Para obtener más información
           sobre los caracteres de escape en opciones para la utilidad
           asadmin, consulte la página de ayuda asadmin(1M).

               asadmin deploy --type osgi \
               --properties "UriScheme=webbundle:Bundle-SymbolicName=bar:\
               Import-Package=javax.servlet;javax.servlet.http;
               %20version\\=3.0;resolution\\:
               =mandatory:Web-ContextPath=/foo" \
               /tmp/test_sample1.war
               Application deployed successfully with name sample1.
               Command deploy executed successfully

ESTADO DE SALIDA
       0
           Subcomando ejecutado correctamente

       1
           Error al ejecutar el subcomando

CONSULTE TAMBIÉN
       redeploy(1), list-components(1), undeploy(1), get(1), set(1)

       asadmin(1M)

       Oracle GlassFish Server Application Deployment Guide

Java EE 7                    12 de febrero de 2013                   deploy(1)
