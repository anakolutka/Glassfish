UNIT TESTS ON DEPLOYMENT FOR TP2 RELEASE
========================================

TESTS INFO :
------------

1. war/* are tests that deploy WAR module only. The name of directories indicate
   what kind of WAR each tests build for deployment

2. dol/* 

3. annotation/* 

FOR RUNNING THE DEPLOYMENT TESTS ON TP2 :
----------------------------------------

0. Please make sure if you have the following env. variable set at all, they
   need to be in the following values:
   S1AS_HOME=<glassfish TP2 installation>
   APS_HOME=<appserv-tests>

   In addition:
   SECURE=false
   DEPL_TARGET=PE
   Nothing needs to be done if you don't have those env. var set.
   The following setup is need to run annotation tests.

1. Start the domain.
   asadmin start-domain -v or 

2. Start the derby database.
   asadmin start-database

2. Simply type "ant -Drun.jsr88=false all" from appserv-tests/devtests/deployment/war.  
   At the end of the run, in the above mentioned directory two files are created : 
   result.html has the result of each test; client.log has all output from test run


READING RESULTS :
-----------------

1. result.html will state whether a particular test passed or failed. This
   file just has a summary of the test results.
2. client.log has all detailed outputs of all the deployment unit
   tests. This file HAS TO BE CHECKED to ensure that no exception
   (specifically those from MBeans etc were thrown). Search for 'exception'
   in this file to ensure no uncaught exceptions were thrown.

Notes about redeploy tests
--------------------------

1. When adding new test, should also add redeploy test for that.
2. Assume redeploy test always run after deploy test, so we don't need to 
   call undeploy after the deploy test, and only need to call deploy once
   for redeploy test.

Overcoming 'ant' compile problem :
----------------------------------
In some cases the ant test clients run out of memory during the test run.
To avoid this problem, add -Xmx999m to the command that starts the ant java vm

Here is how to do that :

cat `which ant` :

(... go towards bottom of ant script and add the option -Xmx999m as shown below)

 "$JAVACMD" -Xmx999m -classpath "$LOCALCLASSPATH" -Dant.home="${ANT_HOME}" $ANT_OPTS org.apache.tools.ant.Main $ANT_ARGS "$@"

For help contact s1as-deployment-dev@sun.com


EXPECTED RESULT FOR deployment/war TESTS :
------------------------------------------
<?xml version="1.0" encoding="UTF-8"?> 
[PASSED] servletonly : war/servletonly Test asadmin deploy (server) 
[PASSED] servletonly : war/servletonly Test asadmin redeploy (server) 
[PASSED] servletonly : war/servletonly Test asadmin disable (server) 
[PASSED] servletonly : war/servletonly Test asadmin enable (server) 
[UNKNOWN] servletonly : war/servletonly Test jsr88 deploy (server) 
[PASSED] servletonly : war/servletonly Test jsr88 stopped state (server) 
[UNKNOWN] servletonly : war/servletonly Test jsr88 started state (server) 
[PASSED] servletonly : war/servletonly Test jsr88 redeploy stop (server) 
[UNKNOWN] servletonly : war/servletonly Test jsr88 redeploy start (server) 
[PASSED] jsponly : war/jsponly Test asadmin deploy (server) 
[PASSED] jsponly : war/jsponly Test asadmin redeploy (server) 
[UNKNOWN] jsponly : war/jsponly Test jsr88 deploy (server) 
[PASSED] jsponly : war/jsponly Test jsr88 stopped state (server) 
[UNKNOWN] jsponly : war/jsponly Test jsr88 started state (server) 
[PASSED] jsponly : war/jsponly Test jsr88 redeploy stop (server) 
[UNKNOWN] jsponly : war/jsponly Test jsr88 redeploy start (server) 
[PASSED] htmlonly : war/htmlonly Test asadmin deploy (server) 
[PASSED] htmlonly : war/htmlonly Test asadmin redeploy (server) 
[PASSED] htmlonly : war/htmlonly Test asadmin disable (server) 
[PASSED] htmlonly : war/htmlonly Test asadmin enable (server) 
[UNKNOWN] htmlonly : war/htmlonly Test jsr88 deploy (server) 
[PASSED] htmlonly : war/htmlonly Test jsr88 stopped state (server) 
[UNKNOWN] htmlonly : war/htmlonly Test jsr88 started state (server) 
[UNKNOWN] htmlonly : war/htmlonly Test jsr88 redeploy (server) 
[PASSED] webinflib : war/webinflib Test asadmin deploy (server) 
[PASSED] webinflib : war/webinflib Test asadmin redeploy (server) 
[UNKNOWN] webinflib : war/webinflib Test jsr88 deploy (server) 
[PASSED] webinflib : war/webinflib Test jsr88 stopped state (server) 
[UNKNOWN] webinflib : war/webinflib Test jsr88 started state (server) 
[UNKNOWN] webinflib : war/webinflib Test jsr88 redeploy (server) 
[PASSED] deploydir : war/deploydir Test asadmin deploydir 
[PASSED] deploydir : war/deploydir Test asadmin redeploydir 
[PASSED] deploydir : war/deploydir Test asadmin deploydir with a different context root 
[PASSED] deploydir : war/deploydir Test asadmin undeploydir 
[PASSED] nojarexpansion : war/nojarexpansion Test asadmin deploy (server) 
[PASSED] nojarexpansion : war/nojarexpansion Test verify jar was not expanded after deploy 
[PASSED] nojarexpansion : war/nojarexpansion Test asadmin redeploy (server) 
[PASSED] nojarexpansion : war/nojarexpansion Test verify jar was not expanded after redeploy 
[UNKNOWN] nojarexpansion : war/nojarexpansionTest jsr88 deploy (server) 
[PASSED] nojarexpansion : war/nojarexpansion Test verify jar was not expanded after jsr88 deploy 
[UNKNOWN] nojarexpansion : war/nojarexpansion Test jsr88 redeploy (server) 
[PASSED] nojarexpansion : war/nojarexpansion Test verify jar was not expanded after jsr88 redeploy

Total 14 failed and all are related to jsr88.

NOTE:  due to IT 4761 (https://glassfish.dev.java.net/issues/show_bug.cgi?id=4761), the following tests are failing:
jsponly: deploy, redeploy
htmlonly: deploy, redeploy, enable
