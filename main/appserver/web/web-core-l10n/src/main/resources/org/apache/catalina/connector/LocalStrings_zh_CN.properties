#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
#
# This file incorporates work covered by the following copyright and
# permission notice:
#
# Copyright 2004 The Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Message IDs reserved for this file: PWC6600-PWC6624
#
object.invalidScope=PWC6600: \u65E0\u6CD5\u5728 servlet \u7684 service \u65B9\u6CD5\u6216\u8FC7\u6EE4\u5668\u7684 doFilter \u65B9\u6CD5\u5916\u90E8\u4F7F\u7528\u6B64\u5BF9\u8C61

#
# Message IDs reserved for this file: PWC3980-PWC4209
#
coyoteConnector.alreadyInitialized=PWC3980: \u5DF2\u521D\u59CB\u5316\u8FDE\u63A5\u5668
coyoteConnector.alreadyStarted=PWC3981: \u5DF2\u542F\u52A8\u8FDE\u63A5\u5668
coyoteConnector.cannotRegisterProtocol=PWC3982: \u65E0\u6CD5\u4E3A\u534F\u8BAE\u6CE8\u518C MBean
coyoteConnector.notStarted=PWC3983: \u5C1A\u672A\u542F\u52A8 Coyote \u8FDE\u63A5\u5668
coyoteConnector.protocolHandlerDestroyFailed=PWC3984: \u534F\u8BAE\u5904\u7406\u7A0B\u5E8F\u9500\u6BC1\u5931\u8D25: {0}
coyoteConnector.protocolHandlerInitializationFailed=PWC3985: \u534F\u8BAE\u5904\u7406\u7A0B\u5E8F\u521D\u59CB\u5316\u5931\u8D25: {0}
coyoteConnector.protocolHandlerInstantiationFailed=PWC3986: \u534F\u8BAE\u5904\u7406\u7A0B\u5E8F\u5B9E\u4F8B\u5316\u5931\u8D25: {0}
coyoteConnector.protocolHandlerStartFailed=PWC3987: \u534F\u8BAE\u5904\u7406\u7A0B\u5E8F\u542F\u52A8\u5931\u8D25: {0}
coyoteConnector.protocolRegistrationFailed=PWC3988: \u534F\u8BAE JMX \u6CE8\u518C\u5931\u8D25
coyoteConnector.illegalAdapter=PWC4015: mod_jk \u65E0\u6548\u9002\u914D\u5668\u5B9E\u73B0: {0} 
coyoteAdapter.service=PWC3989: \u8BF7\u6C42\u5904\u7406\u671F\u95F4\u5BB9\u5668\u4E2D\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF\u6216\u9519\u8BEF
coyoteResponse.getOutputStream.ise=PWC3990: \u5DF2\u4E3A\u8BE5\u54CD\u5E94\u8C03\u7528 getWriter()
coyoteResponse.getWriter.ise=PWC3991: \u5DF2\u4E3A\u8BE5\u54CD\u5E94\u8C03\u7528 getOutputStream()
coyoteResponse.resetBuffer.ise=PWC3992: \u65E0\u6CD5\u5728\u63D0\u4EA4\u54CD\u5E94\u540E\u91CD\u7F6E\u7F13\u51B2\u533A
coyoteResponse.sendError.ise=PWC3993: \u65E0\u6CD5\u5728\u63D0\u4EA4\u54CD\u5E94\u540E\u8C03\u7528 sendError()
coyoteResponse.sendRedirect.ise=PWC3994: \u65E0\u6CD5\u5728\u63D0\u4EA4\u54CD\u5E94\u540E\u8C03\u7528 sendRedirect()
coyoteResponse.setBufferSize.ise=PWC3995: \u65E0\u6CD5\u5728\u5199\u5165\u6570\u636E\u540E\u66F4\u6539\u7F13\u51B2\u533A\u5927\u5C0F
responseFacade.nullResponse=PWC3996: \u54CD\u5E94\u5BF9\u8C61\u4E3A\u7A7A\u503C
coyoteRequest.getInputStream.ise=PWC3997: \u5DF2\u4E3A\u6B64\u8BF7\u6C42\u8C03\u7528 getReader()
coyoteRequest.getReader.ise=PWC3998: \u5DF2\u4E3A\u6B64\u8BF7\u6C42\u8C03\u7528 getInputStream()
coyoteRequest.sessionCreateCommitted=PWC3999: \u65E0\u6CD5\u5728\u63D0\u4EA4\u54CD\u5E94\u540E\u521B\u5EFA\u4F1A\u8BDD
coyoteRequest.setAttribute.namenull=PWC4000: \u65E0\u6CD5\u4F7F\u7528\u7A7A\u503C\u540D\u79F0\u8C03\u7528 setAttribute
coyoteRequest.listenerStart=PWC4001: \u5C06\u4E0A\u4E0B\u6587\u521D\u59CB\u5316\u7684\u4E8B\u4EF6\u53D1\u9001\u81F3\u7C7B{0}\u7684\u76D1\u542C\u7A0B\u5E8F\u5B9E\u4F8B\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
coyoteRequest.listenerStop=PWC4002: \u5C06\u4E0A\u4E0B\u6587\u9500\u6BC1\u7684\u4E8B\u4EF6\u53D1\u9001\u81F3\u7C7B{0}\u7684\u76D1\u542C\u7A0B\u5E8F\u5B9E\u4F8B\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
coyoteRequest.attributeEvent=PWC4003: \u5C5E\u6027\u4E8B\u4EF6\u76D1\u542C\u7A0B\u5E8F\u629B\u51FA\u4E86\u5F02\u5E38\u9519\u8BEF
coyoteRequest.postTooLarge=PWC4004: \u7531\u4E8E\u6295\u5BC4\u7684\u6570\u636E\u7684\u5927\u5C0F\u592A\u5927, \u672A\u89E3\u6790\u53C2\u6570\u3002\u5982\u679C\u5E94\u7528\u7A0B\u5E8F\u5E94\u63A5\u53D7\u5927\u578B POST, \u8BF7\u4F7F\u7528\u8FDE\u63A5\u5668\u7684 maxPostSize \u5C5E\u6027\u6765\u89E3\u51B3\u6B64\u95EE\u9898\u3002
requestFacade.nullRequest=PWC4005: \u4E0D\u5F97\u5728 servlet \u7684 service \u6216\u8FC7\u6EE4\u5668\u7684 doFilter \u65B9\u6CD5\u8303\u56F4\u4E4B\u5916\u4F7F\u7528\u8BF7\u6C42\u5BF9\u8C61
coyoteAdapter.proxyAuthCertError=PWC4009: \u5C06\u5BA2\u6237\u673A\u8BC1\u4E66\u94FE\u89E3\u6790\u5230 java.security.cert.X509Certificate \u5B9E\u4F8B\u6570\u7EC4\u65F6\u51FA\u9519
coyoteAdapter.listenerOff=PWC4010: \u5DF2\u7981\u7528\u7AEF\u53E3 {0} \u4E0A\u7684 HTTP \u76D1\u542C\u7A0B\u5E8F
#no ID on coyoteAdapter.noHost as it is sent to client
coyoteAdapter.noHost=\u6CA1\u6709\u4E3B\u673A\u4E0E\u670D\u52A1\u5668\u540D\u79F0{0}\u5339\u914D
coyoteRequest.setCharacterEncoding.ise=PWC4011: \u65E0\u6CD5\u4ECE\u4E0A\u4E0B\u6587{1}\u5C06\u8BF7\u6C42\u5B57\u7B26\u7F16\u7801\u8BBE\u7F6E\u4E3A{0}, \u56E0\u4E3A\u5DF2\u8BFB\u53D6\u8BF7\u6C42\u53C2\u6570, \u6216\u8005\u5DF2\u8C03\u7528 ServletRequest.getReader()
coyoteRequest.unknownHost=PWC4012: \u65E0\u6CD5\u5C06 IP \u5730\u5740 {0} \u89E3\u6790\u5230\u4E3B\u673A\u540D
coyoteRequest.nullRemoteAddressFromProxy=PWC4013: \u65E0\u6CD5\u4ECE\u4EE3\u7406\u786E\u5B9A\u5BA2\u6237\u673A\u8FDC\u7A0B\u5730\u5740 (\u8FD4\u56DE\u7A7A\u503C)
object.invalidScope=PWC4014: \u65E0\u6CD5\u5728 servlet \u7684 service \u65B9\u6CD5\u6216\u8FC7\u6EE4\u5668\u7684 doFilter \u65B9\u6CD5\u5916\u90E8\u4F7F\u7528\u6B64\u5BF9\u8C61
inputBuffer.streamClosed=PWC4015: \u6D41\u5DF2\u5173\u95ED
coyoteRequest.sendfileNotCanonical=PWC4016: \u65E0\u6CD5\u786E\u5B9A\u6307\u5B9A\u7528\u4E8E sendfile \u7684\u6587\u4EF6 [{0}] \u7684\u89C4\u8303\u540D\u79F0
coyoteRequest.multipart.not.configured=PWC4017: \u8C03\u7528\u4E86 Request.{0}, \u4F46\u6CA1\u6709\u591A\u90E8\u5206\u914D\u7F6E\u3002\u5C06 @MultipartConfig \u6DFB\u52A0\u5230 servlet \u4E2D, \u6216\u8005\u5C06 multipart-config \u5143\u7D20\u6DFB\u52A0\u5230 web.xml \u4E2D
inputBuffer.alreadysetReadListener=PWC4018: \u5DF2\u8BBE\u7F6E ReadListener\u3002
outputBuffer.alreadysetWriteListener=PWC4019: \u5DF2\u8BBE\u7F6E WriteListener\u3002
coyoteRequest.changeSessionId.ise=PWC4020: \u5DF2\u8C03\u7528 changeSessionId, \u4F46\u6CA1\u6709\u4F1A\u8BDD
coyoteReader.readline.skipFailure=PWC4021: \u65E0\u6CD5\u8DF3\u8FC7 readLine() \u4E0A CoyoteReader \u7684\u57FA\u7840\u7F13\u51B2\u533A\u4E2D\u7684 {0} \u4E2A\u5B57\u7B26\u3002

#
# Messages related to async processing mode
#
async.dispatchInProgress=\u5F02\u6B65\u5206\u6D3E\u5DF2\u5728\u8FDB\u884C\u4E2D, \u5FC5\u987B\u5148\u8C03\u7528 ServletRequest.startAsync
async.addListenerIllegalState=\u4E0D\u5F97\u5728 container-initiated \u5206\u6D3E\u540E\u8C03\u7528 AsyncContext.addListener, \u5728\u5206\u6D3E\u671F\u95F4\u8C03\u7528\u4E86 ServletRequest.startAsync, \u5DF2\u8FD4\u56DE\u5230\u5BB9\u5668
async.setTimeoutIllegalState=\u4E0D\u5F97\u5728 container-initiated \u5206\u6D3E\u540E\u8C03\u7528 AsyncContext.setTimeout, \u5728\u5206\u6D3E\u671F\u95F4\u8C03\u7528\u4E86 ServletRequest.startAsync, \u5DF2\u8FD4\u56DE\u5230\u5BB9\u5668
async.listenerInvocationError=\u8C03\u7528 AsyncListener \u65F6\u51FA\u9519
request.notInAsyncMode=\u8BF7\u6C42\u5C1A\u672A\u7F6E\u4E8E\u5F02\u6B65\u6A21\u5F0F, \u5FC5\u987B\u5148\u8C03\u7528 ServletRequest.startAsync
request.startAsync.notSupported=\u8BF7\u6C42\u6240\u5728\u7684\u8FC7\u6EE4\u5668\u6216 servlet \u8303\u56F4\u4E0D\u652F\u6301\u5F02\u6B65\u64CD\u4F5C
request.startAsync.alreadyCalled=ServletRequest.startAsync \u518D\u6B21\u88AB\u8C03\u7528\u800C\u6CA1\u6709\u4EFB\u4F55\u5F02\u6B65\u5206\u6D3E, \u6216\u8005\u5728\u4EFB\u4F55\u6B64\u7C7B\u5206\u6D3E\u8303\u56F4\u4E4B\u5916\u88AB\u8C03\u7528, \u6216\u8005\u518D\u6B21\u5728\u76F8\u540C\u5206\u6D3E\u7684\u8303\u56F4\u5185\u88AB\u8C03\u7528
request.startAsync.alreadyComplete=\u54CD\u5E94\u5DF2\u5173\u95ED
request.startAsync.notInScope=ServletRequest.startAsync \u5728\u5F02\u6B65\u5206\u6D3E\u7684\u8303\u56F4\u4E4B\u5916\u8C03\u7528
request.asyncComplete.alreadyComplete=\u5DF2\u4ECE\u5F02\u6B65\u6A21\u5F0F\u91CA\u653E\u8BF7\u6C42
