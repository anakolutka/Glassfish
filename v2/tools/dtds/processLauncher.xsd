<?xml version="1.0" encoding="utf-8"?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://java.sun.com/j2ee/s1as8se/processLauncher"
    xmlns="http://java.sun.com/j2ee/s1as8se/processLauncher"
    elementFormDefault="qualified">
    
    <!-- GENERAL STRUNCTURE
    <processes>
        <process name="s1as8-server">
            <sysproperty key="com.sun.aas.instanceName" value="${com.sun.aas.instanceName}"  if="com.sun.aas.instanceName" />
            <main_class classname="com.sun.enterprise.server.PEMain" />
            <classpath dir="${com.sun.aas.installRoot}/lib"
                includes=".*jar$" 
                excludes="appserv-rt.jar, ...."
                prefix="/export/home/basler/test.jar" />
        </process>
        ....
    </processes>
    -->
    
    <!-- Docroot element that has the defined process element as its children -->
    <xs:element name="processes">
        <xs:complexType>
            <xs:sequence>

                <!-- 
                Main element that can be mapped 1-to-1 to a process definition that is to be 
                executed through the ProcessLauncher
                
                ATTRIBUTE(S):
                name - Name of the process definition type.  Must be unique within the processLauncher.xml file.
                -->
                <xs:element name="process" minOccurs="1" maxOccurs="unbounded">
                    <xs:complexType>
                            <xs:sequence>
                            
                                <!-- 
                                Defines system properties for the java command to be executed.  A "-D" is pre-pended 
                                to the property key unless the key starts with "-X".  An equal sign ("=") with the value is 
                                appended to the key if the value attribute exists.  The property will not be added if the 
                                "if" system property designated by the associated attribute is not present.  The 
                                com.sun.enterprise.util.RelativePathResolver class will be used to resolve system property 
                                tokens in the values of the sysproperty elements.
                                
                                ATTRIBUTE(S):
                                key - Name of system property
                                value - Value for the system property.  This value is optional.  
                                        An equals sign "=" will not be appended to the key if this value doesn't exist.
                                if - System property that must exist for this system property to be added.  
                                     This attribute is optional.
                                -->
                                <xs:element name="sysproperty" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:attribute name="key" type="xs:string" use="required" />
                                        <xs:attribute name="value" type="xs:string" use="optional" />
                                        <xs:attribute name="if" type="xs:string" use="optional" />
                                    </xs:complexType>
                                </xs:element>

                                <!-- 
                                Element that denotes the main class to execute in the java command.
                                
                                ATTRIBUTE(S):
                                classname - Fully qualified class name of the class to run                                
                                -->
                                <xs:element name="main_class">
                                    <xs:complexType>
                                        <xs:attribute name="classname" type="xs:string" use="required" />
                                    </xs:complexType>
                                </xs:element>
                                
                                <!-- 
                                Element that builds the classpath portion of the java command.
                                
                                ATTRIBUTE(S):
                                dir - This attribute holds the fully qualified path to the lib directory where the jar exists.  
                                      This is optional, but if it is not entered the "includes" & "excludes" attributes are not used.  
                                      This is to allow for a known fully qualified classpath to be enter via the "prefix" attritbute.  
                                      The com.sun.enterprise.util.RelativePathResolver class will be used to resolve system property tokens 
                                      in this attribute.                                      
                                includes - A comma delimited list of jar names to include in the classpath if they exist in the lib 
                                           directory specified in the "dir" attribute.  The names can contain a regular expression to 
                                           assist name resolution.  For users who are not familiar with regular expressions a short-cut has 
                                           been added to allow a "*" as a wildcard prefix (e.g. "*.jar").  This functionality was added for 
                                           backwards compatibility with the Apache Commons Launcher and for future uses the equivalent regular 
                                           expression ".*jar$" should be used.
                                excludes - A comma delimited list of jar names to exclude in the classpath if they exist in the lib directory 
                                           specified in the "dir" attribute.  The names can contain a regular expression to assist name resolution.  
                                           For users who are not familiar with regular expressions a short-cut has been added to allow a "*" as a 
                                           wildcard prefix (e.g. "*.jar").  This functionality was added for backwards compatibility with the 
                                           Apache Commons Launcher and for future uses the equivalent regular expression ".*jar$" should be used.
                                prefix - A list of fully qualified classpath jars.  The com.sun.enterprise.util.RelativePathResolver class will 
                                         be used to resolve system property tokens in this attribute.  This attribute can also be used if a 
                                         classpath is known before execution time.  The java default system property "${path.separator}" should 
                                         be used as the path delimiter to keep the profile platform agnostic.
                                -->
                                <xs:element name="classpath">
                                    <xs:complexType>
                                        <xs:attribute name="dir" type="xs:string" use="optional" />
                                        <xs:attribute name="includes" type="xs:string" use="optional" />
                                        <xs:attribute name="excludes" type="xs:string" use="optional" />
                                        <xs:attribute name="prefix" type="xs:string" use="optional" />
                                        <xs:attribute name="j2se1_4_prefix" type="xs:string" use="optional" />
                                        <xs:attribute name="j2se1_5_or_later_prefix" type="xs:string" use="optional" />
                                    </xs:complexType>
                                </xs:element>
                        </xs:sequence>

                        <xs:attribute name="name" type="xs:string" use="required" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
