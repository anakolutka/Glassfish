#
# The contents of this file are subject to the terms 
# of the Common Development and Distribution License 
# (the "License").  You may not use this file except 
# in compliance with the License.
# 
# You can obtain a copy of the license at 
# glassfish/bootstrap/legal/CDDLv1.0.txt or 
# https://glassfish.dev.java.net/public/CDDLv1.0.html. 
# See the License for the specific language governing 
# permissions and limitations under the License.
# 
# When distributing Covered Code, include this CDDL 
# HEADER in each file and include the License file at 
# glassfish/bootstrap/legal/CDDLv1.0.txt.  If applicable, 
# add the following below this CDDL HEADER, with the 
# fields enclosed by brackets "[]" replaced with your 
# own identifying information: Portions Copyright [yyyy] 
# [name of copyright owner]
#

#
# Copyright 2005 The Apache Software Foundation.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at 
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.

#
# Generic messages
#

# {0} - location (class.method)
#NOI18N
ERR_InvalidNullFieldInstance={0}: specified Field instance is null.


# {0} - class name
# {1} - detailed message of the cause
EXC_ClassLoadingError=Error during loading of class ''{0}'': {1}.

#
# BaseReflectionJavaType
#

# {0} - error location (class.method)
#NOI18N
ERR_InvalidNullClassInstance={0}: specified Class instance is null.

#
# BaseReflectionJavaField
#
# {0} - class name
EXC_CannotGetDeclaredField=A SecurityException was thrown when trying to \
get a declared field of class ''{0}''.  You must grant \
java.lang.RuntimePermission("accessDeclaredMembers") to the codeBase \
containing the JavaModel and JDOModel implementation.
# {0} - class name
EXC_CannotGetDeclaredFields=A SecurityException was thrown when trying to \
get the declared fields of class ''{0}''.  You must grant \
java.lang.RuntimePermission("accessDeclaredMembers") to the codeBase \
containing the JavaModel and JDOModel implementation.

#NOI18N
ERR_MissingFieldInstance={0}: cannot find reflection field instance for field {1}.

#
# JavaPropertyImpl
#
EXC_MissingGetterAndSetter=Cannot define property ''{0}'' of class ''{1}'' with setter and getter method being null.

#
# AbstractJavaModelFactory
#

# {0} - class name
# {1} - method name
EXC_MethodNotSupported=Class {0} does not support method {1}.
EXC_CannotCreateJavaModel=Problems during JavaModel creation.

#
# ReflectionJavaModelFactory
#

# {0} - class instance
EXC_CannotGetClassLoader=A SecurityException was thrown when trying to get the \
class loader of class instance ''{0}''. In order to get runtime metadata, you \
must grant ReflectPermission("getClassLoader") to the codeBase containing the \
JavaModel and JDOModel implementation.

# {0} - key instance
EXC_InvalidJavaModelKey=Invalid key for runtime JavaModel lookup: \
expected ''java.lang.ClassLoader'' instance, found ''{0}'' instance.

# {0} - type description instance
EXC_InvalidTypeDesc=Invalid type description for runtime JavaType lookup: \
expected ''java.lang.Class'' instance, found ''{0}'' instance.

# {0} - JavaType instance
EXC_InvalidJavaType=Invalid JavaType instance for getJavaClass method: \
expected ''org.apache.jdo.impl.model.java.ReflectionJavaType'' instance, \
found ''{0}'' instance.

#
# ReflectionJavaTypeIntrospector
#

#NOI18N
# {0} - Class
ERR_CannotIntrospectClass=Cannot introspect class ''{0}''.
#NOI18N
# {0} - Method name
# {1} - Property name
ERR_CannotCreatePropertyDescriptor=Cannot create PropertyDescriptor for property ''{0}'' using method ''{1}''.
#NOI18N
# {0} - Method name
# {1} - Property name
ERR_CannotSetWriteMethod=Cannot set write method of PropertyDescriptor for property ''{0}''.
