<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->
<!DOCTYPE project [
  <!ENTITY commonBuild SYSTEM "../bootstrap/ant-common.xml">
  ]>

<project name="Grizzly HTTP Connector" default="all" basedir=".">

    &commonBuild;
    <property file="../bootstrap/project.properties"/>
    <property file="./build.properties"/>
    <property name="classes" value="target/classes"/>

    <path id="grizzly.classpath">
        <pathelement location="${appserv-admin.jar}"/>
        <pathelement location="${appserv-rt.jar}"/>
        <pathelement location="${javaee.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
    </path>

    <target name="build-modules">
        <mkdir dir="${classes}"/>
        <javac srcdir="modules/cometd/src/main/java/com/sun/grizzly/cometd" destdir="${classes}"
               debug="${javac.debug}" deprecation="${javac.deprecation}"
               optimize="${javac.optimize}"
               excludes="**/CVS/**">
            <classpath refid="grizzly.classpath" />
        </javac>
    </target>

    <target name="build">
        <mkdir dir="${classes}"/>
        <javac srcdir="src/java/com/sun/enterprise/web/" destdir="${classes}"
               debug="${javac.debug}" deprecation="${javac.deprecation}"
               optimize="${javac.optimize}"
               excludes="**/CVS/**">
            <classpath refid="grizzly.classpath" />
        </javac>
    
        <copy todir="${classes}" overwrite="true">
            <fileset dir="./src/java">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>

        <antcall target="build-modules"/>
    </target>

    <target name="clean">
        <delete failonerror="false" dir="${classes}"/>
    </target>

    <target name="all" depends="build">
        <fileset dir="${classes.dir}">
            <include name="**/LocalStrings_es.properties" />
        </fileset>

        <jar destfile="${glassfish.lib.home}/appserv-rt.jar"
             update="true"
             basedir="${classes}"/> 
    </target>

    <target name="build-coyote">
        <mkdir dir="${classes}"/>
        <javac srcdir="../appserv-webtier/src/java/org/apache/tomcat" destdir="${classes}"
               debug="${javac.debug}" deprecation="${javac.deprecation}"
               optimize="${javac.optimize}"
               excludes="**/CVS/**">
            <classpath refid="grizzly.classpath" />
        </javac>

        <javac srcdir="../appserv-webtier/src/java/org/apache/coyote" destdir="${classes}"
               debug="${javac.debug}" deprecation="${javac.deprecation}"
               optimize="${javac.optimize}" >
               <exclude name="**/CVS/**"/>
               <exclude name="**/tomcat5/**"/>
            <classpath refid="grizzly.classpath" />
        </javac>
        <copy todir="target/classes/org/apache/coyote" overwrite="true">
            <fileset dir="../appserv-webtier/src/java/org/apache/coyote">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
        <copy todir="target/classes/org/apache/tomcat" overwrite="true">
            <fileset dir="../appserv-webtier/src/java/org/apache/tomcat">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>


    <target name="src-grizzly">
        <mkdir dir="target/src"/>
        <mkdir dir="target/src/java/org/apache/tomcat"/>
        <mkdir dir="target/src/java/org/apache/coyote"/>
        <mkdir dir="target/src/java/com/sun/enterprise/web"/>
        <copy todir="target/src/org/apache/coyote" overwrite="true">        
            <fileset dir="../appserv-webtier/src/java/org/apache/tomcat">
               <exclude name="**/CVS/**"/>
               <include name="**/*.java"/>
               <include name="**/*.properties"/>
               <include name="**/*.xml"/>
            </fileset>
        </copy>
        <copy todir="target/src/org/apache/coyote" overwrite="true">
            <fileset dir="../appserv-webtier/src/java/org/apache/coyote">
               <exclude name="**/CVS/**"/>
               <exclude name="**/tomcat5/**"/>
               <include name="**/*.java"/>
               <include name="**/*.properties"/>
               <include name="**/*.xml"/>
            </fileset>
        </copy>
        <copy todir="target/src/com/sun/enterprise/web" overwrite="true">
            <fileset dir="src/java/com/sun/enterprise/web">
               <exclude name="**/CVS/**"/>
               <exclude name="**/tomcat5/**"/>
               <include name="**/*.java"/>
               <include name="**/*.properties"/>
               <include name="**/*.xml"/>
                <exclude name="**/handlers/**"/>
                <exclude name="**/GrizzlyHttpProtocol**"/>
                <exclude name="**/NioProviderImpl**"/>
            </fileset>
        </copy>
        <jar destfile="grizzly-framework-src.jar" update="false">
            <fileset dir="target/src">
                <include name="**/*.java"/>
                <exclude name="**/handlers/**"/>
                <exclude name="**/GrizzlyHttpProtocol**"/>
                <exclude name="**/NioProviderImpl**"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </jar>
    </target>

    <target name="bundle-grizzly" depends="build-coyote,build">
        <copy file="${glassfish.maven}/legal/CDDLv1.0.txt" tofile="target/classes/LICENSE.txt"/>

        <unzip src="${commons-logging.jar}" dest="target/classes"/>
    
        <jar destfile="grizzly-framework.jar" update="false">
            <fileset dir="target/classes">
                <include name="**/*.class"/>
                <exclude name="**/handlers/**"/>
                <exclude name="**/GrizzlyHttpProtocol**"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="com.sun.enterprise.web.connector.grizzly.standalone.Main"/>
                <attribute name="Class-Path" value="./modules/cometd/target/grizzly-cometd-0.5-SNAPSHOT.jar"/>

            </manifest>
        </jar>
     </target>

    <target name="push-to-maven-prepare" depends="-push-to-maven-init,src-grizzly"
        description="creates an image for the 'push-to-maven' goal">
        <delete dir="build/maven-repo" /><!-- clean it -->
        <maven-repository-importer destdir="build/maven-repo" 
            version="1.0.0">
            <artifact jar="grizzly-framework.jar" pom="grizzly.pom" srczip="grizzly-framework-src.jar" />
        </maven-repository-importer>
    </target>

    <target name="push-to-maven" depends="push-to-maven-prepare"
        description="Promote Grizzly Framework jars to the java.net maven repository">
        <cvs-import src="build/maven-repo" dest="glassfish/repo" />
    </target>

    
    <target name="build-examples" depends="" description="build examples">
        <javac srcdir="examples/WEB-INF/classes" destdir="examples/WEB-INF/classes"
               debug="${javac.debug}" deprecation="${javac.deprecation}"
               optimize="${javac.optimize}" >
               <exclude name="**/CVS/**"/>
            <classpath refid="grizzly.classpath" />
        </javac>
        <jar destfile="examples.jar" update="false">
            <fileset dir="examples">
                <include name="**/*.java"/>
                <include name="**/*.jsp"/>
                <include name="**/*.class"/>
                <include name="**/*.html"/>
                <include name="**/*.xml"/>
            </fileset>
        </jar>
    </target>

    
</project>
