<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="TopLink Essentials Testing" default="all" basedir=".">  

    <property name="component.name" value="TopLink Essentials Testing"/>    

    <property file="${user.home}/build.properties"/>
    <property file="./build.properties"/>
    <property file="${basedir}/../bootstrap/project.properties"/>

    <!-- test.properties contain testing environment properties (such as database) -->
    <property name="test.properties" location="./test.properties"/>
    <property file="${test.properties}"/>
    
    <!-- default test class (full test) -->
    <property name="test.class" value="oracle.toplink.essentials.testing.tests.FullRegressionTestSuite"/>
    <property name="toplink.logging.level" value="INFO"/>

    <target name="all" depends="build"/>

    <!-- build -->
    <target name="build" depends="assemble.tests,
                                  assemble.annotation_model,
                                  assemble.xml_only_model,
                                  assemble.xml_merge_model,
                                  assemble.validation,
                                  assemble.ddl_generation"
            description="Build entire component">
    </target>

        <!-- init. Initialization involves creating publishing directories and
         OS specific targets. --> 
    <target name="init" description="${component.name} initialization">
        <tstamp>
            <format property="start.time" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>    
        <echo message="Building component ${component.name}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${component.classes.dir}"/>
        <mkdir dir="${annotation_model.classes.dir}"/>
        <mkdir dir="${xml_only_model.classes.dir}"/>
        <mkdir dir="${xml_merge_model.classes.dir}"/>
        <mkdir dir="${validation.classes.dir}"/>
        <mkdir dir="${ddl_generation.classes.dir}"/>
        <mkdir dir="./lib"/>
    </target>

    <!-- compile all the source files. These include test as well as model sources -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
               debug="${javac.debug}" optimize="${javac.optimize}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <classpath>
                <pathelement location="${entity-persistence.jar}"/>
                <pathelement location="${junit.location}"/>
            </classpath>
        </javac>
    </target>

    <!-- assemble annotation_model jar. This jar is also our PU Root.
         So, copy persistence.xml into this jar. Also, copy a default
         mapping file into this jar. The default mapping file
         contains PU level defaults. -->
    <target name="assemble.annotation_model" depends="compile">
        <copy todir="${annotation_model.classes.dir}/META-INF">
            <fileset dir="./config/META-INF" includes="persistence.xml orm.xml"/>
        </copy>
        <copy todir="${annotation_model.classes.dir}">
            <fileset dir="${build.classes.dir}"
                     includes="oracle/toplink/essentials/testing/models/"
                     excludes="oracle/toplink/essentials/testing/models/cmp3/xml/**
                               oracle/toplink/essentials/testing/models/cmp3/ddlgeneration/**
                               oracle/toplink/essentials/testing/models/cmp3/validationfailed/**"/>
        </copy>
        <jar jarfile="./lib/toplink-essentials-annotation-model-tests.jar">
            <fileset dir="${annotation_model.classes.dir}">
            </fileset>
        </jar>
    </target>

    <!-- assemble xml_only_model jar. This includes copying mapping files
         for this model as well.-->
    <target name="assemble.xml_only_model" depends="compile">
        <copy todir="${xml_only_model.classes.dir}/META-INF">
            <fileset dir="./config/META-INF"
                includes="advanced-entity-mappings.xml
                          inherited-entity-mappings.xml
                          relationships-entity-mappings.xml
                          unidirectional-relationships-entity-mappings.xml"/>
        </copy>
        <!-- Test case for GF issue #1131: Copy one of the mapping files as orm.xml.
             More over, this also serves as test case for GF issue #589,
             which requires us to package inheritance-entity-mappings.xml as orm.xml
        -->
        <copy file="./config/META-INF/inheritance-entity-mappings.xml"
              tofile="${xml_only_model.classes.dir}/META-INF/orm.xml">
        </copy>
        <copy todir="${xml_only_model.classes.dir}">
            <fileset dir="${build.classes.dir}"
                     includes="oracle/toplink/essentials/testing/models/cmp3/xml/"
                     excludes="oracle/toplink/essentials/testing/models/cmp3/xml/merge/**"/>
        </copy>
        <jar jarfile="./lib/toplink-essentials-xml-only-model-tests.jar">
            <fileset dir="${xml_only_model.classes.dir}">
            </fileset>
        </jar>
    </target>

    <!-- assemble xml_merge_model jar. This includes copying mapping files
         for this model as well. -->
    <target name="assemble.xml_merge_model" depends="compile">
        <copy todir="${xml_merge_model.classes.dir}/META-INF">
            <fileset dir="./config/META-INF"
                includes="orm-annotation-merge-advanced-entity-mappings.xml
                          orm-annotation-merge-relationships-entity-mappings.xml
                          incomplete-nonowning-entity-mappings.xml
                          incomplete-owning-entity-mappings.xml
                          "/>
        </copy>
        <copy todir="${xml_merge_model.classes.dir}">
            <fileset dir="${build.classes.dir}"
                     includes="oracle/toplink/essentials/testing/models/cmp3/xml/merge/"
                     excludes="oracle/toplink/essentials/testing/models/cmp3/xml/merge/inherited/**"/>
        </copy>
        <jar jarfile="./lib/toplink-essentials-xml-merge-model-tests.jar">
            <fileset dir="${xml_merge_model.classes.dir}">
            </fileset>
        </jar>
    </target>

    <!-- assemble -->
    <target name="assemble.validation" depends="compile">
        <copy todir="${validation.classes.dir}/META-INF">
            <fileset dir="./config/validation-failed-testmodel/META-INF"/>
        </copy>
        <copy todir="${validation.classes.dir}">
            <fileset dir="${build.classes.dir}"
                     includes="oracle/toplink/essentials/testing/models/cmp3/validationfailed/**"/>
        </copy>
        <jar jarfile="./lib/toplink-essentials-validation-tests.jar">
            <fileset dir="${validation.classes.dir}">
            </fileset>
        </jar>
    </target>

    <!-- assemble -->   
    <target name="assemble.ddl_generation" depends="compile">
        <copy todir="${ddl_generation.classes.dir}/META-INF">
            <fileset dir="./config/ddl-generation-testmodel/META-INF"/>
        </copy>
        <copy todir="${ddl_generation.classes.dir}">
            <fileset dir="${build.classes.dir}"
                     includes="oracle/toplink/essentials/testing/models/cmp3/xml/merge/inherited/**
                               oracle/toplink/essentials/testing/models/cmp3/ddlgeneration/**"/>
        </copy>
        <jar jarfile="./lib/toplink-essentials-ddl-generation-tests.jar">
            <fileset dir="${ddl_generation.classes.dir}">
            </fileset>
        </jar>
    </target>

    <!-- assemble tests-->
    <target name="assemble.tests" depends="compile">
        <copy todir="${component.classes.dir}">
            <fileset dir="${build.classes.dir}"
                     includes="oracle/toplink/essentials/testing/framework/
                               oracle/toplink/essentials/testing/tests/"/>
        </copy>
        <jar jarfile="./lib/toplink-essentials-tests.jar">
            <fileset dir="${component.classes.dir}">
            </fileset>
        </jar>
    </target>

    <path id="junit.classpath">
                <pathelement location="."/>
                <pathelement path="${jdbc.driver.jar}"/>
                <pathelement location="${entity-persistence.jar}"/>
                <pathelement location="./lib/toplink-essentials-tests.jar"/>
                <pathelement location="./lib/toplink-essentials-annotation-model-tests.jar"/>
                <pathelement location="./lib/toplink-essentials-xml-only-model-tests.jar"/>
                <pathelement location="./lib/toplink-essentials-xml-merge-model-tests.jar"/>
                <pathelement location="./lib/toplink-essentials-validation-tests.jar"/>
                <pathelement location="./lib/toplink-essentials-ddl-generation-tests.jar"/>
                <pathelement location="../appserv-tests/lib/junit.jar"/>
    </path>

    <target name="test" depends="build">
        <echo>Running test with ${test.properties} on ${db.url}</echo>
        <junit printsummary="yes" haltonfailure="yes" failureproperty="junit.failed" fork="yes" showoutput="true" maxmemory="256m">
            <jvmarg value="-javaagent:${entity-persistence.jar}"/>
            <jvmarg value="-Dtoplink.logging.level=${toplink.logging.level}"/>
            <jvmarg value="-Dtest.properties=${test.properties}"/>
            <classpath>
                <path refid="junit.classpath"/>
            </classpath>
            <formatter type="plain"/>
            <test name="${test.class}" haltonfailure="no" outfile="${result.file}">
            </test>
        </junit>
        <fail message="Some of the junit tests failed.  See the ${result.file} file for details." if="junit.failed"/>

    </target>

    <!-- REMOVE THIS TARGET -->
    <target name="test.debug" depends="build">
        <junit printsummary="yes" haltonfailure="yes" failureproperty="junit.failed" fork="yes" showoutput="true" maxmemory="256m">
            <!--jvmarg value="-javaagent:${entity-persistence.jar}"/-->
            <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006"/>
            <jvmarg value="-Dtoplink.logging.level=${toplink.logging.level}"/>
            <jvmarg value="-Dtest.properties=${test.properties}"/>
            <classpath>
                <path refid="junit.classpath"/>
            </classpath>
            <formatter type="plain"/>
            <test name="${test.class}" haltonfailure="no" outfile="${result.file}">
            </test>
        </junit>
        <fail message="Some of the junit tests failed.  See the ${result.file} file for details." if="junit.failed"/>

    </target>

    <target name="clean" description="Clean the build">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${build.classes.dir}"/>
            <fileset dir="${component.classes.dir}"/>
            <fileset dir="${annotation_model.classes.dir}"/>
            <fileset dir="${xml_only_model.classes.dir}"/>
            <fileset dir="${xml_merge_model.classes.dir}"/>
            <fileset dir="${validation.classes.dir}"/>
            <fileset dir="${ddl_generation.classes.dir}"/>
            <fileset dir="lib" includes="*.jar"/>
        </delete>
    </target>

    <target name="clean-db" description="Clean all tables of database">
        <echo>Dropping all tables on ${db.url}</echo>
        <java classname="isql.DropTables">
            <classpath path="${jdbc.driver.jar}"/>
            <classpath location="${basedir}/../appserv-tests/lib/isql.jar"/>
            <arg line="${db.url} ${db.user} ${db.pwd} ${db.driver}"/>
        </java>
    </target>
</project>
