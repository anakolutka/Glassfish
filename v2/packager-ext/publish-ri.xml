<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 Copyright 2006 Sun Microsystems, Inc. All rights reserved.
 Use is subject to license terms.
-->

<!--  "publish"
  -   RI BUILD SPECIFIC TARGET.  PLEASE DO NOT MODIFY.
  -->
  
<target name="platform.init">
    <condition property="windows">
        <os family="windows" />
    </condition>
    <condition property="unix">
        <os family="unix" />
    </condition>
    <condition property="solaris">
        <os name="SunOS"/>
    </condition>
    <condition property="linux">
        <os name="Linux"/>
    </condition>
    <condition property="mac">
        <os name="Mac OS X"/>
    </condition>
</target>
  
<target name="publish-ri"
        depends="publish-SUNWasu, 
                 publish-SUNWasac,
                 publish-SUNWascmn, 
		 publish-SUNWjhrt,
		 publish-ant-ri,
                 publish-imq-ri"/>

<target name="publish-ri-init">
    <property name="ri.build" value="true"/>
</target>

<target name="publish-SUNWjhrt" depends="publish-jhall">
    <antcall target="publish-common">
        <param name="component.package" value="SUNWjhrt"/>
        <param name="component.publish.home" value="${jhall.tmp.dir}"/>
        <param name="publish.dir" value="${ri.home}"/>
        <param name="package.home" value="${package.home}"/>
    </antcall>
</target>

<target name="publish-SUNWasu" 
	   depends="publish-ri-init, publish-aso, publish-activation, publish-mail, publish-commons-logging, publish-peorb, publish-jaxr, publish-jaxrpc, publish-saaj"
    description="Merge more than one package">        
    <echo message="Merge package file using ${packager.jar}"/>
    <!-- NOTE. This is a workaround.  The content of default-domain.xml.template and cacerts.jks
       - is different for PE and RI, as PE includes adminGUI.
       - We remove the PE template, and copy over the RI template -->
    <delete file="${aso.tmp.templates.dir}/default-domain.xml.template"/>
    <copy tofile="${aso.tmp.templates.dir}/default-domain.xml.template"
          file="${admin.templates.publish.home}/ri-domain.xml.template"/>

    <delete file="${aso.tmp.templates.dir}/cacerts.jks"/>
    <copy tofile="${aso.tmp.templates.dir}/cacerts.jks"
          file="${admin.templates.publish.home}/cacerts-ri.jks"/>
 
    <delete file="${aso.tmp.templates.dir}/samples-domain.xml.template"/>

    <delete dir="${asu.tmp.dir}"/>
    <mkdir dir="${asu.tmp.dir}"/>
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${saaj.tmp.dir}"/>
    </copy>
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${jaxr.tmp.dir}"/>
    </copy>
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${jaxrpc.tmp.dir}"/>
    </copy>
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${mail.tmp.dir}"/>
    </copy>
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${activation.tmp.dir}"/>
    </copy>
    <antcall target="copy-peorb-mac"/>    
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${jaxp.tmp.dir}"/>
    </copy>    
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${aso.tmp.dir}"/>
    </copy>
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${commons-logging.tmp.dir}"/>
    </copy>
    <!-- <copy file="${jmxremote.jar}" todir="${asu.tmp.dir}/appserver/lib"/> -->
    <copy file="${jmxremote_optional.jar}" todir="${asu.tmp.dir}/appserver/lib"/>
	<copy todir="${asu.tmp.templates.dir}" overwrite="true"
          file="${basedir}/internal/install/asenv.conf.template"/>
    <copy todir="${asu.tmp.templates.dir}" overwrite="true"
          file="${basedir}/internal/install/asenv.bat.template"/>
    <copy todir="${asu.tmp.dir}/appserver" overwrite="true"
          file="${appserv-core.publish.home}/3RD-PARTY-LICENSE.txt"/>
    <copy tofile="${asu.tmp.dir}/appserver/LICENSE.txt" overwrite="true"
          file="${appserv-core.publish.home}/LICENSE.txt"/>
	<copy tofile="${asu.tmp.dir}/appserver/COPYRIGHT" overwrite="true"
          file="${appserv-core.publish.home}/COPYRIGHT"/>

    <antcall target="publish-common">
        <param name="component.package" value="SUNWasu"/>
        <param name="component.publish.home" value="${asu.tmp.dir}/appserver"/>
        <param name="publish.dir" value="${ri.home}"/>
        <param name="package.home" value="${package.home}"/>
    </antcall>
</target>

<target name="copy-peorb-mac" depends="platform.init" if="mac">
    <copy todir="${asu.tmp.dir}/appserver">
        <fileset dir="${peorb.tmp.dir}"/>
    </copy>    
</target>

<target name="publish-SUNWasac" 
        depends="publish-admin"
        description="Package SUNWasac, aka admin stuff">

    <antcall target="publish-common">
        <param name="component.package" value="SUNWasac"/>
        <param name="component.publish.home" value="${tools.publish.home}"/>
        <param name="publish.dir" value="${ri.home}"/>
        <param name="package.home" value="${package.home}"/>
    </antcall>
</target>

<target name="publish-SUNWascmn" 
        depends="publish-server"
        description="Package SUNWascmn, aka server runtime">
    <echo message="Packaging SUNWascmn, aka server runtime..."/>

    <antcall target="publish-common">
        <param name="component.package" value="SUNWascmn"/>
        <param name="component.publish.home" value="${packager.publish.home}"/>
        <param name="publish.dir" value="${ri.home}"/>
        <param name="package.home" value="${package.home}"/>
    </antcall>
</target>

<target name="publish-SUNWasr" 
        depends="publish-asro"
        description="Package SUNWasr">
    <echo message="Packaging SUNWasr"/>

    <antcall target="publish-common">
        <param name="component.package" value="SUNWasr"/>
        <param name="component.publish.home" value="${asro.tmp.dir}"/>
        <param name="publish.dir" value="${ri.home}"/>
        <param name="package.home" value="${package.home}"/>
    </antcall>
</target>

<target name="publish-imq-ri" depends="publish-init" if="ri.build">
    <unzip src="${imq.publish.home}/imq.zip" dest="${ri.home}"/>
    <chmod perm="ugo+x">
        <fileset dir="${ri.home}/imq/bin"/>
    </chmod>
</target>

<!-- XXX FIXME. Package ANT as jasper needs it -->
<target name="publish-ant-ri" depends="publish-init">
    <copy todir="${ri.home}/lib/ant" overwrite="true">
        <fileset dir="${ant.publish.home}"
                 excludes="pkgs/**,bootstrap.**"/>
    </copy>
    <chmod perm="ugo+x">
        <fileset dir="${ri.home}/lib/ant/bin"/>
    </chmod>
</target>

<target name="publish-jmsra-ri" depends="publish-init, publish-imq-ri" if="ri.build">

    <!-- Explode the imqjms rars to applications directory -->
    <echo message="Publishing S1MQ Resource Adapter"/>

    <echo message="Exploding imqjmsra.rar"/>
        <unjar src="${ri.home}/imq/lib/imqjmsra.rar"
          dest="${aso.tmp.applications.dir}/jmsra/"/>

</target>

