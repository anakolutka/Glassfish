<?xml version="1.0" encoding="iso-8859-1"?>

<!--
 The contents of this file are subject to the terms 
 of the Common Development and Distribution License 
 (the "License").  You may not use this file except 
 in compliance with the License.
 
 You can obtain a copy of the license at 
 glassfish/bootstrap/legal/CDDLv1.0.txt or 
 https://glassfish.dev.java.net/public/CDDLv1.0.html. 
 See the License for the specific language governing 
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL 
 HEADER in each file and include the License file at 
 glassfish/bootstrap/legal/CDDLv1.0.txt.  If applicable, 
 add the following below this CDDL HEADER, with the 
 fields enclosed by brackets "[]" replaced with your 
 own identifying information: Portions Copyright [yyyy] 
 [name of copyright owner]
-->

<!-- ========== Initialize Properties =================================== -->

    <property file="./project.properties"/>
    <property name="repository" value="${maven.repo.local}"/>

    <target name="do.unzip">
        <echo message="Unzipping ${name}-${version}.jar to ${directory}"/>
        <unzip src="${repository}/${name}/jars/${name}-${version}.jar"
               dest="${directory}"/>
    </target>

    <target name="post-bootstrap" depends="unzip.jars, publish-native">

        <!-- Copy Licenses, Copyright documents -->
        <echo message="Publishing License, copyrights.."/>
        <copy todir="${glassfish.home}">
            <fileset dir="legal" includes="**"/>
        </copy>

        <!-- Copy Licenses, Copyright documents -->
        <echo message="Publishing setup.xml ..."/>
        <copy file="../glassfish/setup.xml" todir="${glassfish.home}"/>

        <!-- Explode the imqjms rars to applications directory -->
        <echo message="Publishing Sun MQ Resource Adapter..."/>
        <unjar src="${glassfish.home}/imq/lib/imqjmsra.rar" 
               dest="${glassfish.applications.home}/jmsra/"/>
    
        <!-- Remove imq/rpms from exploded imq -->
        <echo message="Deleting imq/rpms from Server Image..."/>
        <delete dir="${glassfish.home}/imq/rpms"/>
        <delete dir="${glassfish.home}/imq/pkgs"/>
        
        <!-- Fix the execute mode on executables -->
        <chmod perm="ugo+x">
            <fileset dir="${glassfish.home}/imq/bin" includes="**"/>
            <fileset dir="${glassfish.lib.home}" includes="appserv, appservLauncher"/>
        </chmod>

        <!-- explode pointbase.zip -->
        <echo message="Publishing Pointbase Binaries..."/>
        <unzip src="${glassfish.home}/pointbase.zip"
               dest="${glassfish.home}"/>
        <delete file="${glassfish.home}/pointbase.zip"/>

        <!-- explode derby.zip -->
        <echo message="Publishing Derby Binaries..."/>
        <unzip src="${glassfish.home}/derby.zip"
               dest="${glassfish.home}"/>
        <delete file="${glassfish.home}/derby.zip"/>

        <!-- Rename commons-logging-api.jar to commons-logging.jar -->
        <echo message="Publishing commons-logging.jar..."/>
        <move file="${commons-logging-api.jar}" tofile="${commons-logging.jar}"/>

        <!-- explode jaxr-ra.rar. note that jaxr-ra.jar is in appserv-rt.jar -->
        <echo message="Publishing JAXR Resource Adapter..."/>
        <delete dir="${glassfish.home}/lib/install/applications/jaxr-ra"/>
        <mkdir dir="${glassfish.home}/lib/install/applications/jaxr-ra"/>
        <unjar src="${glassfish.home}/lib/jaxr-ra.rar" 
               dest="${glassfish.home}/lib/install/applications/jaxr-ra"/>
        <delete file="${glassfish.home}/lib/jaxr-ra.rar"/>

        <!-- Re-arrange jaxr-impl.jar -->
        <echo message="Rearranging jaxr-impl.jar..."/>
        <jar jarfile="${jaxr-impl.jar}" update="yes">
            <zipfileset src="${jaxb-api.jar}"
              excludes="META-INF/*.RSA META-INF/*.SF META-INF/pack.*"/>
            <zipfileset src="${jaxb-impl.jar}"
              excludes="META-INF/*.RSA META-INF/*.SF META-INF/pack.*"/>
            <zipfileset src="${jaxb-libs.jar}"
              excludes="META-INF/*.RSA META-INF/*.SF META-INF/pack.*"/>
            <zipfileset src="${namespace.jar}"
              excludes="META-INF/*.RSA META-INF/*.SF META-INF/pack.*"/>
        </jar>
        <delete file="${jaxb-api.jar}"/>
        <delete file="${jaxb-impl.jar}"/>
        <delete file="${jaxb-libs.jar}"/>
        <delete file="${namespace.jar}"/>

        <!-- Initialize appserv-admin.jar -->
        <echo message="Initializing appserv-admin.jar..."/>
        <jar jarfile="${appserv-admin.jar}" manifest="appserv-admin.mf">
            <zipfileset src="${schema2beans.jar}"/>
            <zipfileset src="${jvm-monitor.jar}"/>
        </jar>
        <delete file="${schema2beans.jar}"/>
        <delete file="${jvm-monitor.jar}"/>

        <!-- Initialize appserv-rt.jar -->
        <!-- "duplicate" attribute has to be "preserve" such that
             the multiple copies of META-INF/LICENSE.txt can be
             ignored.

             All jar files will be removed after they are zipped into
             appserv-rt.jar, with the exception of:
             * commons-logging.jar
             * jaxr-ra.jar
          -->
        <echo message="Initializing appserv-rt.jar..."/>
        <jar jarfile="${appserv-rt.jar}" 
             manifest="appserv-rt.mf"
             update="yes"
             duplicate="preserve">
            <zipfileset src="${commons-beanutils.jar}"/>
            <zipfileset src="${commons-collections.jar}"/>
            <zipfileset src="${commons-digester.jar}"/>
            <zipfileset src="${commons-el.jar}"/>
            <zipfileset src="${commons-logging.jar}"/>
            <zipfileset src="${commons-modeler.jar}"/>
            <zipfileset src="${emmaj2ee.jar}"/>
            <zipfileset src="${jakarta-regexp.jar}"/>
            <zipfileset src="${jaxr-ra.jar}"/>
            <zipfileset src="${ldapbp.jar}"/>
            <zipfileset src="${omgapi.jar}"/>
            <zipfileset src="${optorbcomp.jar}"/>
            <zipfileset src="${peorb.jar}"/>
            <zipfileset src="${sasl.jar}"/>
            <zipfileset src="${wss-provider.jar}"/>
        </jar>
        <delete file="${commons-beanutils.jar}"/>
        <delete file="${commons-collections.jar}"/>
        <delete file="${commons-digester.jar}"/>
        <delete file="${commons-el.jar}"/>
        <delete file="${commons-modeler.jar}"/>
        <delete file="${emmaj2ee.jar}"/>
        <delete file="${jakarta-regexp.jar}"/>
        <delete file="${ldapbp.jar}"/>
        <delete file="${omgapi.jar}"/>
        <delete file="${optorbcomp.jar}"/>
        <delete file="${peorb.jar}"/>
        <delete file="${sasl.jar}"/>
        <delete file="${wss-provider.jar}"/>

        <!-- Initialize j2ee.jar -->
        <echo message="Initializing j2ee.jar..."/>
        <jar jarfile="${j2ee.jar}" manifest="j2ee-jar.mf">
            <zipfileset src="${jax-qname.jar}"/>
            <zipfileset src="${jaxr-api.jar}"/>
            <zipfileset src="${jaxrpc-api.jar}"/>
            <zipfileset src="${saaj-api.jar}"/>
        </jar>

        <!-- Adding jsr250-api.jar into j2ee.jar -->
        <echo message="Adding jsr250-api.jar into j2ee.jar..."/>
        <jar jarfile="${j2ee.jar}" update="yes" duplicate="fail">
            <zipfileset src="${jsr250-api.jar}"/>
        </jar>
        <delete file="${jsr250-api.jar}"/>

        <!-- Initialize appserv-cmp.jar -->
        <!-- Uncomment this when we fix the persistence build.
        <echo message="Initializing appserv-cmp.jar..."/>
        <jar jarfile="${appserv-cmp.jar}" manifest="appserv-cmp.mf">
            <zipfileset src="${dbschema.jar}"/>
        </jar>
        <delete file="${dbschema.jar}"/>
        -->

        <!-- Create appserv-jstl.jar -->
        <echo message="Assembling appserv-jstl.jar..."/>
        <delete file="${appserv-jstl.jar}"/>
        <jar jarfile="${appserv-jstl.jar}" duplicate="fail">
	    <zipfileset src="${jstl.jar}"/>
	    <zipfileset src="${standard.jar}"/>
        </jar>
        <delete file="${jstl.jar}"/>
        <delete file="${standard.jar}"/>

        <!-- Create jaxrpc-impl.jar -->
        <echo message="Assembling jaxrpc-impl.jar"/>
        <jar jarfile="${jaxrpc-impl.jar}" update="yes" duplicate="fail">
	    <zipfileset src="${jaxrpc-spi.jar}"/>
        </jar>
        <delete file="${jaxrpc-spi.jar}"/>

        <echo message="Setting up lockhart... XXX copy tld to adminGUI_war"/>
        <unzip src="${glassfish.home}/SUNWlkhrt.zip"
               dest="${glassfish.home}"/>
        <copy todir="${glassfish.admingui.home}/WEB-INF/lib"
              file="${glassfish.applications.home}/com_sun_web_ui/WEB-INF/tld/com_iplanet_jato/jato.tld"/>
        <copy todir="${glassfish.admingui.home}/WEB-INF/lib"
              file="${glassfish.applications.home}/com_sun_web_ui/WEB-INF/tld/com_sun_web_ui/cc.tld"/>
        <delete file="${glassfish.home}/SUNWlkhrt.zip"/>
        <delete file="${glassfish.home}/SUNWlkhrt-ee.zip"/>

        <!-- echo message="Setting up nss-util... copy certutil,pk12util to lib/upgrade "/>
        <mkdir dir="${glassfish.lib.home}/upgrade"/>
        <copy todir="${glassfish.lib.home}/upgrade">
            <fileset dir="${glassfish.lib.home}" includes="certutil, pk12util"/>
        </copy --> 

        <!-- Fix the execute mode on executables for nss-util -->
        <chmod perm="ugo+x">
            <fileset dir="${glassfish.lib.home}" includes="certutil, pk12util"/>
            <fileset dir="${glassfish.lib.home}/upgrade" includes="certutil, pk12util"/>
        </chmod>

        <!-- expand out LauncherBootstrap.class (used by windows icons) -->
        <unzip src="${commons-launcher.jar}" dest="${glassfish.home}/lib">
        <patternset>
            <include name="LauncherBootstrap.class"/>
        </patternset>
        </unzip>

        <echo message="Setting up Samples... SAMPLES: Explode samples.zip to ${glassfish.samples.home}"/>
        <unzip src="${glassfish.samples.home}/samples.zip"
               dest="${glassfish.samples.home}"/>
        <echo message="Copy samples.jar to ${glassfish.applications.home}"/>
        <copy todir="${glassfish.applications.home}"
              file="${glassfish.samples.home}/predeployed/pe80/samples.jar"/>
        <delete file="${glassfish.samples.home}/samples.zip"/>

        <echo message="Copying wss-client-config.xml and wss-server-config.xml into lib/install/templates"/>
        <mkdir dir="${glassfish.home}/lib/install/templates"/>
        <move file="${glassfish.home}/lib/wss-client-config.xml"
             tofile="${glassfish.home}/lib/appclient/wss-client-config.xml"/>
        <move file="${glassfish.home}/lib/wss-server-config.xml"
             tofile="${glassfish.home}/lib/install/templates/wss-server-config.xml"/>

        <delete dir="${glassfish.home}/lib/lib"/>
        <delete dir="${glassfish.home}/lib/modules"/>
    </target>

    <target name="unzip.jars">
        <antcall target="do.unzip">
            <param name="name" value="${glassfish.ant.name}"/> 
            <param name="version" value="${glassfish.ant.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxb.name}"/> 
            <param name="version" value="${glassfish.jaxb.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_beanutils.name}"/>
            <param name="version" value="${glassfish.commons_beanutils.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_collections.name}"/>
            <param name="version" value="${glassfish.commons_collections.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_digester.name}"/>
            <param name="version" value="${glassfish.commons_digester.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_el.name}"/>
            <param name="version" value="${glassfish.commons_el.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_launcher.name}"/>
            <param name="version" value="${glassfish.commons_launcher.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_logging.name}"/>
            <param name="version" value="${glassfish.commons_logging.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>
        
        <antcall target="do.unzip">
            <param name="name" value="${glassfish.commons_modeler.name}"/>
            <param name="version" value="${glassfish.commons_modeler.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jakarta_regexp.name}"/>
            <param name="version" value="${glassfish.jakarta_regexp.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jakarta_struts.name}"/>
            <param name="version" value="${glassfish.jakarta_struts.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jakarta_taglibs.name}"/>
            <param name="version" value="${glassfish.jakarta_taglibs.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.javahelp.name}"/>
            <param name="version" value="${glassfish.javahelp.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxb.name}"/>
            <param name="version" value="${glassfish.jaxb.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jsf.name}"/>
            <param name="version" value="${glassfish.jsf.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.netbeans.name}"/>
            <param name="version" value="${glassfish.netbeans.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.relaxngDatatype.name}"/>
            <param name="version" value="${glassfish.relaxngDatatype.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.studio.name}"/>
            <param name="version" value="${glassfish.studio.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.xsdlib.name}"/>
            <param name="version" value="${glassfish.xsdlib.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxrpc_api.name}"/>
            <param name="version" value="${glassfish.jaxrpc_api.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxrpc_ri.name}"/>
            <param name="version" value="${glassfish.jaxrpc_ri.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.saaj_api.name}"/>
            <param name="version" value="${glassfish.saaj_api.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.saaj_ri.name}"/>
            <param name="version" value="${glassfish.saaj_ri.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxr_api.name}"/>
            <param name="version" value="${glassfish.jaxr_api.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxr_ri.name}"/>
            <param name="version" value="${glassfish.jaxr_ri.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxr_ra.name}"/>
            <param name="version" value="${glassfish.jaxr_ra.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.rjmx_ri.name}"/>
            <param name="version" value="${glassfish.rjmx_ri.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.peorb.name}"/>
            <param name="version" value="${glassfish.peorb.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jaxrpc_sec.name}"/>
            <param name="version" value="${glassfish.jaxrpc_sec.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.emma.name}"/>
            <param name="version" value="${glassfish.emma.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.ldapbp.name}"/>
            <param name="version" value="${glassfish.ldapbp.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.lockhart.name}"/>
            <param name="version" value="${glassfish.lockhart.version}"/>
            <param name="directory" value="${glassfish.home}"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.sasl.name}"/>
            <param name="version" value="${glassfish.sasl.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.imq.name}"/>
            <param name="version" value="${glassfish.imq.version}"/>
            <param name="directory" value="${glassfish.home}"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.pointbase.name}"/>
            <param name="version" value="${glassfish.pointbase.version}"/>
            <param name="directory" value="${glassfish.home}"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.derby.name}"/>
            <param name="version" value="${glassfish.derby.version}"/>
            <param name="directory" value="${glassfish.home}"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jvm_monitor.name}"/>
            <param name="version" value="${glassfish.jvm_monitor.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.appserv_native.name}"/>
            <param name="version" value="${glassfish.appserv_native.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.nss_util.name}"/>
            <param name="version" value="${glassfish.nss_util.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.NSsecurity.name}"/>
            <param name="version" value="${glassfish.NSsecurity.version}"/>
            <param name="directory" value="${glassfish.home}/lib/upgrade"/>
        </antcall> 

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.samples.name}"/>
            <param name="version" value="${glassfish.samples.version}"/>
            <param name="directory" value="${glassfish.samples.home}"/>
        </antcall> 

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.genericra.name}"/>
            <param name="version" value="${glassfish.genericra.version}"/>
            <param name="directory" value="${glassfish.home}/lib/adapters/genericra"/>
        </antcall> 

        <antcall target="do.unzip">
            <param name="name" value="${glassfish.jsr250_api.name}"/>
            <param name="version" value="${glassfish.jsr250_api.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall> 

        <!-- XXX persistence should be a source dependency once we fix the 
             persistence build
        -->
        <antcall target="do.unzip">
            <param name="name" value="${glassfish.persistence.name}"/>
            <param name="version" value="${glassfish.persistence.version}"/>
            <param name="directory" value="${glassfish.home}/lib"/>
        </antcall>

    </target>

    <target name="publish-native" depends="init, copy-unix, copy-windows,copy-darwin"/>

    <target name="copy-unix" if="unix">
        <echo message="Copying modutil unix native file"/>
            <move file="${glassfish.home}/lib/upgrade/modutil"
             tofile="${glassfish.home}/lib/modutil"/>
        <chmod file="${glassfish.home}/lib/modutil" perm="755"/>
    </target>

    <target name="copy-darwin" if="darwin">
        <echo message="Copying modutil darwin native file"/>
            <move file="${glassfish.home}/lib/upgrade/modutil"
             tofile="${glassfish.home}/lib/modutil"/>
        <chmod file="${glassfish.home}/lib/modutil" perm="755"/>
    </target>

    <target name="copy-windows" if="windows">
        <echo message="Copying modutil, cliutil.dll windows native file"/>

        <move file="${glassfish.home}/lib/upgrade/modutil.exe"
             tofile="${glassfish.home}/lib/modutil.exe"/>
        <chmod file="${glassfish.home}/lib/modutil.exe" perm="755"/>

        <!-- Move cliutil.dll to bin folder-->
        <move file="${glassfish.home}/lib/cliutil.dll" tofile="${glassfish.home}/bin/cliutil.dll"/>
        <chmod file="${glassfish.home}/bin/cliutil.dll" perm="755"/>
    </target>

    
    <!-- init. Initialization involves creating publishing directories and
         OS specific targets. -->
    <target name="init" description="appserv-ee initialization">
        <echo message="OS Initialization"/>
        <tstamp>
            <format property="start.time" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>
        <condition property="windows">
            <os family="windows" />
        </condition>
        <condition property="unix">
            <and>
              <os family="unix" />
              <not>
               <os name="Mac OS X"/>
              </not>
            </and>
        </condition>
        <condition property="solaris">
            <equals arg1="${os.name}" arg2="SunOS"/>
        </condition>
        <condition property="linux">
            <equals arg1="${os.name}" arg2="Linux"/>
        </condition>
        <condition property="darwin">
            <os name="Mac OS X"/>
        </condition>
    </target>

    <target name="build">
    <ant dir="../activation" target="all"/>
    <ant dir="../mail" target="all"/>
    <ant dir="../deployment-api" target="all"/>
    <ant dir="../transaction-api" target="all"/>
    <ant dir="../servlet-api" target="all"/>
    <ant dir="../ejb-api" target="all"/>
    <ant dir="../connector-api" target="all"/>
    <ant dir="../management-api" target="all"/>
    <ant dir="../jms-api" target="all"/>
    <ant dir="../common-util" target="all"/>
    <ant dir="../annotation-framework" target="all"/>
    <ant dir="../appserv-commons" target="all"/>
    <ant dir="../jmx-remote" target="all"/>
    <ant dir="../admin-core" target="all"/>
    <ant dir="../jts" target="all"/>
    <ant dir="../pwc-commons" target="all"/>
    <ant dir="../appserv-webtier" target="all"/>
    <ant dir="../webtier-extensions" target="all"/>
    <ant dir="../jacc-api" target="all"/>
    <ant dir="../jacc-provider" target="all"/>
    <ant dir="../container-auth" target="all"/>
    <ant dir="../appserv-core" target="all"/>
    <ant dir="../appserv-docs" target="all"/>
    <ant dir="../admin" target="all"/>
    <ant dir="../admin-cli" target="all"/>
    <ant dir="../jdbcra" target="all"/>
    <ant dir="../tools" target="all"/>
    <!-- <ant dir="../persistence" target="all"/> -->
    <ant dir="../avk" target="all"/>
    <ant dir="../admin-gui" target="all"/>
    </target>

    <target name="clobber">
    <delete dir="../publish"/>
    <ant dir="../activation" target="clean"/>
    <ant dir="../mail" target="clean"/>
    <ant dir="../deployment-api" target="clean"/>
    <ant dir="../transaction-api" target="clean"/>
    <ant dir="../servlet-api" target="clean"/>
    <ant dir="../ejb-api" target="clean"/>
    <ant dir="../connector-api" target="clean"/>
    <ant dir="../management-api" target="clean"/>
    <ant dir="../jms-api" target="clean"/>
    <ant dir="../common-util" target="clean"/>
    <ant dir="../annotation-framework" target="clean"/>
    <ant dir="../appserv-commons" target="clean"/>
    <ant dir="../jmx-remote" target="clean"/>
    <ant dir="../admin-core" target="clean"/>
    <ant dir="../jts" target="clean"/>
    <ant dir="../pwc-commons" target="clean"/>
    <ant dir="../appserv-webtier" target="clean"/>
    <ant dir="../webtier-extensions" target="clean"/>
    <ant dir="../jacc-api" target="clean"/>
    <ant dir="../jacc-provider" target="clean"/>
    <ant dir="../container-auth" target="clean"/>
    <ant dir="../appserv-core" target="clean"/>
    <ant dir="../appserv-docs" target="clean"/>
    <ant dir="../admin" target="clean"/>
    <ant dir="../admin-cli" target="clean"/>
    <ant dir="../jdbcra" target="clean"/>
    <ant dir="../tools" target="clean"/>
    <!-- <ant dir="../persistence" target="clean"/> -->
    <ant dir="../avk" target="clean"/>
    <ant dir="../admin-gui" target="clean"/>
    </target>
