<?xml version="1.0"?>

<!--
 Copyright 2003 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->


<!-- 
  =======================================================================
    JAX-RPC-API build file                                                      
  ======================================================================= 
-->
<project name="JAX-RPC-API" default="main" basedir=".">

  <property name="Name" value="jaxrpc-api"/>
  <property name="name" value="jaxrpc-api"/>
  <property name="jaxqname" value="jax-qname"/>
  <property name="version" value="1.0"/>

<!-- ************ Where are we building into? ***************************** -->

  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}"/>
  <property name="lib.dir" value="lib"/>
  
  <property name="manifest" value="etc/manifest"/>

  <property name="build.dir" value="build"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.javadocs" value="${build.dir}/javadocs"/>

  <!-- Placeholder for the wspack destination directory  -->
  <property name="wspack.home" value="${basedir}/dist-wspack"/>

<!-- ************ Per user local properties ******************************* -->

  <property file="${user.home}/build.properties"/>   <!-- User local        -->
  <property file="build.properties"/>                <!-- Component local   -->
  <property file="../build.properties"/>             <!-- Commons local     -->

<!-- ************ Dependencies **** *************************************** -->

  <!-- The locations of necessary jar files -->
  <property name="javamail.jar" value="${lib.dir}/mail.jar"/>
  <property name="jaf.jar" value="${lib.dir}/activation.jar"/>
  <property name="jaxp.jar" value="${lib.dir}/jaxp.jar"/>
  <property name="xalan.jar" value="${lib.dir}/xalan.jar"/>
  <property name="crimson.jar" value="${lib.dir}/crimson.jar"/>
  <property name="jaxm.jar" value="${lib.dir}/jaxm.jar"/>
  <property name="servlet.jar" value="${lib.dir}/servlet.jar"/>

<!-- ************ Compiler Defaults *************************************** -->

  <property name="debug" value="true" />
  <property name="deprecation" value="false" />
  <property name="optimize" value="false" />

  <!-- Construct compile classpath -->
  <path id="classpath">
    <pathelement location="${build.dir}/classes"/>
    <pathelement location="${javamail.jar}"/>
    <pathelement location="${jaf.jar}"/>
    <pathelement location="${jaxp.jar}"/>
    <pathelement location="${xalan.jar}"/>
    <pathelement location="${crimson.jar}"/>
    <pathelement location="${jaxm.jar}"/>
    <pathelement location="${servlet.jar}"/>
  </path>

  <!-- 
       ===================================================================
         Prepare the build              
       =================================================================== 
  -->
  <target name="prepare">
    <tstamp />
  </target>

  <!-- 
       ===================================================================
         Build the code           
       =================================================================== 
  -->
  <target name="build" depends="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes}"/>
    <mkdir dir="${build.lib}"/>
    
    <javac srcdir="${java.dir}"
           destdir="${build.classes}"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}" >
      <classpath refid="classpath" />
    </javac>
    
    <copy todir="${build.classes}">
      <fileset dir="${java.dir}">
        <include name="**/*.properties" />
      </fileset>
    </copy>

    <filter token="VERSION" value="${version}" />
    <filter token="DATE" value="${TODAY}" />
    <filter token="TIME" value="${TSTAMP}" />
    <copy    todir="${build.classes}" 
             overwrite="true"
             filtering="on">
      <fileset dir="${java.dir}">
        <include name="**/version.txt" />
        <include name="**/defaultManifest.mf" />
      </fileset>
    </copy>

  </target>
  
  <!-- 
       =================================================================== 
         Create the jars
       =================================================================== 
  -->
  <target name="jars" depends="build, qnamejar">

    <jar jarfile="${build.lib}/${name}.jar" 
         basedir="${build.classes}" 
         excludes="javax/xml/namespace/**"	
         manifest="${manifest}">
    </jar>

  </target>

  <!-- 
       =================================================================== 
         Create the jax-qname.jar
       =================================================================== 
  -->
  <target name="qnamejar" depends="build">
    <jar jarfile="${build.lib}/${jaxqname}.jar" 
         basedir="${build.classes}" 
	 includes="javax/xml/namespace/*.class"
         manifest="${manifest}">
    </jar>
  </target>

  <!-- 
       =================================================================== 
         Java Web Services Developer Pack integration
       =================================================================== 
  -->
  <target name="wspack" depends="jars">
    <mkdir dir="${wspack.home}"/>
    <mkdir dir="${wspack.home}/lib"/>

    <copy todir="${wspack.home}/lib">
      <fileset dir="${build.lib}"
          includes="${name}.jar, ${jaxqname}.jar"/>
    </copy>
  </target>

  <!--
       ===================================================================
         Clean up build and distribution directories
       ===================================================================
  -->
  <target name="clean">
    <delete dir="${build.dir}" />
    <delete> 
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target> 

  <!--
       ===================================================================
         Clean everything
       ===================================================================
  -->
  <target name="allclean" depends="clean">
  </target> 

  <!-- 
       ===================================================================
         Create the API documentation                             
       =================================================================== 
  -->
  
  <target name="javadoc_check">
    <uptodate property="javadoc.notrequired" targetfile="${build.javadocs}/packages.html" >
        <srcfiles dir= "${java.dir}" includes="**/*.java"/>
    </uptodate>
  </target>

  <target name="javadocs" depends="prepare, javadoc_check, main" 
          unless="javadoc.notrequired"
          description="Creates the API documentation">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="javax.*"
             sourcepath="${java.dir}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             windowtitle="${Name} API"
             doctitle="${Name}"
             bottom="Copyright &#169; 2001 Sun Microsystems, Inc. All Rights Reserved.">
      <classpath refid="classpath" />
    </javadoc>
  </target>
  
  <!-- 
       =================================================================== 
         Main target
       =================================================================== 
  -->
  <target name="main" depends="jars, qnamejar"/>

</project>
