<!DOCTYPE REFENTRY PUBLIC "-//Sun Microsystems//DTD DocBook V3.0-Based SolBook Subset V2.0//EN" [
<!--ArborText, Inc., 1988-1999, v.4002-->
<!ENTITY metainfo SYSTEM "metainfo.sgm">
<!ENTITY attr-tt "ATTRIBUTES">
<!ENTITY opts-tt "OPTIONS">
<!ENTITY options-common SYSTEM "options-common.sgm">
<!ENTITY synopsis-common SYSTEM "synopsis-common.sgm">
<!ENTITY Date "22 Dec 2004">
<!ENTITY SectDesc "User Commands">
<!ENTITY Software "J2EE SDK 1.4">
<!ENTITY arch "generic">
<!ENTITY copyright "Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved">
<!ENTITY % commonents SYSTEM "smancommon.ent">
%commonents;
<!ENTITY % booktitles SYSTEM "booktitles.ent">
%booktitles;
<!ENTITY Dash "&ndash;">
<!ENTITY ERROR-CODES "ERROR CODES">
<!ENTITY sjsas "Sun Java System Application Server">
]>
<?Pub UDT _bookmark _target>
<?Pub Inc>
<refentry id="create-service-1">
<refmeta><refentrytitle>create-service</refentrytitle><manvolnum>1</manvolnum>&metainfo;
<?Pub Caret></refmeta>
<refnamediv><indexterm><primary sortas="create-transformation-rule">create-service&mdash;
configures the starting of a DAS or node agent on an unattended boot. </primary>
</indexterm><indexterm><primary sortas="configures the starting of a DAS or node agent on an unattended boot">
configures the starting of a DAS or node agent on an unattended boot&mdash;create
service</primary></indexterm><refname>create-service</refname><refpurpose>
 configures the starting of a DAS or node agent on an unattended boot.</refpurpose>
</refnamediv>
<refsynopsisdiv><title>&synp-tt;</title>
<cmdsynopsis><command>create-service</command><arg choice="plain">&Dash;&Dash;passwordfile <replaceable>
passwordfile</replaceable></arg><arg choice="opt">&Dash;&Dash;name <replaceable>
servicename</replaceable></arg><arg choice="opt">&Dash;&Dash;type <replaceable>
das | nodeagent</replaceable></arg><arg choice="opt">&Dash;&Dash;serviceproperties <replaceable>
serviceproperties</replaceable></arg><arg choice="plain"><replaceable>domain-or-node-agent-configuration-directory
</replaceable></arg>
</cmdsynopsis></refsynopsisdiv>
<refsect1><title>&desc-tt;</title>
<para>Configures the starting of a DAS or node agent on an unattended boot.
 On Solaris 10, this command uses the Service Management Facility (SMF). This
is a local command. This command must be run as the OS-level user with superuser
privileges. For AS 9.0, this is available only for Solaris 10. This command
creates the service and the user has to start, enable, disable, delete, or
stop the service. The DAS/node-agent configuration must be stored on a folder
to which the super-user has access. The configuration cannot be stored on
a network file system. This command creates the service such that it is controlled
by the OS-level user, who owns the folder where the configuration of the DAS
or node agent resides. </para>
<para>To run this command, you must have <literal>solaris.smf.*</literal>
authorization. See the <command>useradd</command> and <command>usermod</command>
manpages to find out how to set the authorizations. It is also essential for
the users to have write permission in the directory tree: <literal>/var/svc/manifest/application/SUNWappserver
</literal>. Usually, the super-user has both these permissions. If one wishes
to run these commands as non-root user, then the system administrator must
be contacted so that the relevant authorizations are granted.  </para>
<para>You need to also ensure that:<itemizedlist>
<listitem><para>Solaris 10 administration commands such as <command>svccfg,
svcs</command>, and <command>auths</command> are available in the PATH, so
that these commands can be executed. A simple test to do so is to issue the
command, <command>which svccfg</command> on a bash shell.</para></listitem>
<listitem><para>You should have write permission for the path, <literal>/var/svc/manifest/application
</literal>.</para></listitem>
</itemizedlist></para>
</refsect1>
<refsect1><title>OPTIONS</title>
<variablelist termlength="medium">
<varlistentry><term><option role="nodash">&Dash;&Dash;passwordfile</option></term>
<listitem><para>The <option role="nodash">&Dash;&Dash;passwordfile</option>
option specifies the name of a file containing the password entries in a specified
format. The entry for the password  must have the AS_ADMIN_ prefix followed
by the password name in capital letters. For example, to specify the domain
administration server password, use an entry with the following format: <command>
AS_ADMIN_PASSWORD</command>=<replaceable>password</replaceable>, where <replaceable>
password</replaceable> is the actual administrator password. Other passwords
that can be specified include AS_ADMIN_MAPPEDPASSWORD, AS_ADMIN_USERPASSWORD,
AS_ADMIN_MQPASSWORD, and so on.</para>
</listitem></varlistentry>
<varlistentry><term><option role="nodash">&Dash;&Dash;name</option> </term>
<listitem><para> Indicates the name of the service and overrides the default,
if present. </para>
</listitem></varlistentry>
<varlistentry><term><option role="nodash">&Dash;&Dash;type</option> </term>
<listitem><para> Specifies whether the service pertains to DAS or node agent.
Valid values are<literal> das</literal> and <literal>node-agent</literal>
and the default value is <literal>das</literal>, indicating that the user's
domain will be created as a service by default.</para>
</listitem></varlistentry>
<varlistentry><term><option role="nodash">&Dash;&Dash;serviceproperties</option> 
</term><listitem><para> Specifies a colon(:)-separated list of various properties
that are specific to the service. For Solaris 10, if you specify <literal>
net_privaddr</literal>, the service's processes will be able to bind to the
privileged ports (&lt;1024) on the platform. You can bind to ports&lt; 1024
only if the owner of the service is super-user, this is not allowed. If you
specify <literal>startinstances=true/false</literal>, when the type is node-agent,
all the instances are started when the node-agent starts up.</para>
</listitem></varlistentry>
</variablelist></refsect1>
<refsect1><title>OPERANDS</title>
<variablelist termlength="medium">
<varlistentry><term><replaceable>domain-dir or node-agent-dir</replaceable></term>
<listitem><para> The absolute path of directory on disk that contains the
configuration of the domain or node agent. For example, if your domain resides
at /var/SUNWappserver/appserver/domains/domain1, specify this absolute path. 
</para>
</listitem></varlistentry>
</variablelist></refsect1>
<refsect1><title>EXIT STATUS</title>
<variablelist termlength="medium">
<varlistentry><term>0</term><listitem><para>command executed successfully
</para>
</listitem></varlistentry>
<varlistentry><term>1</term><listitem><para>error in executing the command
</para>
</listitem></varlistentry>
</variablelist></refsect1>
</refentry>
<?Pub *0000006841>
