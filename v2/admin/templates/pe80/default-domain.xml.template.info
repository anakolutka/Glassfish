This file is only for developers' aid and should not be built/published.
It contains the tokens and values they should be replaced with.
Note that no token can be broken across newline characters -- e.g.
%%%A_TOKEN
%%%
can't be replaced for A_TOKEN.

Related Template: default-domain.xml.template

1. What configuration this template creates:
One Domain with:
 - one config model with default name and type.
 - one server element that references the above config model. 
 - assumes a local instance of JMS provider.
 - default security-service auth-realm is "file" and jacc-provider is the default one.
 - one http-listener for server and one for administration.
 - admin-app already deployed as a "system-admin" application.
 - two virtual servers -- one to host adminapp and one to host all user applications.

2. Following are the tokens (listed alphabetically):

Token 					Description
CONFIG_MODEL_NAME	The configuration name that should be applied by default.
CONFIG_MODEL_TYPE	The type of configuration (e.g. ultra10) to be applied by default.
DEFAULT_DOC_ROOT	Default DocumentRoot of the web server.
FILE_PREFIX		Either '/' or empty depending upon the OS - dtd location specification.
HOST_NAME		Host name of the machine where the domain is created.
HTTP_PORT		Port of the default http-listener.
IMQ_BIN			Absolute location where S1MQ binaries live.
IMQ_LIB			Absolute location where S1MQ jars live.
INSTALL_CONFIG_ROOT	Absolute location where domains.bin lives -- may be temporary (03/05/03).
INSTALL_HOME		Absolute location where product is installed.
INSTANCE_ROOT		Absolute path to the installation where instance configuration is stored.
ORB_LISTENER_PORT	Port on which the iiop requests are listened to.
JAVA_HOME		Absolute location where JDK(not JRE) is installed.
JAVA_SEP		Path separator character (e.g. ':' on Solaris).
JMS_PROVIDER_ID		Identifier for JMS Provider instance.
JMS_PROVIDER_PASSWORD	Password for JMS Provider instance.
JMS_PROVIDER_PORT	Port for JMS Provider instance.
JMS_PROVIDER_USERID	Userid for JMS Provider instance.
SERVER_ID		Name of the server that is created.
WEBSERVICES_LIB		Absolute location where web-services related jars live.

3. What should be done after any change to template:
 - Do not add any extraneous characters/data to the template. Note that template generates the configuration that the world looks at.
 - It has been a policy (that is followed :) to include "default" attribute values (though they are present in dtd) in template thus generating xml that has them.
 - Make sure that the generated xml is actually valid. 
   - doing this will ONLY enhance your confidence that token-replacement is alright. One should do an end-to-end test to make sure that stuff works for installation etc.

4. The purpose of this template is now manifold. Since the same template is used as a base
   template for the EE product, we have tokenized all the paths and they have been made
   relative now. Note that the server-classpath is really speaking useless for any java-config
   element in this dtd, because of the launcher's property of including "install-dir/lib/*.jar".

5. Around June 2004, a change was made to separate the security realm of administrative
   users from that of the other J2EE users. The administrative user realm is called
   "admin-realm" and the keyfile is called "admin-keyfile".

6. The default domain.xml for both PE and EE now contain a configured JSR 160 JMX Connector - its name is "system".

7. The TimerPool data-source is now made "system-admin" to not copy onto the new server instance.

8. Switching to DTD: sun-domain_1_3.dtd on 29 Oct 2006.
$Author: dpatil $
