# Language ja-JP translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-05-01T13:53:43\n"
"PO-Revision-Date: 2009-06-04 00:47+0900\n"
"Last-Translator: Daisuke Sano <d-sano@nri.co.jp>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Scopes and contexts"
msgstr "スコープとコンテキスト"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"So far, we&#39;ve seen a few examples of <emphasis>scope type annotations</"
"emphasis>. The scope of a bean determines the lifecycle of instances of the "
"bean. The scope also determines which clients refer to which instances of "
"the bean. According to the CDI specification, a scope determines:"
msgstr ""
"これまでも<emphasis>スコープタイプアノテーション</emphasis>に関するいくつかの"
"例を見てきました。Web Beanのスコープは、Web Beanインスタンスのライフサイクル"
"を定めるものです。また、どのクライアントがどのWeb Beanインスタンスを参照する"
"かを定めるものでもあります。Web Beansの仕様では、スコープは以下のことを定めま"
"す。"

#. Tag: para
#, fuzzy, no-c-format
msgid "When a new instance of any bean with that scope is created"
msgstr "そのスコープを持ったWeb Beanインスタンスがいつ生成されるか"

#. Tag: para
#, fuzzy, no-c-format
msgid "When an existing instance of any bean with that scope is destroyed"
msgstr "そのスコープを持ったWeb Beanインスタンスがいつ破棄されるか"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Which injected references refer to any instance of a bean with that scope"
msgstr "注入された参照が、そのスコープを持ったどのWeb Beanインスタンスを指すか"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For example, if we have a session-scoped bean, <literal>CurrentUser</"
"literal>, all beans that are called in the context of the same "
"<literal>HttpSession</literal> will see the same instance of "
"<literal>CurrentUser</literal>. This instance will be automatically created "
"the first time a <literal>CurrentUser</literal> is needed in that session, "
"and automatically destroyed when the session ends."
msgstr ""
"例えば、セッションスコープを持ったWeb Beanである<literal>CurrentUser</"
"literal>があった場合、同じHttpセッションのコンテキスト内で呼び出されるすべて"
"のWeb Beanは、<literal>CurrentUser</literal>の同じインスタンスを参照すること"
"になります。このインスタンスは、そのセッションで最初に<literal>CurrentUser</"
"literal>が必要となった際に自動的に生成され、セッションが終了した際に自動的に"
"破棄されます。"

#. Tag: para
#, no-c-format
msgid ""
"JPA entities aren&#39;t a great fit for this model. Entities have their "
"whole own lifecycle and identity model which just doesn&#39;t map naturally "
"to the model used in CDI. Therefore, we recommend against treating entities "
"as CDI beans. You&#39;re certainly going to run into problems if you try to "
"give an entity a scope other than the default scope <literal>@Dependent</"
"literal>. The client proxy will get in the way if you try to pass an "
"injected instance to the JPA <literal>EntityManager</literal>."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Scope types"
msgstr "スコープタイプ"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"CDI features an <emphasis>extensible context model</emphasis>. It&#39;s "
"possible to define new scopes by creating a new scope type annotation:"
msgstr ""
"Web Beansでは、<emphasis>拡張コンテキストモデル</emphasis>という特徴をもって"
"おり、新たなスコープタイプアノテーションを作成することによって、新たなスコー"
"プを定義することが可能になっています。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Of course, that&#39;s the easy part of the job. For this scope type to be "
"useful, we will also need to define a <literal>Context</literal> object that "
"implements the scope! Implementing a <literal>Context</literal> is usually a "
"very technical task, intended for framework development only. You can expect "
"an implementation of the business scope, for instance, in a future version "
"of Seam."
msgstr ""
"もちろんこれは、新たなスコープを定義する作業の内のごく簡単な一部分であり、ス"
"コープタイプを使うためには、さらにそのスコープを実装するコンテキストオブジェ"
"クトを定義する必要があります。コンテキストを実装するのは通常とても技術のいる"
"作業であり、フレームワークを開発する目的でのみ行われます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"We can apply a scope type annotation to a bean implementation class to "
"specify the scope of the bean:"
msgstr ""
"Web Beanのスコープを指定するために、Web Beanの実装クラスにスコープタイプアノ"
"テーションを適用することができます。"

#. Tag: para
#, fuzzy, no-c-format
msgid "Usually, you&#39;ll use one of CDI&#39;s built-in scopes."
msgstr "通常、Web Beansの組み込みスコープの中の一つを使います。"

#. Tag: title
#, no-c-format
msgid "Built-in scopes"
msgstr "組み込みスコープ"

#. Tag: para
#, fuzzy, no-c-format
msgid "CDI defines four built-in scopes:"
msgstr "Web Beansは四つの組み込みスコープを持ちます。"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>@RequestScoped</literal>"
msgstr "<literal>@New</literal>アノテーション"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>@SessionScoped</literal>"
msgstr "<literal>@New</literal>アノテーション"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>@ApplicationScoped</literal>"
msgstr "@ApplicationScoped"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>@ConversationScoped</literal>"
msgstr "@ConversationScoped"

#. Tag: para
#, fuzzy, no-c-format
msgid "For a web application that uses CDI:"
msgstr "Web Beansを使用するWebアプリケーションでは、"

#. Tag: para
#, no-c-format
msgid ""
"any servlet request has access to active request, session and application "
"scopes, and, additionally"
msgstr ""
"すべてのサーブレットリクエストはアクティブなリクエストスコープ、セッションス"
"コープ、アプリケーションスコープにアクセスし、さらに、"

#. Tag: para
#, no-c-format
msgid "any JSF request has access to an active conversation scope."
msgstr "すべてのJSFリクエストはアクティブな対話スコープにアクセスします。"

#. Tag: para
#, no-c-format
msgid ""
"A CDI extension can implement support for the conversation scope in other "
"web frameworks."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The request and application scopes are also active:"
msgstr ""
"また、以下のケースではリクエストスコープやアプリケーションスコープがアクティ"
"ブとなります。"

#. Tag: para
#, no-c-format
msgid "during invocations of EJB remote methods,"
msgstr "EJBのリモートメソッドが起動する際"

#. Tag: para
#, fuzzy, no-c-format
msgid "during invocations of EJB asynchronous methods,"
msgstr "EJBのリモートメソッドが起動する際"

#. Tag: para
#, no-c-format
msgid "during EJB timeouts,"
msgstr "EJBがタイムアウトになる際"

#. Tag: para
#, fuzzy, no-c-format
msgid "during message delivery to a message-driven bean,"
msgstr "メッセージドリブンビーンにメッセージが到着する際"

#. Tag: para
#, fuzzy, no-c-format
msgid "during message delivery to a <literal>MessageListener</literal>, and"
msgstr "メッセージドリブンビーンにメッセージが到着する際"

#. Tag: para
#, no-c-format
msgid "during web service invocations."
msgstr "Webサービスが起動する際"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If the application tries to invoke a bean with a scope that does not have an "
"active context, a <literal>ContextNotActiveException</literal> is thrown by "
"the container at runtime."
msgstr ""
"アプリケーションが、アクティブなコンテキストを持っていないスコープのWeb Bean"
"を起動しようとした場合、実行時にWeb Beanマネージャが"
"<literal>ContextNotActiveException</literal>を送出します。"

#. Tag: para
#, no-c-format
msgid ""
"Managed beans with scope <literal>@SessionScoped</literal> or "
"<literal>@ConversationScoped</literal> must be serializable, since the "
"container passivates the HTTP session from time to time."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Three of the four built-in scopes should be extremely familiar to every Java "
"EE developer, so let&#39;s not waste time discussing them here. One of the "
"scopes, however, is new."
msgstr ""
"四つの組み込みスコープの内の三つはJava EE開発者にとっては極めて身近なものであ"
"るはずですので、ここではそれらの議論を行う時間を省くことにします。しかしなが"
"ら、残りの一つは新たなスコープです。"

#. Tag: title
#, no-c-format
msgid "The conversation scope"
msgstr "対話スコープ"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The conversation scope is a bit like the traditional session scope in that "
"it holds state associated with a user of the system, and spans multiple "
"requests to the server. However, unlike the session scope, the conversation "
"scope:"
msgstr ""
"Web Beansの対話スコープは、システムユーザーに関連する状態を保持し、また、その"
"範囲がサーバへの複数のリクエストにまたがるという意味では、伝統的なセッション"
"スコープに少し似ているところがあります。しかしながら、以下の点でセッションス"
"コープとは異なります。"

#. Tag: para
#, no-c-format
msgid "is demarcated explicitly by the application, and"
msgstr "対話スコープの境界は、アプリケーションによって明示的に定義されます"

#. Tag: para
#, no-c-format
msgid ""
"holds state associated with a particular web browser tab in a JSF "
"application (browsers tend to share domain cookies, and hence the session "
"cookie, between tabs, so this is not the case for the session scope)."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"A conversation represents a task—a unit of work from the point of view of "
"the user. The conversation context holds state associated with what the user "
"is currently working on. If the user is doing multiple things at the same "
"time, there are multiple conversations."
msgstr ""
"一つの対話は、一つのタスク、ユーザー視点での作業の単位を表現します。対話コン"
"テキストは、ユーザーが今行っている作業に関連する状態を保持します。もし、ユー"
"ザーが複数の作業を同時に行っている場合は、対話も複数になります。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The conversation context is active during any JSF request. Most "
"conversations are destroyed at the end of the request. If a conversation "
"should hold state across multiple requests, it must be explicitly promoted "
"to a <emphasis>long-running conversation</emphasis>."
msgstr ""
"対話コンテキストは、どのようなJSFリクエストにおいても有効となりますが、ほとん"
"どの対話はリクエストの終了と同時に破棄されます。もし、対話が複数のリクエスト"
"にまたがって状態を保持しなければならない場合は、対話を明示的に<emphasis>長期"
"対話</emphasis>として導入する必要があります。"

#. Tag: title
#, no-c-format
msgid "Conversation demarcation"
msgstr "対話の境界"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"CDI provides a built-in bean for controlling the lifecycle of conversations "
"in a JSF application. This bean may be obtained by injection:"
msgstr ""
"Web Beansは、JSFアプリケーションにおける対話のライフサイクルを制御するための"
"組み込みWeb Beanを提供します。このWeb Beanは、注入によって取得することができ"
"ます。"

#. Tag: para
#, no-c-format
msgid ""
"To promote the conversation associated with the current request to a long-"
"running conversation, call the <literal>begin()</literal> method from "
"application code. To schedule the current long-running conversation context "
"for destruction at the end of the current request, call <literal>end()</"
"literal>."
msgstr ""
"現在のリクエストに関連する対話を、長期対話として導入するためには、アプリケー"
"ションのコード上で<literal>begin()</literal>メソッドを呼びます。現在の長期対"
"話を、現在のリクエスト終了時に破棄するためのスケジューリングを行うためには、"
"<literal>end()</literal>メソッドを呼びます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"In the following example, a conversation-scoped bean controls the "
"conversation with which it is associated:"
msgstr ""
"次の例では、対話スコープをもつWeb Beanが、自分自身に関連した対話を制御しま"
"す。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This bean is able to control its own lifecycle through use of the "
"<literal>Conversation</literal> API. But some other beans have a lifecycle "
"which depends completely upon another object."
msgstr ""
"このWeb Beanは、<literal>Conversation</literal> APIを通じて、自分自身のライフ"
"サイクルを制御することができます。しかし、そのライフサイクルが完全に他のオブ"
"ジェクトに依存するようなWeb Beanも存在します。"

#. Tag: title
#, no-c-format
msgid "Conversation propagation"
msgstr "対話の伝播"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The conversation context automatically propagates with any JSF faces request "
"(JSF form submission) or redirect. It does not automatically propagate with "
"non-faces requests, for example, navigation via a link."
msgstr ""
"対話コンテキストは、すべてのJSF facesリクエスト（JSFフォームのサブミット）に"
"ついて自動的に伝播されます。ハイパーリンクによる移動などのようなfacesでないリ"
"クエストについては自動的に伝播されません。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"We can force the conversation to propagate with a non-faces request by "
"including the unique identifier of the conversation as a request parameter. "
"The CDI specification reserves the request parameter named <literal>cid</"
"literal> for this use. The unique identifier of the conversation may be "
"obtained from the <literal>Conversation</literal> object, which has the EL "
"bean name <literal>conversation</literal>."
msgstr ""
"対話の一意な識別子をリクエストパラメタとして含めることによって、facesでないリ"
"クエストについても対話の伝播を強制させることができます。Web Beansの仕様では、"
"<literal>cid</literal>という名前のリクエストパラメタはこの目的のために予約さ"
"れています。対話の一意な識別子は、Web Beans名<literal>conversation</literal>"
"を持つ<literal>Conversation</literal>オブジェクトによって取得することができま"
"す。"

#. Tag: para
#, no-c-format
msgid "Therefore, the following link propagates the conversation:"
msgstr "ゆえに、次のリンクは対話を伝播します。"

#. Tag: para
#, no-c-format
msgid "It&#39;s probably better to use one of the link components in JSF 2:"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The conversation context propagates across redirects, making it very easy to "
"implement the common POST-then-redirect pattern, without resort to fragile "
"constructs such as a &#34;flash&#34; object. The container automatically "
"adds the conversation id to the redirect URL as a request parameter."
msgstr ""
"またWeb Beanマネージャは、対話が長期対話として導入されていないとしても、あら"
"ゆるリダイレクトをまたがって対話を伝播させる必要があります。これは、よくある"
"POST-then-redirectパターンの実装をとても簡単なものにし、Ruby on Railsの"
"\"flash\"オブジェクトのような貧弱なアーキテクチャに頼る必要がありません。この"
"ようなケースで、Web Beanマネージャは自動的にリダイレクトURLにリクエストパラメ"
"タを付加します。"

#. Tag: title
#, no-c-format
msgid "Conversation timeout"
msgstr "対話のタイムアウト"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The container is permitted to destroy a conversation and all state held in "
"its context at any time in order to conserve resources. A CDI implementation "
"will normally do this on the basis of some kind of timeout—though this is "
"not required by the specification. The timeout is the period of inactivity "
"before the conversation is destroyed (as opposed to the amount of time the "
"conversation is active)."
msgstr ""
"Web Beanマネージャは、対話とそこに保持されたすべての状態を、リソースを保つ目"
"的で破棄することを許されています。Web Beansの仕様で必須というわけではありませ"
"んが、Web Beanマネージャの通常の実装では、これをある種のタイムアウトに基づい"
"て行うようになっています。タイムアウトは、対話が破棄されるまでに使用されない"
"期間となります。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>Conversation</literal> object provides a method to set the "
"timeout. This is a hint to the container, which is free to ignore the "
"setting."
msgstr ""
"<literal>Conversation</literal>オブジェクトは、タイムアウトを設定するためのメ"
"ソッドを提供します。これはWeb Beanマネージャへのヒントにはなりますが、Web "
"Beanマネージャはこれを自由に無視することもできます。"

#. Tag: title
#, fuzzy, no-c-format
msgid "The singleton pseudo-scope"
msgstr "依存擬似スコープ"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"In addition to the four built-in scopes, CDI also supports two "
"<emphasis>pseudo-scopes</emphasis>. The first is the <emphasis>singleton "
"pseudo-scope</emphasis>, which we specify using the annotation "
"<literal>@Singleton</literal>."
msgstr ""
"四つの組み込みスコープに加えて、Web Beansはいわゆる<emphasis>依存擬似スコープ"
"</emphasis>という特徴を持っています。これは、明示的にスコープタイプが宣言され"
"ていないWeb Beanのデフォルトのスコープになります。"

#. Tag: para
#, no-c-format
msgid ""
"Unlike the other scopes, which belong to the package <literal>javax."
"enterprise.context</literal>, the <literal>@Singleton</literal> annotation "
"is defined in the package <literal>javax.inject</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"You can guess what &#34;singleton&#34; means here. It means a bean that is "
"instantiated once. Unfortunately, there&#39;s a little problem with this "
"pseudo-scope. Beans with scope <literal>@Singleton</literal> don&#39;t have "
"a proxy object. Clients hold a direct reference to the singleton instance. "
"So we need to consider the case of a client that can be serialized, for "
"example, any bean with scope <literal>@SessionScoped</literal> or "
"<literal>@ConversationScoped</literal>, any dependent object of a bean with "
"scope <literal>@SessionScoped</literal> or <literal>@ConversationScoped</"
"literal>, or any stateful session bean."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Now, if the singleton instance is a simple, immutable, serializable object "
"like a string, a number or a date, we probably don&#39;t mind too much if it "
"gets duplicated via serialization. However, that makes it no stop being a "
"true singleton, and we may as well have just declared it with the default "
"scope."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"There are several ways to ensure that the singleton bean remains a singleton "
"when its client gets serialized:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"have the singleton bean implement <literal>writeResolve()</literal> and "
"<literal>readReplace()</literal> (as defined by the Java serialization "
"specification),"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"make sure the client keeps only a transient reference to the singleton bean, "
"or"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"give the client a reference of type <literal>Instance&#60;X&#62;</literal> "
"where <literal>X</literal> is the bean type of the singleton bean."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"A fourth, better solution is to instead use <literal>@ApplicationScoped</"
"literal>, allowing the container to proxy the bean, and take care of "
"serialization problems automatically."
msgstr ""

#. Tag: title
#, no-c-format
msgid "The dependent pseudo-scope"
msgstr "依存擬似スコープ"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Finally, CDI features the so-called <emphasis>dependent pseudo-scope</"
"emphasis>. This is the default scope for a bean which does not explicitly "
"declare a scope type."
msgstr ""
"四つの組み込みスコープに加えて、Web Beansはいわゆる<emphasis>依存擬似スコープ"
"</emphasis>という特徴を持っています。これは、明示的にスコープタイプが宣言され"
"ていないWeb Beanのデフォルトのスコープになります。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For example, this bean has the scope type <literal>@Dependent</literal>:"
msgstr ""
"例えば、次のWeb Beanは<literal>@Dependent</literal>スコープタイプを持ちます。"

#. Tag: para
#, no-c-format
msgid ""
"An instance of a dependent bean is never shared between different clients or "
"different injection points. It is strictly a <emphasis>dependent object</"
"emphasis> of some other object. It is instantiated when the object it "
"belongs to is created, and destroyed when the object it belongs to is "
"destroyed."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"If a Unified EL expression refers to a dependent bean by EL name, an "
"instance of the bean is instantiated every time the expression is evaluated. "
"The instance is not reused during any other expression evaluation."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"If you need to access a bean directly by EL name in a JSF page, you probably "
"need to give it a scope other than <literal>@Dependent</literal>. Otherwise, "
"any value that gets set to the bean by a JSF input will be lost immediately. "
"That&#39;s why CDI features the <literal>@Model</literal> stereotype; it "
"lets you give a bean a name, and set its scope to <literal>@RequestScoped</"
"literal> in one stroke. If you need to access a bean that really "
"<emphasis>has</emphasis> to have the scope <literal>@Dependent</literal> "
"from a JSF page, inject it into a different bean, and expose it to EL via a "
"getter method."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Beans with scope <literal>@Dependent</literal> don&#39;t need a proxy "
"object. The client holds a direct reference to its instance."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"CDI makes it easy to obtain a dependent instance of a bean, even if the bean "
"is already declared as a bean with some other scope type."
msgstr ""
"Web Beansによって、JavaクラスやEJBが既にある異なるスコープタイプとともに宣言"
"されている場合でも、それに依存したオブジェクトを取得することが簡単になりま"
"す。"

#. Tag: title
#, fuzzy, no-c-format
msgid "The <literal>@New</literal> qualifier"
msgstr "<literal>@New</literal>アノテーション"

#. Tag: para
#, no-c-format
msgid ""
"The built-in qualifier <literal>@New</literal> allows us to obtain a "
"dependent object of a specified class."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The class must be a valid managed bean or session bean, but need not be an "
"enabled bean."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This works even if <literal>Calculator</literal> is <emphasis>already</"
"emphasis> declared with a different scope type, for example:"
msgstr ""
"これは、<literal>Calculator</literal>が、次の例のように<emphasis>既に</"
"emphasis>異なるスコープタイプを持って宣言されていた場合でも有効となります。"

#. Tag: para
#, no-c-format
msgid ""
"So the following injected attributes each get a different instance of "
"<literal>Calculator</literal>:"
msgstr ""
"よって、次の注入された属性は、お互いに異なる<literal>Calculator</literal>のイ"
"ンスタンスを得ることとなります。"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>calculator</literal> field has a conversation-scoped instance "
"of <literal>Calculator</literal> injected. The <literal>newCalculator</"
"literal> field has a new instance of <literal>Calculator</literal> injected, "
"with a lifecycle that is bound to the owning <literal>PaymentCalc</literal>."
msgstr ""
"<literal>calculator</literal>フィールドには対話スコープを持った"
"<literal>Calculator</literal>インスタンスが注入され、<literal>newCalculator</"
"literal>フィールドにはオーナーである<literal>PaymentCalc</literal>に依存した"
"ライフサイクルを持った<literal>Calculator</literal>インスタンスが、新たに作成"
"され、注入されます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This feature is particularly useful with producer methods, as we&#39;ll see "
"in the next chapter."
msgstr ""
"この機能は、特に次章で説明するプロデューサメソッドにおいて効果を発揮します。"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@ScopeType\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Target({TYPE, METHOD})\n"
#~ "public @interface ClusterScoped {}]]>"
#~ msgstr ""
#~ "<![CDATA[@Retention(RUNTIME)\n"
#~ "@Target({TYPE, METHOD})\n"
#~ "@ScopeType\n"
#~ "public @interface ClusterScoped {}]]>"

#~ msgid ""
#~ "<![CDATA[@ClusterScoped\n"
#~ "public class SecondLevelCache { ... }]]>"
#~ msgstr ""
#~ "<![CDATA[@ClusterScoped\n"
#~ "public class SecondLevelCache { ... }]]>"

#~ msgid "@RequestScoped"
#~ msgstr "@RequestScoped"

#~ msgid "@SessionScoped"
#~ msgstr "@SessionScoped"

#, fuzzy
#~ msgid "@Inject Conversation conversation;"
#~ msgstr "@Current Conversation conversation;"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[@ConversationScoped @Stateful\n"
#~ "public class OrderBuilder {\n"
#~ "   private Order order;\n"
#~ "   private @Inject Conversation conversation;\n"
#~ "   private @PersistenceContext(type = EXTENDED) EntityManager em;\n"
#~ "   \n"
#~ "   @Produces public Order getOrder() {\n"
#~ "      return order;\n"
#~ "   }\n"
#~ "\n"
#~ "   public Order createOrder() {\n"
#~ "      order = new Order();\n"
#~ "      conversation.begin();\n"
#~ "      return order;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public void addLineItem(Product product, int quantity) {\n"
#~ "      order.add(new LineItem(product, quantity));\n"
#~ "   }\n"
#~ "\n"
#~ "   public void saveOrder(Order order) {\n"
#~ "      em.persist(order);\n"
#~ "      conversation.end();\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Remove\n"
#~ "   public void destroy() {}\n"
#~ "}]]>"
#~ msgstr ""
#~ "@ConversationScoped @Stateful\n"
#~ "public class OrderBuilder {\n"
#~ "\n"
#~ "    private Order order;\n"
#~ "    private @Current Conversation conversation;\n"
#~ "    private @PersistenceContext(type=EXTENDED) EntityManager em;\n"
#~ "    \n"
#~ "    @Produces public Order getOrder() {\n"
#~ "        return order;\n"
#~ "    }\n"
#~ "\n"
#~ "    public Order createOrder() {\n"
#~ "        order = new Order();\n"
#~ "        conversation.begin();\n"
#~ "        return order;\n"
#~ "    }\n"
#~ "    \n"
#~ "    public void addLineItem(Product product, int quantity) {\n"
#~ "        order.add( new LineItem(product, quantity) );\n"
#~ "    }\n"
#~ "\n"
#~ "    public void saveOrder(Order order) {\n"
#~ "        em.persist(order);\n"
#~ "        conversation.end();\n"
#~ "    }\n"
#~ "    \n"
#~ "    @Remove\n"
#~ "    public void destroy() {}\n"
#~ "    \n"
#~ "}"

#~ msgid ""
#~ "<![CDATA[<a href=\"/addProduct.jsp?cid=#{conversation.id}\">Add Product</"
#~ "a>]]>"
#~ msgstr ""
#~ "<![CDATA[<a href=\"/addProduct.jsp?cid=#{conversation.id}\">Add Product</"
#~ "a>]]>"

#~ msgid "conversation.setTimeout(timeoutInMillis);"
#~ msgstr "conversation.setTimeout(timeoutInMillis);"

#~ msgid "<![CDATA[public class Calculator { ... }]]>"
#~ msgstr "<![CDATA[public class Calculator { ... }]]>"

#, fuzzy
#~ msgid "<![CDATA[@Inject @New Calculator calculator;]]>"
#~ msgstr "<![CDATA[@New Calculator calculator;]]>"

#~ msgid ""
#~ "<![CDATA[@ConversationScoped\n"
#~ "public class Calculator { ... }]]>"
#~ msgstr ""
#~ "<![CDATA[@ConversationScoped\n"
#~ "public class Calculator { ... }]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[public class PaymentCalc {\n"
#~ "   @Inject Calculator calculator;\n"
#~ "   @Inject @New Calculator newCalculator;\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[public class PaymentCalc {\n"
#~ "\n"
#~ "    @Current Calculator calculator;\n"
#~ "    @New Calculator newCalculator;\n"
#~ "\n"
#~ "}]]>"

#~ msgid ""
#~ "holds state associated with a particular web browser tab in a JSF "
#~ "application."
#~ msgstr ""
#~ "対話スコープは、JSFアプリケーションの特定のブラウザタブに関連する状態を保"
#~ "持します。"

#~ msgid ""
#~ "When an injection point of a Web Bean resolves to a dependent Web Bean, a "
#~ "new instance of the dependent Web Bean is created every time the first "
#~ "Web Bean is instantiated. Instances of dependent Web Beans are never "
#~ "shared between different Web Beans or different injection points. They "
#~ "are <emphasis>dependent objects</emphasis> of some other Web Bean "
#~ "instance."
#~ msgstr ""
#~ "Web Beanの注入箇所に、依存Web Beanが注入される場合、注入される側のWeb Bean"
#~ "がインスタンス化される度に、依存Web Beanのインスタンスも作成されます。依存"
#~ "Web Beanのインスタンスは決して異なるWeb Beanや異なる注入箇所で共有されるこ"
#~ "とがありません。依存Web Beanは、他のWeb Beanインスタンスに<emphasis>依存し"
#~ "たオブジェクト</emphasis>なのです。"

#~ msgid ""
#~ "Dependent Web Bean instances are destroyed when the instance they depend "
#~ "upon is destroyed."
#~ msgstr ""
#~ "依存Web Beanは、依存するWeb Beanのインスタンスが破棄された際に、ともに破棄"
#~ "されます。"

#~ msgid ""
#~ "The built-in <literal>@New</literal> binding annotation allows "
#~ "<emphasis>implicit</emphasis> definition of a dependent Web Bean at an "
#~ "injection point. Suppose we declare the following injected field:"
#~ msgstr ""
#~ "組み込みバインディングアノテーションである<literal>@New</literal>によっ"
#~ "て、注入箇所に依存したWeb Beanを<emphasis>暗黙的に</emphasis>定義すること"
#~ "ができます。次のようなフィールドへの注入を考えてみることにしましょう。"

#~ msgid ""
#~ "Then a Web Bean with scope <literal>@Dependent</literal>, binding type "
#~ "<literal>@New</literal>, API type <literal>Calculator</literal>, "
#~ "implementation class <literal>Calculator</literal> and deployment type "
#~ "<literal>@Standard</literal> is implicitly defined."
#~ msgstr ""
#~ "これによって、<literal>@Dependent</literal>スコープを持ち、<literal>@New</"
#~ "literal>バインディングタイプを持ち、<literal>Calculator</literal> APIタイ"
#~ "プを持ち、<literal>Calculator</literal>を実装クラスとして持ち、"
#~ "<literal>@Standard</literal>デプロイメントタイプを持つWeb Beanが暗黙的に定"
#~ "義されます。"
