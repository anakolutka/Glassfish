#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
#
# This file incorporates work covered by the following copyright and
# permission notice:
#
# Copyright 2004 The Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Message IDs reserved for this file: PWC6600-PWC6624
#
object.invalidScope=PWC6600: \uC11C\uBE14\uB9BF\uC758 service \uBA54\uC18C\uB4DC \uB610\uB294 \uD544\uD130\uC758 doFilter \uBA54\uC18C\uB4DC \uC678\uBD80\uC5D0\uC11C\uB294 \uC774 \uAC1D\uCCB4\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

#
# Message IDs reserved for this file: PWC3980-PWC4209
#
coyoteConnector.alreadyInitialized=PWC3980: \uCEE4\uB125\uD130\uAC00 \uC774\uBBF8 \uCD08\uAE30\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteConnector.alreadyStarted=PWC3981: \uCEE4\uB125\uD130\uAC00 \uC774\uBBF8 \uC2DC\uC791\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteConnector.cannotRegisterProtocol=PWC3982: \uD504\uB85C\uD1A0\uCF5C\uC5D0 \uB300\uD55C MBean\uC744 \uB4F1\uB85D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteConnector.notStarted=PWC3983: Coyote \uCEE4\uB125\uD130\uAC00 \uC2DC\uC791\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
coyoteConnector.protocolHandlerDestroyFailed=PWC3984: \uD504\uB85C\uD1A0\uCF5C \uCC98\uB9AC\uAE30 \uC0AD\uC81C \uC2E4\uD328: {0}
coyoteConnector.protocolHandlerInitializationFailed=PWC3985: \uD504\uB85C\uD1A0\uCF5C \uCC98\uB9AC\uAE30 \uCD08\uAE30\uD654 \uC2E4\uD328: {0}
coyoteConnector.protocolHandlerInstantiationFailed=PWC3986: \uD504\uB85C\uD1A0\uCF5C \uCC98\uB9AC\uAE30 \uC778\uC2A4\uD134\uC2A4\uD654 \uC2E4\uD328: {0}
coyoteConnector.protocolHandlerStartFailed=PWC3987: \uD504\uB85C\uD1A0\uCF5C \uCC98\uB9AC\uAE30 \uC2DC\uC791 \uC2E4\uD328: {0}
coyoteConnector.protocolRegistrationFailed=PWC3988: \uD504\uB85C\uD1A0\uCF5C JMX \uB4F1\uB85D\uC744 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
coyoteConnector.illegalAdapter=PWC4015: mod_jk \uBD80\uC801\uD569\uD55C \uC5B4\uB311\uD130 \uAD6C\uD604: {0} 
coyoteAdapter.service=PWC3989: \uC694\uCCAD \uCC98\uB9AC \uC911 \uCEE8\uD14C\uC774\uB108\uC5D0\uC11C \uC608\uC678 \uC0AC\uD56D \uB610\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
coyoteResponse.getOutputStream.ise=PWC3990: \uC774 \uC751\uB2F5\uC5D0 \uB300\uD574 getWriter()\uAC00 \uC774\uBBF8 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteResponse.getWriter.ise=PWC3991: \uC774 \uC751\uB2F5\uC5D0 \uB300\uD574 getOutputStream()\uC774 \uC774\uBBF8 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteResponse.resetBuffer.ise=PWC3992: \uC751\uB2F5\uC774 \uCEE4\uBC0B\uB41C \uD6C4\uC5D0\uB294 \uBC84\uD37C\uB97C \uC7AC\uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteResponse.sendError.ise=PWC3993: \uC751\uB2F5\uC774 \uCEE4\uBC0B\uB41C \uD6C4\uC5D0\uB294 sendError()\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteResponse.sendRedirect.ise=PWC3994: \uC751\uB2F5\uC774 \uCEE4\uBC0B\uB41C \uD6C4\uC5D0\uB294 sendRedirect()\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteResponse.setBufferSize.ise=PWC3995: \uB370\uC774\uD130\uAC00 \uAE30\uB85D\uB41C \uD6C4\uC5D0\uB294 \uBC84\uD37C \uD06C\uAE30\uB97C \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
responseFacade.nullResponse=PWC3996: \uC751\uB2F5 \uAC1D\uCCB4\uAC00 \uB110\uC785\uB2C8\uB2E4.
coyoteRequest.getInputStream.ise=PWC3997: \uC774 \uC694\uCCAD\uC5D0 \uB300\uD574 getReader()\uAC00 \uC774\uBBF8 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteRequest.getReader.ise=PWC3998: \uC774 \uC694\uCCAD\uC5D0 \uB300\uD574 getInputStream()\uC774 \uC774\uBBF8 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteRequest.sessionCreateCommitted=PWC3999: \uC751\uB2F5\uC774 \uCEE4\uBC0B\uB41C \uD6C4\uC5D0\uB294 \uC138\uC158\uC744 \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteRequest.setAttribute.namenull=PWC4000: \uC774\uB984\uC774 \uB110\uC778 setAttribute\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteRequest.listenerStart=PWC4001: \uCEE8\uD14D\uC2A4\uD2B8 \uCD08\uAE30\uD654 \uC774\uBCA4\uD2B8\uB97C {0} \uD074\uB798\uC2A4\uC758 \uB9AC\uC2A4\uB108 \uC778\uC2A4\uD134\uC2A4\uB85C \uC804\uC1A1\uD558\uB294 \uC911 \uC608\uC678 \uC0AC\uD56D\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
coyoteRequest.listenerStop=PWC4002: \uCEE8\uD14D\uC2A4\uD2B8 \uC0AD\uC81C \uC774\uBCA4\uD2B8\uB97C {0} \uD074\uB798\uC2A4\uC758 \uB9AC\uC2A4\uB108 \uC778\uC2A4\uD134\uC2A4\uB85C \uC804\uC1A1\uD558\uB294 \uC911 \uC608\uC678 \uC0AC\uD56D\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
coyoteRequest.attributeEvent=PWC4003: \uC18D\uC131 \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\uC5D0\uC11C \uC608\uC678 \uC0AC\uD56D\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
coyoteRequest.postTooLarge=PWC4004: \uAC8C\uC2DC\uB41C \uB370\uC774\uD130\uC758 \uD06C\uAE30\uAC00 \uB108\uBB34 \uCEE4\uC11C \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uAD6C\uBB38 \uBD84\uC11D\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uC751\uC6A9 \uD504\uB85C\uADF8\uB7A8\uC5D0\uC11C \uB300\uD615 POST\uB97C \uD5C8\uC6A9\uD574\uC57C \uD558\uB294 \uACBD\uC6B0 \uCEE4\uB125\uD130\uC758 maxPostSize \uC18D\uC131\uC744 \uC0AC\uC6A9\uD558\uC5EC \uC774\uB97C \uD574\uACB0\uD558\uC2ED\uC2DC\uC624.
requestFacade.nullRequest=PWC4005: \uC11C\uBE14\uB9BF\uC758 service \uBA54\uC18C\uB4DC \uB610\uB294 \uD544\uD130\uC758 doFilter \uBA54\uC18C\uB4DC \uC678\uBD80\uC5D0\uC11C\uB294 \uC694\uCCAD \uAC1D\uCCB4\uB97C \uC0AC\uC6A9\uD558\uBA74 \uC548\uB429\uB2C8\uB2E4.
coyoteAdapter.proxyAuthCertError=PWC4009: \uD074\uB77C\uC774\uC5B8\uD2B8 \uC778\uC99D\uC11C \uCCB4\uC778\uC744 java.security.cert.X509Certificate \uC778\uC99D\uC11C\uC758 \uBC30\uC5F4\uB85C \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
coyoteAdapter.listenerOff=PWC4010: {0} \uD3EC\uD2B8\uC5D0\uC11C HTTP \uB9AC\uC2A4\uB108\uAC00 \uC0AC\uC6A9 \uC548\uD568\uC73C\uB85C \uC124\uC815\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
#no ID on coyoteAdapter.noHost as it is sent to client
coyoteAdapter.noHost=\uC11C\uBC84 \uC774\uB984 {0}\uACFC(\uC640) \uC77C\uCE58\uD558\uB294 \uD638\uC2A4\uD2B8\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteRequest.setCharacterEncoding.ise=PWC4011: \uC694\uCCAD \uB9E4\uAC1C\uBCC0\uC218\uB97C \uC774\uBBF8 \uC77D\uC5C8\uAC70\uB098 ServletRequest.getReader()\uAC00 \uC774\uBBF8 \uD638\uCD9C\uB418\uC5C8\uC73C\uBBC0\uB85C \uC694\uCCAD \uBB38\uC790 \uC778\uCF54\uB529\uC744 {1} \uCEE8\uD14D\uC2A4\uD2B8\uC5D0\uC11C {0}(\uC73C)\uB85C \uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteRequest.unknownHost=PWC4012: IP \uC8FC\uC18C {0}\uC744(\uB97C) \uD638\uC2A4\uD2B8 \uC774\uB984\uC73C\uB85C \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteRequest.nullRemoteAddressFromProxy=PWC4013: \uD504\uB85D\uC2DC\uC5D0\uC11C \uD074\uB77C\uC774\uC5B8\uD2B8 \uC6D0\uACA9 \uC8FC\uC18C\uB97C \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4(\uB110 \uBC18\uD658).
object.invalidScope=PWC4014: \uC11C\uBE14\uB9BF\uC758 service \uBA54\uC18C\uB4DC \uB610\uB294 \uD544\uD130\uC758 doFilter \uBA54\uC18C\uB4DC \uC678\uBD80\uC5D0\uC11C\uB294 \uC774 \uAC1D\uCCB4\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
inputBuffer.streamClosed=PWC4015: \uC2A4\uD2B8\uB9BC\uC774 \uB2EB\uD614\uC2B5\uB2C8\uB2E4.
coyoteRequest.sendfileNotCanonical=PWC4016: sendfile\uACFC \uD568\uAED8 \uC0AC\uC6A9\uD560 \uC9C0\uC815\uB41C [{0}] \uD30C\uC77C\uC758 \uD45C\uC900 \uC774\uB984\uC744 \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
coyoteRequest.multipart.not.configured=PWC4017: Multipart \uAD6C\uC131 \uC5C6\uC774 Request.{0}\uC774(\uAC00) \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC11C\uBE14\uB9BF\uC5D0 @MultipartConfig\uB97C \uCD94\uAC00\uD558\uAC70\uB098 web.xml\uC5D0 multipart-config \uC694\uC18C\uB97C \uCD94\uAC00\uD558\uC2ED\uC2DC\uC624.
inputBuffer.alreadysetReadListener=PWC4018: ReadListener\uAC00 \uC774\uBBF8 \uC124\uC815\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
outputBuffer.alreadysetWriteListener=PWC4019: WriteListener\uAC00 \uC774\uBBF8 \uC124\uC815\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteRequest.changeSessionId.ise=PWC4020: changeSessionId\uAC00 \uC138\uC158 \uC5C6\uC774 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
coyoteReader.readline.skipFailure=PWC4021: readLine()\uC5D0 \uC788\uB294 CoyoteReader\uC758 \uAE30\uBCF8 \uBC84\uD37C\uC5D0\uC11C {0}\uC790\uB97C \uAC74\uB108 \uB6F0\uB294 \uB370 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

#
# Messages related to async processing mode
#
async.dispatchInProgress=\uBE44\uB3D9\uAE30 \uC791\uC5C5 \uD560\uB2F9\uC774 \uC774\uBBF8 \uC9C4\uD589 \uC911\uC785\uB2C8\uB2E4. \uBA3C\uC800 ServletRequest.startAsync\uB97C \uD638\uCD9C\uD574\uC57C \uD569\uB2C8\uB2E4.
async.addListenerIllegalState=ServletRequest.startAsync\uAC00 \uD638\uCD9C\uB41C container-initiated \uC791\uC5C5 \uD560\uB2F9\uC774 \uCEE8\uD14C\uC774\uB108\uB85C \uBC18\uD658\uB41C \uD6C4\uC5D0\uB294 AsyncContext.addListener\uB97C \uD638\uCD9C\uD558\uBA74 \uC548\uB429\uB2C8\uB2E4.
async.setTimeoutIllegalState=ServletRequest.startAsync\uAC00 \uD638\uCD9C\uB41C container-initiated \uC791\uC5C5 \uD560\uB2F9\uC774 \uCEE8\uD14C\uC774\uB108\uB85C \uBC18\uD658\uB41C \uD6C4\uC5D0\uB294 AsyncContext.setTimeout\uC744 \uD638\uCD9C\uD558\uBA74 \uC548\uB429\uB2C8\uB2E4.
async.listenerInvocationError=AsyncListener\uB97C \uD638\uCD9C\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
request.notInAsyncMode=\uC694\uCCAD\uC774 \uBE44\uB3D9\uAE30 \uBAA8\uB4DC\uB85C \uC804\uD658\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uBA3C\uC800 ServletRequest.startAsync\uB97C \uD638\uCD9C\uD574\uC57C \uD569\uB2C8\uB2E4.
request.startAsync.notSupported=\uC694\uCCAD\uC774 \uBE44\uB3D9\uAE30 \uC791\uC5C5\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uB294 \uD544\uD130 \uB610\uB294 \uC11C\uBE14\uB9BF\uC758 \uBC94\uC704 \uB0B4\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.
request.startAsync.alreadyCalled=ServletRequest.startAsync\uAC00 \uBE44\uB3D9\uAE30 \uC791\uC5C5 \uD560\uB2F9 \uC5C6\uC774 \uB2E4\uC2DC \uD638\uCD9C\uB418\uC5C8\uAC70\uB098, \uD574\uB2F9 \uC791\uC5C5 \uD560\uB2F9 \uBC94\uC704 \uBC16\uC5D0\uC11C \uD638\uCD9C\uB418\uC5C8\uAC70\uB098, \uB3D9\uC77C\uD55C \uC791\uC5C5 \uD560\uB2F9 \uBC94\uC704 \uB0B4\uC5D0\uC11C \uB2E4\uC2DC \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
request.startAsync.alreadyComplete=\uC751\uB2F5\uC774 \uC774\uBBF8 \uB2EB\uD614\uC2B5\uB2C8\uB2E4.
request.startAsync.notInScope=ServletRequest.startAsync\uAC00 \uBE44\uB3D9\uAE30 \uC791\uC5C5 \uD560\uB2F9 \uBC94\uC704 \uBC16\uC5D0\uC11C \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
request.asyncComplete.alreadyComplete=\uC694\uCCAD\uC774 \uC774\uBBF8 \uBE44\uB3D9\uAE30 \uBAA8\uB4DC\uC5D0\uC11C \uD574\uC81C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
