add-resources(1)        Comandi secondari della utilit        add-resources(1)

NOME
       add-resources - crea le risorse specificate in un file XML

SINTASSI
           add-resources [--help] [--target target]
           [--upload={false|true}] xml-file-name

DESCRIZIONE
       Il comando secondario add-resources crea le risorse indicate nel file
       XML specificato. Le risorse che possono essere create con questo
       comando secondario sono elencate nella sezione Vedere anche di questa
       pagina della Guida.

       L'opzione --target specifica la destinazione per la quale si stanno
       creando le risorse. Se questa opzione specifica il dominio, le risorse
       vengono aggiunte soltanto alla configurazione del server di
       amministrazione del dominio (DAS). Se questa opzione specifica un'altra
       destinazione qualsiasi, le risorse vengono aggiunte alla configurazione
       del server DAS e i riferimenti vengono aggiunti alle risorse dalla
       destinazione specificata.

       L'operando xml-file-name indica il percorso del file XML che contiene
       le risorse da creare.  DOCTYPE deve essere specificato come
       http://glassfish.org/dtds/glassfish-resources_1_5.dtd nel file
       resources.xml.

       Questo comando secondario è supportato solo in modalità remota.

OPZIONI
       --help, -?
           Visualizza il testo della Guida per il comando secondario.

       --target
           Specifica la destinazione per la quale vengono create le risorse.

           Di seguito sono riportati i valori validi.

           server
               Crea le risorse per l'istanza server predefinita server. È il
               valore predefinito.

           domain
               Crea le risorse per il dominio.

           cluster-name
               Crea le risorse per tutte le istanze di server del cluster.

           instance-name
               Crea le risorse per un'istanza di GlassFish Server particolare.

       --upload
           Specifica se il comando secondario carica il file nel server DAS.
           Questa opzione può essere omessa nella maggior parte dei casi.

           Di seguito sono riportati i valori validi.

           false
               Il comando secondario non carica il file e tenta di accedervi
               tramite il nome file specificato. Se il server DAS non è in
               grado di accedere al file, il comando secondario non riesce.

               Ad esempio, il server DAS potrebbe essere in esecuzione come
               utente diverso dall'utente di amministrazione e non disporre
               dell'accesso di lettura al file. In questa situazione, il
               comando secondario non riesce se l'opzione --upload è impostata
               su false.

           true
               Il comando secondario carica il file nel server DAS utilizzando
               la connessione di rete.

           Il valore predefinito dipende da dove si trova il server DAS,
           ovvero sull'host nel quale viene eseguito il comando secondario
           oppure sull'host remoto.

           ·   Se il server DAS si trova sull'host nel quale viene eseguito il
               comando secondario, il valore predefinito è false.

           ·   Se il server DAS si trova su un host remoto, il valore
               predefinito è true.

OPERANDI
       xml-file-name
           Il percorso del file XML che contiene le risorse da creare. È
           possibile specificare un percorso assoluto, solo il nome del file o
           un percorso relativo.

           ·   Se si specifica un percorso assoluto, il file XML può trovarsi
               in qualsiasi posizione.

           ·   Se si specifica solo il nome file, il file XML deve risiedere
               nella directory domain-dir/config dell'host DAS. Questo
               requisito deve essere soddisfatto anche se si esegue il comando
               secondario da un altro host.

           ·   Se si specifica un percorso relativo, il file XML deve trovarsi
               nella directory relativa.

           Di seguito viene riportato un file XML di esempio.

               <?xml version="1.0" encoding="UTF-8"?>
               <!DOCTYPE resources PUBLIC
                  "-//GlassFish.org//DTD GlassFish Application Server 3.1 Resource Definitions //EN"
                  "http://glassfish.org/dtds/glassfish-resources_1_5.dtd">
               <resources>
                <jdbc-connection-pool name="SPECjPool" steady-pool-size="100"
                  max-pool-size="150" max-wait-time-in-millis="60000"
                  pool-resize-quantity="2" idle-timeout-in-seconds="300"
                  is-isolation-level-guaranteed="true"
                  is-connection-validation-required="false"
                  connection-validation-method="auto-commit"
                  fail-all-connections="false"
                  datasource-classname="oracle.jdbc.pool.OracleDataSource">
                 <property name="URL"
                   value="jdbc:oracle:thin:@iasperfsol12:1521:specdb"/>
                 <property name="User" value="spec"/>
                 <property name="Password" value="spec"/>
                 <property name="MaxStatements" value="200"/>
                 <property name="ImplicitCachingEnabled" value="true"/>
                </jdbc-connection-pool>
                <jdbc-resource enabled="true" pool-name="SPECjPool"
                  jndi-name="jdbc/SPECjDB"/>
               </resources>

ESEMPI
       Esempio 1, Aggiunta di risorse
           In questo esempio vengono create le risorse utilizzando il
           contenuto del file XML resource.xml.

               asadmin> add-resources resource.xml
               Command : Connector connection pool jms/testQFactoryPool created.
               Command : Administered object jms/testQ created.
               Command : Connector resource jms/testQFactory created.
               Command : Resource adapter config myResAdapterConfig created successfully
               Command : JDBC connection pool DerbyPoolA created successfully.
               Command : JDBC resource jdbc/__defaultA created successfully.
               Command add-resources executed successfully.

STATO DI USCITA
       0
           esecuzione del comando secondario riuscita

       1
           errore durante l'esecuzione del comando secondario

VEDERE ANCHE
       create-jdbc-connection-pool(1),create-jdbc-resource(1),
       create-jms-resource(1), create-jndi-resource(1),
       create-javamail-resource(1), create-custom-resource(1),
       create-connector-resource(1), create-connector-work-security-map(1),
       create-admin-object(1), create-resource-adapter-config(1)

       asadmin(1M)

Java EE 7                      23 dicembre 2010               add-resources(1)
