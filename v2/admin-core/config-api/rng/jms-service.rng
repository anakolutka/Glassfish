<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:sch="http://www.ascc.net/xml/schematron"
         xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:x="http://www.w3.org/1999/xhtml"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">


  <define name="jms-service">
    <element name="jms-service">
      <x:div class='dtd'>
        The jms-service element specifies information about the
        bundled/built-in JMS service that is managed by Application
        Server.
      </x:div>
      <ref name="jms-service-attlist"/>
      <zeroOrMore>
        <ref name="jms-host"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="property"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="jms-service-attlist" combine="interleave">
    <optional>
      <attribute name="init-timeout-in-seconds" a:defaultValue="60">
        <x:div class='dtd'>
          specifies the time server instance will wait at start up,
          for its corresponding JMS service instance to respond. If
          there is no response within the specifies timeout period,
          application server startup is aborted. Default value of 60
          seconds.
        </x:div>
	<data type="positiveInteger"/>
      </attribute>
    </optional>
    <attribute name="type">
        <x:div class='dtd'>
          Type of JMS service.
        </x:div>
        <choice>
          <value>LOCAL</value>
          <value>EMBEDDED</value>
          <value>REMOTE</value>
        </choice>
    </attribute>
    <optional>
      <attribute name="start-args">
        <x:div class='dtd'>
          specifies the arguments that will be supplied to start up
          the corresponding JMS service instance.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="default-jms-host">
        <x:div class='dtd'>
          reference to a jms-host that to be started when type of
          jms-service is LOCAL.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="reconnect-interval-in-seconds" a:defaultValue="5">
        <x:div class='dtd'>
          Interval between reconnect attempts, in seconds. An integer.
        </x:div>
	<data type="positiveInteger"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="reconnect-attempts" a:defaultValue="3">
        <x:div class='dtd'>
          Total number of attempts to reconnect. An integer.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="reconnect-enabled" a:defaultValue="true">
        <x:div class='dtd'>
          Causes reconnect feature to be enabled (true) or disabled
          (false). A boolean.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="addresslist-behavior" a:defaultValue="random">
        <x:div class='dtd'>
          Determines broker selection from imqAddressList.
        </x:div>
        <choice>
          <value x:desc="causes selection to be performed randomly">random</value>
          <value x:desc="causes selection to be performed sequentially">priority</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="addresslist-iterations" a:defaultValue="3">
        <x:div class='dtd'>
          Number of times reconnect logic should iterate
          imqAddressList. This property will not be used if the
          addresslist-behavior is "random". An integer.
        </x:div>
	<data type="positiveInteger"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="mq-scheme">
	<x:div class='dtd'>
	  Scheme for establishing connection with broker. For example,
	  scheme can be specified as "http" for connecting to MQ
	  broker over http. Default is "mq".
	</x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="mq-service">
	<x:div class='dtd'>
	  Type of broker service. If a broker supports ssl, then the
	  type of service can be "ssljms". If nothing is specified, MQ
	  will assume 4that service is "jms".
	</x:div>
      </attribute>
    </optional>
    <x:div class='dtd'>
      <x:h2>Correctness criteria</x:h2>
      <x:p>
        default-jms-host refers to an existing jms-host element.
      </x:p>
      <x:p>
        connection-pool-with-hadb-information refers to an existing
        connection-pool element.
      </x:p>
    </x:div>
  </define>
  
</grammar>
