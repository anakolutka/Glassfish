<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:sch="http://www.ascc.net/xml/schematron"
         xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:x="http://www.w3.org/1999/xhtml"
         xmlns:ias="http://www.sun.com/ias/validation" 
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
>


  <define name="lifecycle-module">
    <element name="lifecycle-module">
      <ref name="lifecycle-module-attlist"/>
      <optional>
        <ref name="description"/>
      </optional>
      <zeroOrMore>
        <ref name="property"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="lifecycle-module-attlist" combine="interleave">
    <attribute name="name" ias:type="key" ias:belongs-to="applications">
      <x:div class='dtd'>
        unqiue identifier for the deployed server lifecycle event
        listener module.
      </x:div>
      <ref name="name-type"/>
    </attribute>
    <attribute name="class-name">
      <x:div class='dtd'>
        fully qualified name of the startup class.
      </x:div>
      <ref name="classname-type"/>
    </attribute>
    <optional>
      <attribute name="classpath">
        <x:div class='dtd'>
          where this module is actually located, if it is not under
          applications-root
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="load-order">
        <x:div class='dtd'>
          integer value that can be used to force the order in which
          deployed lifecycle modules are loaded at server start
          up. Smaller numbered modules get loaded sooner. Order is
          unspecified if two or more lifecycle modules have the same
          load-order value.
        </x:div>
	<data type="positiveInteger"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="is-failure-fatal" a:defaultValue="false">
        <x:div class='dtd'>
          if true, aborts server start up if this module does not load
          properly.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="object-type" a:defaultValue="user">
        <ref name="object-type"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="enabled" a:defaultValue="true">
        <x:div class='dtd'>
          boolean attribute. If set to "false" this module will not be
          loaded at server start up.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
  </define>
  
</grammar>
