<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/* 
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. 
* 
* Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved. 
* 
* The contents of this file are subject to the terms of either the GNU 
* General Public License Version 2 only ("GPL") or the Common Development 
* and Distribution License("CDDL") (collectively, the "License").  You 
* may not use this file except in compliance with the License. You can obtain 
* a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html 
* or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific 
* language governing permissions and limitations under the License. 
* 
* When distributing the software, include this License Header Notice in each 
* file and include the License file at glassfish/bootstrap/legal/LICENSE.txt. 
* Sun designates this particular file as subject to the "Classpath" exception 
* as provided by Sun in the GPL Version 2 section of the License file that 
* accompanied this code.  If applicable, add the following below the License 
* Header, with the fields enclosed by brackets [] replaced by your own 
* identifying information: "Portions Copyrighted [year] 
* [name of copyright owner]" 
* 
* Contributor(s): 
* 
* If you wish your version of this file to be governed by only the CDDL or 
* only the GPL Version 2, indicate your decision by adding "[Contributor] 
* elects to include this software in this distribution under the [CDDL or GPL 
* Version 2] license."  If you don't indicate a single choice of license, a 
* recipient has the option to distribute your version of this file under 
* either the CDDL, the GPL Version 2 or to extend the choice of license to 
* its licensees as provided above.  However, if you add GPL Version 2 code 
* and therefore, elected the GPL Version 2 license, then the option applies 
* only if the new code is made subject to such option by the copyright 
* holder. 
*/ 
--> 
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.glassfish.web</groupId>
        <artifactId>web</artifactId>
        <version>10.0-SNAPSHOT</version>
    </parent>    
    <artifactId>jsf-connector</artifactId>
    <packaging>hk2-jar</packaging>
    <name>JSF implementation connector module</name>

    <developers>
        <developer>
            <id>dochez</id>
            <name>Jerome Dochez</name>
            <url>http://blogs.sun.com/dochez</url>
            <organization>Sun Microsystems, Inc.</organization>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>swchan2</id>
            <name>Shing Wai Chan</name>
            <url>http://blogs.sun.com/swchan</url>
            <organization>Sun Microsystems, Inc.</organization>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>hk2-jar</supportedProjectType>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <instructions>
                        <!-- embed any artifact that matches the following criteria:
                        groupId=javax.faces, artifactId=jsf-impl.
                        Note, we need to inline the contents inside this jar so that
                        the tld files can be made available as jar: under the bundle location.
                        More over, Jasper also requires jar: type URL.
                        -->
                        <Embed-Dependency>
                            *;groupId=javax.faces;artifactId=jsf-impl;inline=true
                        </Embed-Dependency>
                        <!-- Include inhabitants descriptors generated by hk2-maven-plugin -->
                        <Include-Resource>
                            {maven-resources},
                            META-INF/inhabitants=${project.build.outputDirectory}/META-INF/inhabitants
                        </Include-Resource>
                        <!-- 1. javax/faces/Messages are packaged as part of jsf-ri.jar.
                             So, we need to specify that this bundle does not export javax.faces package,
                             otherwise bnd adds javax.faces to export package list, which we don't want.
                             2. We don't want to export com.sun.faces.* - they are implementation artifacts.
                             -->
                        <Export-Package>org.glassfish.faces.integration.*,!javax.faces,!com.sun.faces.*</Export-Package>
                        <!--
                         1. Since we added !javax.faces to Export-Package, we need to add
                         javax.faces to Import-Package.
                         2. jsf-impl includes some com.sun.faces.vendor.* classes
                         which depends on following APIs that are not needed while running in
                         GlassFish. So excluding them. See the negative pattern(!) used below
                         -->
                        <Import-Package>javax.faces,!org.mortbay.jetty.*,!com.sun.faces.config.beans,!org.apache,!javax.portlet,*</Import-Package>
                        <!-- Package everything from the embedded jar in the final bundle -->
                        <_exportcontents>*</_exportcontents>
                        <!-- !* matches with nothing, so no other class will be included in this bundle,
                         other than what is specified above -->
                        <Private-Package>!*</Private-Package>
                        <!-- Make it an HK2 module, as GlassFish needs it to be HK2 module.
                         We need this although the packaging type is hk2-jar, because
                         bundle plugin overwrites the manifest generated by hk2 plugin.
                         We don't want to merge because we want to use bundle plugin generated
                         manifests. -->
                        <HK2-Bundle-Name>${groupId}:${artifactId}</HK2-Bundle-Name>
                        <HK2-Import-Bundles>
                            com.sun.enterprise:hk2,
                            org.glassfish:javax.javaee,
                            org.glassfish.common:glassfish-api,
                            org.glassfish.common:common-util,
                            org.glassfish.common:container-common
                        </HK2-Import-Bundles>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.sun.enterprise</groupId>
            <artifactId>hk2</artifactId>
            <version>${hk2.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>${jsf-impl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.common</groupId>
            <artifactId>glassfish-api</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.common</groupId>
            <artifactId>common-util</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.common</groupId>
            <artifactId>container-common</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.common</groupId>
            <artifactId>dol</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
    </dependencies>
</project>

