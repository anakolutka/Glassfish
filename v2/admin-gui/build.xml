<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->
<!DOCTYPE project [
]>

<project name="Admin GUI JSF" default="all" basedir=".">  

<!-- ========== Initialize Properties =================================== -->
    <property file="${user.home}/build.properties"/>
    <property file="../bootstrap/project.properties"/>
    <property file="./build.properties"/>
    
    <target name="init" description="${component.name} initialization">
            <tstamp>
                    <format property="start.time" pattern="MM/dd/yyyy hh:mm aa" />
            </tstamp>
            <condition property="execute.ant" value="${glassfish.home}/lib/ant/bin/ant.bat" else="${glassfish.home}/lib/ant/bin/ant">
                    <os family="windows" />
            </condition>
            <mkdir dir="${adminjsf.classes.dir}" />
    </target>
  
    <!-- all -->
    <target name="all" depends="init, assemble-jar, assemble-helpfiles,
					 assemble-war"
        description="Build entire admin-gui">
    </target>

    <!-- build -->
    <target name="build" depends="all"
        description="Build entire admin-gui">
    </target>

    <target name="compile-java" depends="init" 
        description="Compile ${component.name} sources">  
	<exec dir="." executable="${execute.ant}" failonerror="true">
                <arg value="-f" />
                <arg value="aptbuild.xml" />
 		<arg value="-Dglassfish.home=${glassfish.home}" />
 		<arg value="-lib" />
 		<arg value="${lib.dir}/ant-apt.jar" />
 		<arg value="compile" />
	</exec>
    </target>

    <target name="assemble-jar" depends="compile-java"  
        description="Create ${component.name} jar files">               
        <copy todir="${adminjsf.classes.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.properties" />
                <include name="**/*.xml"/>
            </fileset>
        </copy>
        <jar jarfile="${glassfish.adminguijsf.dir}/WEB-INF/lib/admin.jar"
             manifest="admin-gui.mf">
            <fileset dir="${adminjsf.classes.dir}">
                <include name="**/*.class"/>
                <include name="**/*.map"/>
                <include name="**/*.xml"/>
            </fileset>
        </jar>                        

        <jar jarfile="${glassfish.adminguijsf.dir}/WEB-INF/lib/admin-jsf.jar"
             manifest="admin-gui.mf">
            <fileset dir="${docroot.dir}">
                <include name="**/*.jsf"/>
                <include name="**/*.inc"/>
                <include name="images/**/*"/>
                <include name="css/**/*"/>
                <include name="**/*.jsp"/>
				<exclude name="index.jsf"/>	
            </fileset>
        </jar>                        

        <jar jarfile="${glassfish.adminguijsf.dir}/WEB-INF/lib/admin-en.jar"
	    manifest="admin-gui.mf"> 
            <fileset dir="${adminjsf.classes.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </jar>  
    </target>

    <target name="assemble-war" depends="assemble-jar">
	<echo message="Copying web content for admingGUI-JSF_war: ${glassfish.adminguijsf.dir}"/>
        <copy todir="${glassfish.adminguijsf.dir}/WEB-INF/">
            <fileset dir="${docroot.dir}/WEB-INF" includes="*.xml"/>
        </copy>
        <copy todir="${glassfish.adminguijsf.dir}">
            <fileset dir="${docroot.dir}">
				<include name="jbi/*/*.jsp"/>
				<include name="js/*"/>
				<include name="asadmin/*"/>
				<include name="index.jsf"/>
                                <include name="resources/**"/>
			</fileset>
        </copy>
        <copy file="${admingui.root.dir}/lib/ajax-wrapper-comp.jar"
            tofile="${glassfish.adminguijsf.dir}/WEB-INF/lib/ajax-wrapper-comp.jar" />
       
    </target> 

    <target name="assemble-helpfiles" depends="init"
            description="Create ${component.name} help jar files">

        <jar jarfile="${glassfish.adminguijsf.dir}/WEB-INF/lib/help.jar"
	    	manifest="admin-gui.mf"> 
            <zipfileset dir="${docroot.dir}/html" prefix="html/en/help" />
        </jar>
    </target>
    
    <!-- clean -->
    <target name="clean">
	<delete dir="${adminjsf.build.dir}" />
    </target>

    
    <!-- the following target is for setting up the dev. environment so that you can do directory
         deploy of admin-jsf/src/docroot 
         you only need to do "dev-setup" once, and then do 'dev-build'.
         after that, everytime you modify any java file or resource, just run the "dev-build" target.
         doing "ant dev-rebuild" will ensure a fresh copy.
     -->
     
    <target name="dev-setup" >
        <mkdir dir="${docroot.dir}/WEB-INF/lib" />
        <mkdir dir="${docroot.dir}/WEB-INF/classes" />
        
        <!-- if you prefer to get jsftemplating.jar from other dir, change it here. -->
        <copy todir="${docroot.dir}/WEB-INF/lib">
            <fileset dir="${glassfish.adminguijsf.dir}/WEB-INF/lib" > 
                <include name="jsftemplating.jar"/>
                <include name="jsftemplating-dynafaces-0.1.jar"/>
	    </fileset>
	</copy>
              
        <echo message="glassfish.home = ${glassfish.home}" />
        <echo message="glassfish.adminguijsf.dir = ${glassfish.adminguijsf.dir}" />

        <copy file="${glassfish.home}/jbi/lib/jbi-admin-common.jar" 
            tofile="${docroot.dir}/WEB-INF/lib/jbi-admin-common.jar" />
            
        <copy file="${glassfish.home}/jbi/lib/xbean.jar" 
            tofile="${docroot.dir}/WEB-INF/lib/xbean.jar" />
            
        <copy file="${admingui.root.dir}/lib/ajax-wrapper-comp.jar"
            tofile="${docroot.dir}/WEB-INF/lib/ajax-wrapper-comp.jar" />
            
        <copy todir="${docroot.dir}/WEB-INF/lib">
            <fileset dir="${glassfish.adminguijsf.dir}/WEB-INF/lib" >
                <include name="commons-fileupload-1.1.1.jar"/>
                <include name="commons-io-1.2.jar"/>
                <include name="dataprovider.jar"/>
                <include name="json.jar"/>
                <include name="webui-jsf.jar"/>
                <include name="webui-jsf-suntheme.jar"/>
                <include name="dojo-0.4.1-ajax.jar"/>
                <include name="prototype-1.5.0.jar"/>
                <include name="help.jar"/>
            </fileset>
        </copy>
    </target>
    
    <target name="dev-build" depends="init" >
	<!-- need to remove all classes and build all java again, otherwise the map file will only include 
	     handlers from the newly compiled class.
         <delete>
            <fileset dir="${docroot.dir}/WEB-INF/classes" includes="**/*.class"/>
          </delete>
          -->
        <exec dir="." executable="${execute.ant}" failonerror="true">
		<arg line="-f aptbuild.xml -Dglassfish.home=${glassfish.home} -Dadminjsf.build.dir=${docroot.dir}  -lib ${lib.dir}/ant-apt.jar compile" />
	</exec>

        <copy todir="${docroot.dir}/WEB-INF/classes">
            <fileset dir="${src.dir}"  includes="**/*.properties"/>
            <fileset dir="${src.dir}"  includes="**/*.xsd"/>
            <fileset dir="${src.dir}"  includes="**/*.xml"/>
	        <fileset dir="${adminjsf.build.dir}/WEB-INF/classes/" includes="**/*" />
        </copy>

    </target>
    
    <target name="dev-clean" >
        <delete dir="${docroot.dir}/WEB-INF/lib" />
        <delete dir="${docroot.dir}/WEB-INF/classes" />
    </target>

    <target name="dev-rebuild" depends="dev-clean, dev-setup, dev-build" />

    <target name="init-for-test" >
		<property name="test.dest" value="build/test"/>
		<property name="test.src" value="test/java"/>
		<!-- Selenium check: -->
		<echo message="selenium.home=${selenium.home}"/>
		<fail unless="selenium.home">

			target:init-for-test FAILED:

			Missing selenium.home property.  Needed to locate selenium jar files.

			Search in:
			1. in ./build.properties file: selenium.home=foo
				
		</fail>
		
		<path id="test.classpath">
			<!-- the  test classes: -->
			<pathelement location="${test.dest}"/>
			<pathelement location="${selenium.home}/lib/selenium-java-client-driver.jar"/>
			<pathelement location="${selenium.home}/lib/selenium-java-client-driver-tests.jar"/>
			<pathelement location="../appserv-tests/lib/junit.jar"/>
			<pathelement location="${selenium.home}/lib/testng-5.5-jdk15.jar"/>
		</path>

    </target>


      <target name="compile-for-test"
              depends="init-for-test"
              > <!-- compiles PE and EE JBI tests -->
		<delete includeemptydirs="true" quiet="true">
		<fileset dir="${test.dest}" includes="**/*"/>
		</delete>
		<mkdir dir="${test.dest}"/>
			<javac debug="true" destdir="${test.dest}" includes="com/sun/jbi/jsf/test/*.java" srcdir="${test.src}" target="1.5" classpathref="test.classpath">
			</javac>
      </target>
	  <!-- comments out for now since causing tinderbox red
      <taskdef name="testng" classpathref="test.classpath"
		   classname="org.testng.TestNGAntTask" />
      -->

	  <target name="test" depends="compile-for-test"
		  description="JBI Selenium testNG tests for Developer Profile" >
	      <testng classpathref="test.classpath" suitename="Suite1">	
		      <xmlfileset dir="." includes="testng.xml"/>
	      </testng>
    </target>

</project>
