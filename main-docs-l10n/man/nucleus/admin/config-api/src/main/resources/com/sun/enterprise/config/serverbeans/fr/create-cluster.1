create-cluster(1)       Sous-commandes de l'utilitaire       create-cluster(1)

NOM
       create-cluster - crée un cluster GlassFish Server

SYNTAXE
           create-cluster [--help] [--config config-name]
           [--systemproperties (name=value)[:name=value]*]
           [--properties (name=value)[:name=value]*]
           [--gmsenabled={true|false}]
           [--multicastport multicast-port]
           [--multicastaddress multicast-address]
           [--bindaddress bind-address]
           [--hosts hadb-host-list]
           [--haagentport port-number]
           [--haadminpassword password]
           [--haadminpasswordfile file-name] [--devicesize devicesize ]
           [--haproperty (name=value)[:name=value]*]
           [--autohadb=false] [--portbase port-number]
           cluster-name

DESCRIPTION
       La sous-commandecreate-cluster crée un cluster GlassFish Server.
       Initialement, le cluster ne comporte aucune instance, application, ni
       ressource de GlassFish Server.

       Un cluster nécessite une référence à la configuration nommée
       définissant la configuration de toutes les instances ajoutées au
       cluster. La configuration peut être indiquée dans la commande de
       création du cluster, bien qu'elle ne soit pas obligatoire. Si aucune
       configuration n'est indiquée, la sous-commande crée une configuration
       nommée cluster-name-config pour le cluster. Le cluster ainsi créé est
       autonome, en ce que la configuration du cluster n'est pas partagée avec
       les autres clusters et instances autonomes.

       Pour ajouter des instances au cluster, définissez l'option --cluster
       sur le nom du cluster à l'aide de l'une des sous-commandes suivantes :

       ·   create-instance(1)

       ·   create-local-instance(1)

       Pour supprimer à tout moment des instances de serveur à partir du
       cluster, utilisez l'une des sous-commandes suivantes :

       ·   delete-instance(1)

       ·   delete-local-instance(1)

       Pour associer des applications et des ressources à toutes les instances
       du cluster, définissez l'option --target sur le nom du cluster lorsque
       vous effectuez les opérations suivantes :

       ·   Déploiement d'applications à l'aide de la sous-commande deploy(1)

       ·   Création de ressources à l'aide de sous-commandes telles que
           create-jdbc-resource(1)

       ·   Création de références à des applications déjà déployées dans
           d'autres cibles à l'aide de la sous-commande
           create-application-ref(1)

       ·   Création de références à des ressources déjà créées dans d'autres
           cibles à l'aide de la sous-commande create-resource-ref(1)

       Cette sous-commande est prise en charge en mode distant uniquement.

OPTIONS
       --help, -?
           Cette option affiche le texte d'aide de la sous-commande.

       --config
           Cette option indique la configuration nommée à laquelle le cluster
           fait référence. La configuration doit exister et ne doit pas être
           nommée default-config ni
            server-config. L'indication de l'option --config permet de créer
           un cluster partagé. Si cette option est omise, un cluster autonome
           est créé.

       --systemproperties
           Cette option définit les propriétés système de la configuration
           créée pour le cluster. Ces propriétés remplacent les valeurs de
           propriété de la configuration default-config. Les propriétés
           disponibles sont les suivantes :

           ASADMIN_LISTENER_PORT
               Cette propriété indique le numéro de port HTTP ou HTTPS par
               l'intermédiaire duquel le serveur DAS se connecte à l'instance
               à gérer. Les valeurs valides sont comprises entre 1 et 65535.
               Sous les systèmes UNIX, la création de sockets qui écoutent sur
               les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           HTTP_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour
               l'écoute des demandes HTTP. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           HTTP_SSL_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour
               l'écoute des demandes HTTPS. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           IIOP_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions IIOP. Les valeurs valides sont comprises entre 1 et
               65535. Sous les systèmes UNIX, la création de sockets qui
               écoutent sur les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           IIOP_SSL_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions IIOP sécurisées. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           IIOP_SSL_MUTUALAUTH_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions IIOP sécurisées avec authentification client. Les
               valeurs valides sont comprises entre 1 et 65535. Sous les
               systèmes UNIX, la création de sockets qui écoutent sur les
               ports 1 à 1024 nécessite des privilèges de superutilisateur.

           JAVA_DEBUGGER_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions au débogueur Java Platform Debugger Architecture
               (JPDA)

               . Les valeurs valides sont comprises entre 1 et 65535. Sous les
               systèmes UNIX, la création de sockets qui écoutent sur les
               ports 1 à 1024 nécessite des privilèges de superutilisateur.

           JMS_PROVIDER_PORT
               Cette propriété spécifie le numéro de port pour le fournisseur
               Java Message Service. Les valeurs valides sont comprises entre
               1 et 65535. Sous les systèmes UNIX, la création de sockets qui
               écoutent sur les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           JMX_SYSTEM_CONNECTOR_PORT
               Cette propriété spécifie le numéro du port d'écoute du
               connecteur JMX. Les valeurs valides sont comprises entre 1 et
               65535. Sous les systèmes UNIX, la création de sockets qui
               écoutent sur les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           OSGI_SHELL_TELNET_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions au shell Apache Felix Remote Shell . Ce shell
               utilise le service shell Felix pour interagir avec le
               sous-système de gestion du module OSGi. Les valeurs valides
               sont comprises entre 1 et 65535. Sous les systèmes UNIX, la
               création de sockets qui écoutent sur les ports 1 à 1024
               nécessite des privilèges de superutilisateur.

       --properties
           Cette option définit les propriétés du cluster. Les propriétés
           disponibles sont les suivantes :

           GMS_DISCOVERY_URI_LIST
               Emplacement des instances GlassFish Server du cluster à
               utiliser pour repérer le cluster. Cette propriété n'est
               obligatoire que si le service de gestion de groupes (GMS)
               n'utilise pas la multidiffusion pour les messages.

               Les valeurs valides pour cette propriété sont les suivantes :

               ·   Liste d'URI séparés par des virgules. Chaque URI doit
                   localiser une instance GlassFish Server ou le serveur DAS.
                   Ce format est obligatoire si plusieurs instances GlassFish
                   Server sont en cours d'exécution sur le même hôte.

                   Le format de chaque URI de la liste est le suivant :

                   scheme://host-name-or -IP-address:port

                   ·   scheme est le schéma d'URI, c'est-à-dire tcp.

                   ·   host-name-or -IP-address est le nom de l'hôte ou
                       l'adresse IP de l'hôte sur lequel l'instance est en
                       cours d'exécution.

                   ·   port est le numéro du port sur lequel l'instance écoute
                       les messages provenant du GMS. La propriété système
                       GMS_LISTENER_PORT-clustername doit être définie pour
                       l'instance. Pour plus d'informations sur la définition
                       de cette propriété système pour une instance,
                       reportez-vous à Discovering a Cluster When Multicast
                       Transport Is Unavailable dans le manuel Oracle
                       GlassFish Server High Availability Administration
                       Guide.

               ·   Liste d'adresses IP ou de noms d'hôte séparés par des
                   virgules sur lesquels le serveur DAS ou les instances sont
                   exécutés. La liste peut contenir une combinaison d'adresses
                   IP et de noms d'hôte. Utilisez ce format uniquement si une
                   instance incluse dans un cluster est en cours d'exécution
                   sur chaque hôte. La valeur de la propriété
                   GMS_LISTENER_PORT doit être unique pour chaque cluster du
                   domaine.

               ·   Mot-clé generate. Vous pouvez utiliser ce format uniquement
                   si une instance de cluster est exécutée sur chaque hôte et
                   que le serveur DAS est exécuté sur un hôte distinct.
                   Plusieurs instances situées sur un même hôte ne peuvent pas
                   être membres du même cluster. La valeur de la propriété
                   GMS_LISTENER_PORT doit être unique pour chaque cluster du
                   domaine.

           GMS_LISTENER_PORT
               Numéro du port sur lequel le cluster écoute les messages du
               GMS.

               La valeur par défaut est une référence à la propriété système
               GMS_LISTENER_PORT-cluster-name. Par défaut, la propriété
               système n'est pas définie. Dans ce cas, le GMS sélectionne un
               port libre dans la plage définie par les propriétés
               GMS_TCPSTARTPORT et GMS_TCPENDPORT. Par défaut, cette plage est
               comprise entre 9090 et 9200. Dans la plupart des cas, le
               comportement par défaut est suffisant.

               Néanmoins, si le GMS n'utilise pas la multidiffusion pour les
               messages, la propriété GMS_LISTENER_PORT doit spécifier un
               numéro de port valide pour toutes les instances GlassFish
               Server du cluster. Afin que la valeur par défaut respecte cette
               exigence, utilisez une propriété système pour définir le numéro
               de port de chaque instance séparément.

               Par exemple, utilisez la sous-commande create-system-properties
               afin de créer la propriété système
               GMS_LISTENER_PORT-cluster-name pour le serveur DAS. Ensuite,
               pour chaque instance du cluster, définissez la propriété
               système GMS_LISTENER_PORT-cluster-name sur le numéro de port
               sur lequel l'instance écoute les messages provenant du GMS. La
               valeur par défaut de la propriété GMS_LISTENER_PORT du cluster
               fait référence à cette propriété système.

           GMS_LOOPBACK
               Cette option indique si une instance peut recevoir des messages
               de niveau application qu'elle envoie elle-même vers le cluster.

               Les valeurs possibles sont les suivantes :

               false
                   L'instance ne peut pas recevoir de messages qu'elle a
                   elle-même envoyés (valeur par défaut).

               true
                   L'instance peut recevoir des messages qu'elle a elle-même
                   envoyés. Utilisez ce paramètre pour tester une instance
                   seule dans un cluster.

           GMS_MULTICAST_TIME_TO_LIVE
               Nombre maximal d'itérations ou de transmissions qu'un message
               de multidiffusion peut subir pour les types d'événement
               suivants avant d'être supprimé :

               ·   Détection de groupe

               ·   Signaux d'activité du membre

               ·   Modifications d'appartenance

               Pour une meilleure adéquation avec la configuration du réseau
               sur lequel le serveur DAS et les instances incluses dans un
               cluster sont déployés, définissez une valeur aussi faible que
               possible. Pour déterminer la plus petite valeur possible pour
               votre système, utilisez la sous-commande validate-multicast(1).

               La valeur 0 permet de s'assurer que les messages de
               multidiffusion ne quittent jamais l'hôte à partir duquel ils
               sont diffusés.

               La valeur 1 risque d'empêcher la diffusion des messages entre
               les hôtes d'un même sous-réseau connectés via un commutateur ou
               un routeur.

               La valeur par défaut (4) permet de s'assurer que les messages
               sont correctement transmis à tous les membres du cluster dans
               les réseaux sur lesquels les hôtes sont connectés par des
               commutateurs ou des routeurs.

           GMS_TCPENDPORT
               Numéro de port maximal de la plage dans laquelle le GMS
               sélectionne un port libre si la propriété système
               GMS_LISTENER_PORT-cluster-name n'est pas définie. La valeur par
               défaut est 9200.

           GMS_TCPSTARTPORT
               Numéro de port minimal de la plage dans laquelle le GMS
               sélectionne un port libre si la propriété système
               GMS_LISTENER_PORT-cluster-name n'est pas définie. La valeur par
               défaut est 9090.

       --gmsenabled
           Cette option indique si le GMS est activé pour le cluster.

           Les valeurs possibles sont les suivantes :

           true
               Le GMS est activé pour le cluster (par défaut).

               Lorsque le GMS est activé pour un cluster, il est démarré dans
               chaque instance de serveur, dans le cluster et dans le serveur
               DAS. Le serveur DAS participe à chaque cluster pour lequel
               cette option a la valeur true.

           false
               Le GMS est désactivé pour le cluster.

       --multicastaddress
           Adresse sur laquelle le GMS écoute les événements de groupe. Cette
           option doit indiquer une adresse de multidiffusion comprise entre
           224.0.0.0 et 239.255.255.255. La valeur par défaut est 228.9.XX.
           YY, XX et YY étant des valeurs indépendantes générées
           automatiquement, comprises entre 0 et 255.

       --multicastport
           Numéro du port de communication sur lequel le GMS écoute les
           événements de groupe. Cette option doit spécifier un numéro de port
           valide compris entre 2048 et 49151. La valeur par défaut est
           générée automatiquement dans cette plage.

       --bindaddress
           Adresse IP de l'interface réseau à laquelle le GMS est lié. Cette
           option doit spécifier l'adresse IP d'une interface réseau locale.
           La valeur par défaut correspond à toutes les adresses de
           l'interface réseau publique.

           Sur un ordinateur multiréseau, cette option permet de configurer
           l'interface réseau utilisée pour le GMS. Un ordinateur à connexions
           multiples possède au moins deux interfaces réseau.

           Afin d'indiquer une adresse valide pour toutes les instances
           GlassFish Server du cluster, définissez l'adresse de chaque
           instance séparément à l'aide d'une propriété système.

           Par exemple, utilisez la sous-commande create-system-properties
           pour créer la propriété système
           GMS-BIND-INTERFACE-ADDRESS-cluster-name. Définissez ensuite
           l'option --bindaddress de cette sous-commande sur
           ${GMS-BIND-INTERFACE-ADDRESS-cluster-name} pour indiquer la
           propriété système. Enfin, pour chaque instance du cluster,
           définissez la propriété système
           GMS-BIND-INTERFACE-ADDRESS-cluster-name sur l'adresse d'interface
           réseau requise sur l'ordinateur de l'instance.

       --hosts
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --haagentport
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --haadminpassword
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --haadminpasswordfile
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --devicesize
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --haproperty
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --autohadb
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

       --portbase
           Ne spécifiez pas cette option. Elle est conservée pour assurer la
           compatibilité avec les versions antérieures. Si vous spécifiez
           cette option, aucune erreur de syntaxe ne survient. Au lieu de
           cela, la sous-commande est exécutée et affiche un message
           d'avertissement indiquant que l'option est ignorée.

OPÉRANDES
       cluster-name
           Nom du cluster.

           Le nom doit respecter les exigences suivantes :

           ·   Il ne peut contenir que des caractères ASCII.

           ·   Il doit commencer par une lettre, un chiffre ou un trait de
               soulignement.

           ·   Il ne peut contenir que les caractères suivants :

               ·   Lettres minuscules

               ·   Lettres majuscules

               ·   Chiffres

               ·   Trait d'union

               ·   Point

               ·   Trait de soulignement

           ·   Le nom doit être unique dans le domaine et il ne doit pas
               s'agir du nom d'un autre cluster, d'une configuration, d'une
               instance GlassFish Server ou d'un noeud.

           ·   Le nom ne doit pas être domain, server ou tout autre mot-clé
               réservé par GlassFish Server.

           Si la sous-commande configure-jms-cluster(1) sert à configurer un
           cluster Message Queue afin de fournir des services JMS au cluster
           GlassFish Server, la longueur du nom du cluster GlassFish Server
           sera peut-être limitée :

           ·   Si clustertype a la valeur enhanced dans la sous-commande
               configure-jms-cluster(1), le nom ne peut pas comporter plus de
               n–21 caractères, n représentant la longueur maximale autorisée
               par la base de données pour le nom de table.

           ·   Si configstoretype a la valeur shareddb dans la sous-commande
               configure-jms-cluster(1), le nom ne peut pas comporter plus de
               n–19 caractères, n représentant la longueur maximale autorisée
               par la base de données pour le nom de table.

EXEMPLES
       Exemple 1, Création d'un cluster
           Cet exemple montre comment créer un cluster nommé ltscluster pour
           lequel le port 1169 sert à sécuriser les connexions IIOP. L'option
           --config n'étant pas indiquée, le cluster fait référence à une
           copie de la configuration nommée default-config, ltscluster-config.

               asadmin> create-cluster
               --systemproperties IIOP_SSL_LISTENER_PORT=1169
               ltscluster
               Command create-cluster executed successfully.

       Exemple 2, Création d'un cluster avec une liste d'URI pour le repérage
       du cluster
           Cet exemple montre comment créer un cluster nommé tcpcluster. Dans
           cet exemple, le GMS n'utilise pas la multidiffusion pour les
           messages et plusieurs instances résident sur le même hôte. Par
           conséquent, la propriété GMS_DISCOVERY_URI_LIST est définie sur
           l'emplacement des instances GlassFish Server à utiliser pour le
           repérage du cluster. Ces instances résident sur l'hôte ayant
           l'adresse IP 10.152.23.224 et écoutent les événements du GMS sur
           les ports 9090, 9091 et 9092.

           Pour différencier les deux-points (:) dans les URI des séparateurs
           d'une liste de propriétés, les deux-points des URI sont neutralisés
           par des apostrophes (') et des barres obliques inverses (\). Pour
           plus d'informations sur les caractères d'échappement dans les
           options de l'utilitaire asadmin, reportez-vous à la page d'aide
           asadmin(1M).

           Cet exemple considère que le port sur lequel chaque instance écoute
           les messages du GMS est défini indépendamment pour l'instance via
           la propriété système GMS_LISTENER_PORT-tcpcluster. Pour plus
           d'informations sur la définition du port sur lequel une instance
           écoute les messages du GMS, reportez-vous à Discovering a Cluster
           When Multicast Transport Is Unavailable dans le manuel Oracle
           GlassFish Server High Availability Administration Guide.

               asadmin> create-cluster --properties GMS_DISCOVERY_URI_LIST=
               tcp'\\:'//10.152.23.224'\\:'9090,
               tcp'\\:'//10.152.23.224'\\:'9091,
               tcp'\\:'//10.152.23.224'\\:'9092 tcpcluster
               Command create-cluster executed successfully.

       Exemple 3, Création d'un cluster avec une liste d'adresses IP pour le
       repérage du cluster
           Cet exemple montre comment créer un cluster nommé ipcluster. Dans
           cet exemple, le GMS n'utilise pas la multidiffusion pour les
           messages et une seule instance incluse dans un cluster réside sur
           chaque hôte. Par conséquent, la propriété GMS_DISCOVERY_URI_LIST
           est définie sur les adresses IP des hôtes exécutant les instances à
           utiliser pour le repérage du cluster. Le cluster écoute les
           messages provenant du GMS sur le port 9090.

               asadmin> create-cluster --properties 'GMS_DISCOVERY_URI_LIST=
               10.152.23.225,10.152.23.226,10.152.23.227,10.152.23.228:
               GMS_LISTENER_PORT=9090' ipcluster
               Command create-cluster executed successfully.

       Exemple 4, Création d'un cluster avec une liste générée d'instances
       pour le repérage du cluster
           Cet exemple montre comment créer un cluster nommé gencluster. Dans
           cet exemple, le GMS n'utilise pas la multidiffusion pour les
           messages, une seule instance du cluster exécutée sur chaque hôte et
           le serveur DAS est en cours d'exécution sur un hôte distinct. Par
           conséquent, la propriété GMS_DISCOVERY_URI_LIST est définie sur le
           mot-clé generate afin de générer la liste des instances à utiliser
           pour le repérage du cluster. Le cluster écoute les messages
           provenant du GMS sur le port 9090.

               asadmin> create-cluster --properties 'GMS_DISCOVERY_URI_LIST=generate:
               GMS_LISTENER_PORT=9090' gencluster
               Command create-cluster executed successfully.

STATUT DE SORTIE
       0
           commande correctement exécutée

       1
           erreur lors de l'exécution de la commande

VOIR AUSSI
       create-application-ref(1), create-instance(1), create-jdbc-resource(1),
       create-local-instance(1), create-resource-ref(1), delete-cluster(1),
       delete-instance(1), delete-local-instance(1), deploy(1),
       list-clusters(1), start-cluster(1), stop-cluster(1),
       validate-multicast(1)

       asadmin(1M)

       Discovering a Cluster When Multicast Transport Is Unavailable dans le
       manuel Oracle GlassFish Server High Availability Administration Guide

       Apache Felix Remote Shell
       (http://felix.apache.org/site/apache-felix-remote-shell.html), Java
       Platform Debugger Architecture (JPDA)
       (http://java.sun.com/javase/technologies/core/toolsapis/jpda/)

Java EE 7                         4 jan 2012                 create-cluster(1)
