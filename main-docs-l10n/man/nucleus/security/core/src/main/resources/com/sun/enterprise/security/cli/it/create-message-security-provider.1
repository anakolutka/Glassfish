create-message-security-Comandirsecondari dcreate-message-security-provider(1)

NOME
       create-message-security-provider - consente agli amministratori di
       creare un provider di sicurezza messaggi che specifica le modalità di
       protezione dei messaggi SOAP.

SINTASSI
           create-message-security-provider [--help]
           [--target target]
           --classname provider_class
           [--layer message_layer] [--providertype provider_type]
           [--requestauthsource request_auth_source ]
           [--requestauthrecipient request_auth_recipient ]
           [--responseauthsource response_auth_source ]
           [--responseauthrecipient response_auth_recipient ]
           [--isdefaultprovider] [--property name=value[:name=value]*]
           provider_name

DESCRIZIONE
       Il comando secondario create-message-security-provider consente
       all'amministratore di creare un provider di sicurezza messaggi per il
       servizio di sicurezza che specifica come verranno protetti i messaggi
       SOAP.

       Questo comando è supportato solo in modalità remota.

OPZIONI
       Se per un'opzione è disponibile un'abbreviazione, questa precede il
       nome esteso. Le opzioni brevi presentano una lineetta, mentre le
       opzioni lunghe ne hanno due.

       --help, -?
           Visualizza il testo della Guida per il comando secondario.

       --target
           Specifica la destinazione per cui si crea il provider di sicurezza
           messaggi. Di seguito sono riportati i valori validi.

           server
               Crea il provider per l'istanza server predefinita server ed è
               il valore predefinito.

           domain
               Crea il provider per il dominio.

           cluster_name
               Crea il provider per ogni istanza server del cluster.

           instance_name
               Crea il provider per un'istanza server particolare.

       --classname
           Definisce la classe di implementazione Java del provider. I
           provider di autenticazione client devono implementare l'interfaccia
            com.sun.enterprise. security.jauth.ClientAuthModule. I provider
           lato server devono implementare l'interfaccia
           com.sun.enterprise.security jauth.ServerAuthModule. Un provider può
           implementare entrambe le interfacce, ma l'interfaccia implementata
           deve corrispondere al tipo di provider.

       --layer
           L'entità layer di messaggio utilizzata per definire il valore
           dell'attributo auth-layer degli elementi message-security-config.
           Il valore predefinito è HttpServlet. Un'altra opzione è SOAP.

       --providertype
           Determina se il provider deve essere utilizzato come provider di
           autenticazione client, provider di autenticazione server o
           entrambi. Le opzioni valide per questa proprietà includono client,
           server e client-server.

       --requestauthsource
           L'attributo auth-source definisce un requisito per l'autenticazione
           del mittente del layer di messaggio (ad esempio nome utente e
           password) o per l'autenticazione del contenuto (ad esempio firma
           digitale) da applicare ai messaggi di richiesta. I valori possibili
           sono sender e content. Se non si specifica questo argomento,
           l'autenticazione di origine della richiesta non è obbligatoria.

       --requestauthrecipient
           L'attributo auth-recipient definisce un requisito per
           l'autenticazione del layer di messaggio del ricevente di un
           messaggio al mittente (ad esempio tramite cifratura XML). I valori
           possibili sono before-content e after-content. Il valore
           predefinito è after-content.

       --responseauthsource
           L'attributo auth-source definisce un requisito per l'autenticazione
           del mittente del layer di messaggio (ad esempio nome utente e
           password) o per l'autenticazione del contenuto (ad esempio firma
           digitale) da applicare ai messaggi di risposta. I valori possibili
           sono sender e content. Se non si specifica questa opzione,
           l'autenticazione di origine della risposta non è obbligatoria.

       --responseauthrecipient
           L'attributo auth-recipient definisce un requisito per
           l'autenticazione del layer di messaggio del ricevente di un
           messaggio al mittente (ad esempio tramite cifratura XML). I valori
           possibili sono before-content e after-content. Il valore
           predefinito è after-content.

       --isdefaultprovider
           L'attributo default-provider viene utilizzato per designare il
           provider come provider predefinito (nel layer) del tipo o dei tipi
           identificati dall'argomento providertype. A questa opzione non è
           associato alcun valore predefinito.

       --property
           Utilizzare questa proprietà per passare valori di proprietà
           specifici del provider al provider nel momento in cui viene
           inizializzato. Le proprietà passate in questo modo possono
           includere alias di chiavi che devono essere utilizzati dal provider
           per ottenere le chiavi da algoritmi di cifratura, keystore, firma,
           standardizzazione e così via.

           È possibile impostare le proprietà riportate di seguito.

           security.config
               Specifica la posizione del file di configurazione della
               sicurezza dei messaggi. Per puntare a un file di configurazione
               nella directory domain-dir/config, usare la proprietà di
               sistema ${com.sun.aas.instanceRoot}/config/. Ad esempio:
               ${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml.
               Il valore predefinito è domain-dir/config/
               wss-serverconfig-1.0.xml.

           debug
               Se l'impostazione è true, consente di eseguire il dump dei
               messaggi di debug del provider server nel log del server. Il
               valore predefinito è false.

           dynamic.username. password
               Se impostata su true, comunica al runtime del provider di
               recuperare il nome utente e la password da CallbackHandler per
               ogni richiesta. Se si imposta false, il nome utente e la
               password per l'elemento o gli elementi wsse:UsernameToken
               vengono raccolti una sola volta, durante l'inizializzazione del
               modulo. Questa proprietà si applica solo per un modulo
               ClientAuthModule. Il valore predefinito è false.

           encryption.key.alias
               Specifica la chiave di cifratura utilizzata dal provider. La
               chiave viene identificata mediante il relativo alias keystore.
               Il valore predefinito è s1as.

           signature.key.alias
               Specifica la chiave di firma utilizzata dal provider. La chiave
               viene identificata mediante il relativo alias keystore. Il
               valore predefinito è s1as.

OPERANDI
       provider_name
           Il nome del provider usato per fare riferimento all'elemento
           provider-config.

ESEMPI
       Esempio 1, Creazione di un provider di sicurezza messaggi
           Nell'esempio riportato di seguito viene illustrato come creare un
           provider di sicurezza messaggi per un client.

               asadmin> create-message-security-provider
               --classname com.sun.enterprise.security.jauth.ClientAuthModule
               --providertype client mySecurityProvider

STATO DI USCITA
       0
           esecuzione del comando riuscita

       1
           errore durante l'esecuzione del comando

VEDERE ANCHE
       delete-message-security-provider(1), list-message-security-providers(1)

       asadmin(1M)

Java EE 7                      22 dicembre create-message-security-provider(1)
