# translation of xml.po to Spanish
# Language es-ES translations for master.xml package.
#
# Automatically generated, 2008.
# Gladys Guerrero Lozano <gguerrer@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-07-25T03:52:15\n"
"PO-Revision-Date: 2009-01-20 11:40+1000\n"
"Last-Translator: Gladys Guerrero Lozano <gguerrer@redhat.com>\n"
"Language-Team: Spanish <fedora-trans-es@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, fuzzy, no-c-format
msgid "Defining beans using XML"
msgstr "Definición de Web Beans utilizando XML"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"So far, we've seen plenty of examples of beans declared using annotations. "
"However, there are a couple of occasions when we can't use annotations to "
"define the bean:"
msgstr ""
"Hasta ahora hemos visto varios ejemplos de Web Beans declarados mediante "
"anotaciones. No obstante, hay un par de ocasiones en que no podemos utilizar "
"anotaciones para definir el Web Bean."

#. Tag: para
#, no-c-format
msgid "when the implementation class comes from some preexisting library, or"
msgstr ""
"cuando la clase de implementación viene de alguna biblioteca preexistente, o"

#. Tag: para
#, fuzzy, no-c-format
msgid "when there should be multiple beans with the same implementation class."
msgstr ""
"cuando debe haber múltiples Web Beans con la misma clase de implementación."

#. Tag: para
#, no-c-format
msgid ""
"One way to address these problems is to write a producer method. Weld offers "
"another option: declare the bean using XML. This feature will hopefully one "
"day be part of the CDI specification. Until then, it remains a portable "
"extension."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Many frameworks use XML to provide metadata relating to Java classes. "
"However, Weld uses a very different approach to specifying the names of Java "
"classes, fields or methods to most other frameworks. Instead of writing "
"class and member names as the string values of XML elements and attributes, "
"Weld lets you use the class or member name as the name of the XML element."
msgstr ""
"Muchos marcos utilizan XML para proporcionar metadatos relacionados con "
"clases de Java. Sin embargo, Web Beans usa un método muy diferente para "
"especificar los nombres de clases de Java, campos o métodos para la mayoría "
"de otros marcos. En lugar de escribir nombres de clase y miembro como "
"valores de cadena de elementos XML y atributos, Web Beans le permite "
"utilizar el nombre de clase o miembro como el nombre del elemento XML."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The advantage of this approach is that you can write an XML schema that "
"prevents spelling errors in your XML document. It's even possible for a tool "
"to generate the XML schema automatically from the compiled Java code. Or, an "
"integrated development environment could perform the same validation without "
"the need for the explicit intermediate generation step."
msgstr ""
"La ventaja de este enfoque es que se puede escribir un esquema de XML que "
"evita errores de ortografía en su documento de XML. Es incluso posible que "
"una herramienta genere automáticamente el esquema XML desde el código de "
"Java compilado. O, un entorno de desarrollo integrado podría realizar la "
"misma validación sin la necesidad de una etapa de generación intermedia "
"explícita."

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring beans"
msgstr "Declaración de clases de Web Bean"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For each Java package, Weld defines a corresponding XML namespace. The "
"namespace is formed by prepending <literal>urn:java:</literal> to the Java "
"package name. For the package <literal>com.mydomain.myapp</literal>, the XML "
"namespace is <literal>urn:java:com.mydomain.myapp</literal>."
msgstr ""
"Para cada paquete de Java, Web Beans define el espacio de nombre de XML "
"correspondiente. El espacio de nombre se forma añadiendo <literal>urn:java:</"
"literal> al nombre de paquete de Java. Para el paquete <literal>com.mydomain."
"myapp</literal>, el espacio de nombre de XML es <literal>urn:java:com."
"mydomain.myapp</literal>."

#. Tag: para
#, no-c-format
msgid ""
"Java types belonging to a package are referred to using an XML element in "
"the namespace corresponding to the package. The name of the element is the "
"name of the Java type. Fields and methods of the type are specified by child "
"elements in the same namespace. If the type is an annotation, members are "
"specified by attributes of the element."
msgstr ""
"Los tipos Java pertenecientes a un paquete se conocen por un elemento XML en "
"el espacio de nombre correspondiente al paquete. El nombre del elemento es "
"el nombre del tipo de Java y los métodos del tipo están especificados por "
"elementos secundarios en el mismo espacio de nombre. Si el tipo es una "
"anotación, los miembros son especificados por atributos del elemento."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"For example, the element <literal>&lt;util:Date/&gt;</literal> in the "
"following XML fragment refers to the class <literal>java.util.Date</literal>:"
msgstr ""
"Por ejemplo, el elemento <literal>&lt;util:Date/&gt;</literal> en el "
"siguiente fragmento XML se refiere a la clase <literal>java.util.Date</"
"literal>:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"And this is all the code we need to declare that <literal>Date</literal> is "
"a bean! An instance of <literal>Date</literal> may now be injected by any "
"other bean:"
msgstr ""
"¡Y este es todo el código que necesitamos para declarar que <literal>Date</"
"literal> es un Web Bean sencillo! Una instancia de <literal>Date</literal> "
"puede ahora ser inyectada por cualquier otro Web Bean:"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring bean metadata"
msgstr "Declaración de metadatos de Web Bean"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"We can declare the scope, deployment type and interceptor binding types "
"using direct child elements of the bean declaration:"
msgstr ""
"Podemos declarar el ámbito, el tipo de despliegue y los tipos de enlace de "
"interceptor mediante elementos directos secundarios de la declaración del "
"Web Bean:"

#. Tag: para
#, fuzzy, no-c-format
msgid "We use exactly the same approach to specify names and qualifiers:"
msgstr ""
"Utilizamos exactamente el mismo método para especificar nombres y tipo de "
"enlace:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Where <literal>@Login</literal> and <literal>@SystemStart</literal> are "
"qualifier annotations types."
msgstr ""
"Donde <literal>@Login</literal> y <literal>@SystemStart</literal> son tipos "
"de anotaciones de enlace."

#. Tag: para
#, fuzzy, no-c-format
msgid "As usual, a bean may support multiple qualifier types:"
msgstr "Como es usual, un Web Bean puede soportar múltiples tipos de enlace:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Interceptors and decorators are beans as well, so they may be declared just "
"like any other bean:"
msgstr ""
"Los interceptores y decoradores son sólo Web Beans sencillos, por "
"consiguiente, pueden ser declarados como cualquier otro Web Bean sencillo:"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring bean members"
msgstr "Declaración de miembros de Web Bean"

#. Tag: para
#, no-c-format
msgid "TODO!"
msgstr "¡TODO!"

#. Tag: title
#, fuzzy, no-c-format
msgid "Declaring inline beans"
msgstr "Declaración de Web Beans en línea"

#. Tag: para
#, fuzzy, no-c-format
msgid "Weld lets us define a bean at an injection point. For example:"
msgstr ""
"Web Beans nos permite definir un Web Bean en el punto de inyección. Por "
"ejemplo:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>&lt;Name&gt;</literal> element declares a bean of scope "
"<literal>@Dependent</literal> and class <literal>Name</literal>, with a set "
"of initial field values. This bean has a special, container-generated "
"qualifier and is therefore injectable only to the specific injection point "
"at which it is declared."
msgstr ""
"El elemento <literal>&lt;Name&gt;</literal> declara un Web Bean sencillo de "
"ámbito <literal>@Dependent</literal> y clase <literal>Name</literal>, con "
"una serie de valores de campo iniciales. Este Web Bean tiene un enlace de "
"contenedor-generado y es, por lo tanto, inyectable únicamente en el punto de "
"inyección en el cual es declarado."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This simple but powerful feature allows the Weld XML format to be used to "
"specify whole graphs of Java objects. It's not quite a full databinding "
"solution, but it's close!"
msgstr ""
"Esta función simple pero poderosa permite que el formato XML de Web Beans "
"pueda utilizarse para especificar gráficos completos de objetos Java. No es "
"del todo una solución para enlazar datos, pero ¡está cerca!"

#. Tag: title
#, no-c-format
msgid "Using a schema"
msgstr "Uso de un esquema"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If we want our XML document format to be authored by people who aren't Java "
"developers, or who don't have access to our code, we need to provide a "
"schema. There's nothing specific to Weld about writing or using the schema."
msgstr ""
"Si deseamos que nuestro formato de documento XML sea creado por personas que "
"no son desarrolladores de Java, o que no tienen acceso a nuestro código, "
"necesitamos proporcionar un esquema. No hay nada específico de Web Beans "
"sobre escribir o utilizar el esquema."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Writing an XML schema is quite tedious. Therefore, the Weld project will "
"provide a tool which automatically generates the XML schema from compiled "
"Java code."
msgstr ""
"La escritura de un esquema XML es bastante tediosa. Por lo tanto, el "
"proyecto de la IR de Web Beans proporcionará una herramienta que genere "
"automáticamente el esquema de XML desde el código de Java compilado."

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<beans xmlns=\"urn:java:javax.beans\"\n"
#~ "   xmlns:util=\"urn:java:java.util\">\n"
#~ "   <util:Date/>\n"
#~ "</beans>]]>"
#~ msgstr ""
#~ "<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
#~ "          xmlns:util=\"urn:java:java.util\">\n"
#~ "\n"
#~ "    <util:Date/>\n"
#~ "\n"
#~ "</WebBeans>]]>"

#, fuzzy
#~ msgid "<![CDATA[private @Inject Date date;]]>"
#~ msgstr "<![CDATA[@Current Date date]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:ShoppingCart>\n"
#~ "   <SessionScoped/>\n"
#~ "   <myfwk:Transactional requiresNew=\"true\"/>\n"
#~ "   <myfwk:Secure/>\n"
#~ "</myapp:ShoppingCart>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:ShoppingCart>\n"
#~ "    <SessionScoped/>\n"
#~ "    <myfwk:Transactional requiresNew=\"true\"/>\n"
#~ "    <myfwk:Secure/>\n"
#~ "</myapp:ShoppingCart>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<util:Date>\n"
#~ "   <Named>currentTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "   <SessionScoped/>\n"
#~ "   <myapp:Login/>\n"
#~ "   <Named>loginTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "   <ApplicationScoped/>\n"
#~ "   <myapp:SystemStart/>\n"
#~ "   <Named>systemStartTime</Named>\n"
#~ "</util:Date>]]>"
#~ msgstr ""
#~ "<![CDATA[<util:Date>\n"
#~ "    <Named>currentTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "    <SessionScoped/>\n"
#~ "    <myapp:Login/>\n"
#~ "    <Named>loginTime</Named>\n"
#~ "</util:Date>\n"
#~ "\n"
#~ "<util:Date>\n"
#~ "    <ApplicationScoped/>\n"
#~ "    <myapp:SystemStart/>\n"
#~ "    <Named>systemStartTime</Named>\n"
#~ "</util:Date>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[private @Inject Date currentTime;\n"
#~ "private @Login Date loginTime;\n"
#~ "private @SystemStart Date systemStartTime;]]>"
#~ msgstr ""
#~ "<![CDATA[@Current Date currentTime;\n"
#~ "@Login Date loginTime;\n"
#~ "@SystemStart Date systemStartTime;]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
#~ "   <myapp:PayByCheque/>\n"
#~ "   <myapp:Asynchronous/>\n"
#~ "</myapp:AsynchronousChequePaymentProcessor>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
#~ "    <myapp:PayByCheque/>\n"
#~ "    <myapp:Asynchronous/>\n"
#~ "</myapp:AsynchronousChequePaymentProcessor>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myfwk:TransactionInterceptor>\n"
#~ "   <Interceptor/>\n"
#~ "   <myfwk:Transactional/>\n"
#~ "</myfwk:TransactionInterceptor>]]>"
#~ msgstr ""
#~ "<![CDATA[<myfwk:TransactionInterceptor>\n"
#~ "    <Interceptor/>\n"
#~ "    <myfwk:Transactional/>\n"
#~ "</myfwk:TransactionInterceptor>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<myapp:System>\n"
#~ "   <ApplicationScoped/>\n"
#~ "   <myapp:admin>\n"
#~ "      <myapp:Name>\n"
#~ "         <myapp:firstname>Gavin</myapp:firstname>\n"
#~ "         <myapp:lastname>King</myapp:lastname>\n"
#~ "         <myapp:email>gavin@hibernate.org</myapp:email>\n"
#~ "      </myapp:Name>\n"
#~ "   </myapp:admin>\n"
#~ "</myapp:System>]]>"
#~ msgstr ""
#~ "<![CDATA[<myapp:System>\n"
#~ "    <ApplicationScoped/>\n"
#~ "    <myapp:admin>\n"
#~ "        <myapp:Name>\n"
#~ "            <myapp:firstname>Gavin</myapp:firstname>\n"
#~ "            <myapp:lastname>King</myapp:lastname>\n"
#~ "            <myapp:email>gavin@hibernate.org</myapp:email>\n"
#~ "        </myapp:Name>\n"
#~ "    </myapp:admin>\n"
#~ "</myapp:System>]]>"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<beans xmlns=\"urn:java:javax.beans\"\n"
#~ "   xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
#~ "   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "   xsi:schemaLocation=\"urn:java:javax.beans http://java.sun.com/jee/"
#~ "beans-1.0.xsd\n"
#~ "   urn:java:com.mydomain.myapp http://mydomain.com/xsd/myapp-1.2.xsd\">\n"
#~ "\n"
#~ "   <myapp:System>\n"
#~ "      ...\n"
#~ "   </myapp:System>\n"
#~ "\n"
#~ "</beans>]]>"
#~ msgstr ""
#~ "<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
#~ "          xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
#~ "          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "          xsi:schemaLocation=\"urn:java:javax.webbeans http://java.sun."
#~ "com/jee/web-beans-1.0.xsd\n"
#~ "                              urn:java:com.mydomain.myapp http://mydomain."
#~ "com/xsd/myapp-1.2.xsd\">\n"
#~ "\n"
#~ "    <myapp:System>\n"
#~ "        ...\n"
#~ "    </myapp:System>\n"
#~ "\n"
#~ "</WebBeans>]]>"

#~ msgid "In either of these cases, Web Beans gives us two options:"
#~ msgstr "En estos casos, Web Beans nos ofrece dos opciones:"

#~ msgid "write a producer method, or"
#~ msgstr "escribir un método de productor, o"

#~ msgid "declare the Web Bean using XML."
#~ msgstr "declarar el Web Bean utilizando XML"
