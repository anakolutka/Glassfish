<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:sch="http://www.ascc.net/xml/schematron"
         xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:x="http://www.w3.org/1999/xhtml"
         xmlns:ias="http://www.sun.com/ias/validation"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">


  <define name="security-service">
    <element name="security-service">
      <x:div class='dtd'>
        The security service element defines parameters and
        configuration information needed by the core J2EE security
        service. Some container-specific security configuration
        elements are in the various container configuration elements
        and not here. SSL configuration is also elsewhere. At this
        time the security service configuration consists of a set of
        authentication realms. A number of top-level attributes are
        defined as well.
      </x:div>
      <ref name="security-service-attlist"/>
      <oneOrMore>
        <ref name="auth-realm"/>
      </oneOrMore>
      <oneOrMore>
        <ref name="jacc-provider"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="audit-module"/>
      </zeroOrMore>
      <zeroOrMore>
	<ref name="message-security-config">
	  <x:div class='dtd'>
	    Optional list of layer specific lists of configured
	    message security providers.
	  </x:div>
	</ref>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="property"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="security-service-attlist" combine="interleave">
    <optional>
      <attribute name="default-realm" a:defaultValue="file" ias:references-to="auth-realms">
        <x:div class='dtd'>
          Specifies which realm (by name) is used by default when no
          realm is specifically requested. The file realm is the
          common default.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="default-principal">
        <x:div class='dtd'>
          Used as the identity of default security contexts when
          necessary and no principal is provided.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="default-principal-password">
        <x:div class='dtd'>
          Password of default principal.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="anonymous-role" a:defaultValue="AttributeDeprecated">
        <x:div class='dtd'>
          This attribute is deprecated.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="audit-enabled" a:defaultValue="false">
        <x:div class='dtd'>
          If true, additional access logging is performed to provide
          audit information.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="jacc" a:defaultValue="default" ias:references-to="jacc-providers">
        <x:div class='dtd'>
          Specifies the name of the jacc-provider element to use for
          setting up the JACC infrastructure. The default value
          "default" does not need to be changed unless adding a custom
          JACC provider.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="audit-modules" a:defaultValue="default" ias:references-to="audit-modules">
        <x:div class='dtd'>
          Optional list of audit provider modules which will be used
          by the audit subsystem. The default value refers to the
          internal log-based audit module.
        </x:div>
      </attribute>
    </optional>
    <optional>
      <attribute name="activate-default-principal-to-role-mapping" a:defaultValue="false">
        <x:div class='dtd'>
           Causes the appserver to apply a default principal to role mapping, 
           to any application that does not have an application specific mapping
           defined. Every role is mapped to a same-named (as the role) instance
           of a java.security.Principal implementation class 
           (see mapped-principal-class). This behavior is similar to that of 
           Tomcat servlet container. It is off by default.
        </x:div>
        <ref name="boolean"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="mapped-principal-class">
        <x:div class='dtd'>
            This attribute is used to customize the java.security.Principal 
            implementation class used in the default principal to role mapping.
            This attribute is optional. When it is not specified,
            com.sun.enterprise.deployment.Group implementation of 
            java.security.Principal is used. The value of this attribute is 
            only relevant when the activate-default principal-to-role-mapping
            attribute is set to true.
        </x:div>
      </attribute>
    </optional>
  </define>
  
</grammar>
